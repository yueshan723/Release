<files codepage='65001' xmlns:dt='urn:schemas-microsoft-com:datatypes'>
	<file name='zb_system\function\c_system_plugin.php' crc32='24DDE1C7'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\c_system_debug.php' crc32='B591D3CD'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KLyoqDQogKiDplJnor6/osIPor5UuDQogKg0KICogQGNvcHlyaWdodCAoQykgUmFpbmJvd1NvZnQgU3R1ZGlvDQogKi8NCg0KLyoqDQogKiDmmL7npLrlhajlsYDlj5jph48uDQogKg0KICogQHJldHVybiBtaXhlZA0KICoNCiAqIEBzaW5jZSAxLjMuMTQwNjE0DQogKg0KICogQHRvZG8g5LiL54mI6L2s5YiwZGVidWfpobUNCiAqLw0KZnVuY3Rpb24gRGVidWdfUHJpbnRHbG9iYWxzKCkNCnsNCiAgICAkYSA9IGFycmF5KCk7DQogICAgZm9yZWFjaCAoJEdMT0JBTFMgYXMgJG4gPT4gJHYpIHsNCiAgICAgICAgJGFbXSA9ICRuOw0KICAgIH0NCg0KICAgIHJldHVybiBwcmludF9yKCRhLCB0cnVlKTsNCn0NCg0KLyoqDQogKiAg5omT5Y2w5YWo5bGASW5jbHVkZeaWh+S7ti4NCiAqDQogKiBAcmV0dXJuIHN0cmluZw0KICoNCiAqIEBzaW5jZSAxLjMNCiAqDQogKiBAdG9kbyDkuIvniYjovazliLBkZWJ1Z+mhtQ0KICovDQpmdW5jdGlvbiBEZWJ1Z19QcmludEluY2x1ZGVmaWxlcygpDQp7DQogICAgJGEgPSBhcnJheSgpOw0KICAgIGZvcmVhY2ggKGdldF9pbmNsdWRlZF9maWxlcygpIGFzICRuID0+ICR2KSB7DQogICAgICAgICRhW10gPSAkdjsNCiAgICB9DQoNCiAgICByZXR1cm4gcHJpbnRfcigkYSwgdHJ1ZSk7DQp9DQoNCi8qKg0KICogIOaJk+WNsOWFqOWxgOiHquWumuS5ieW4uOmHjy4NCiAqDQogKiBAcmV0dXJuIHN0cmluZw0KICoNCiAqIEBzaW5jZSAxLjMNCiAqDQogKiBAdG9kbyDkuIvniYjovazliLBkZWJ1Z+mhtQ0KICovDQpmdW5jdGlvbiBEZWJ1Z19QcmludENvbnN0YW50cygpDQp7DQogICAgJGEgPSBnZXRfZGVmaW5lZF9jb25zdGFudHModHJ1ZSk7DQogICAgaWYgKGlzc2V0KCRhWyd1c2VyJ10pKSB7DQogICAgICAgICRhID0gJGFbJ3VzZXInXTsNCiAgICB9DQoNCiAgICByZXR1cm4gcHJpbnRfcigkYSwgdHJ1ZSk7DQp9DQoNCi8qKg0KICogUmV0dXJuIHRydWUgaWYgYSBlcnJvciBjYW4gYmUgaWdub3JlZC4NCiAqDQogKiBAcGFyYW0gaW50ICRlcnJubw0KICoNCiAqIEByZXR1cm4gYm9vbA0KICovDQpmdW5jdGlvbiBEZWJ1Z19JZ25vcmVFcnJvcigkZXJybm8pDQp7DQogICAgaWYgKFpCbG9nRXhjZXB0aW9uOjokaXN3YXJuaW5nID09IGZhbHNlKSB7DQogICAgICAgIGlmICgkZXJybm8gPT0gRV9XQVJOSU5HKSB7DQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfQ0KDQogICAgICAgIGlmICgkZXJybm8gPT0gRV9VU0VSX1dBUk5JTkcpIHsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9DQogICAgfQ0KICAgIGlmIChaQmxvZ0V4Y2VwdGlvbjo6JGlzc3RyaWN0ID09IGZhbHNlKSB7DQogICAgICAgIGlmICgkZXJybm8gPT0gRV9TVFJJQ1QpIHsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKCRlcnJubyA9PSBFX05PVElDRSkgew0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoJGVycm5vID09IEVfVVNFUl9OT1RJQ0UpIHsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgLy8g5bGP6JS957O757uf55qE6ZSZ6K+v77yM6ZiyWkJQ5oql57O757uf55qE6ZSZ6K+v77yM5LiN6L+H5Lmf5pyJ5Y+v6IO95a+86Ie0WkJQ5YaF55qEREVQUkVDQVRFROmUmeivr+S5n+iiq+Wxj+iUveS6hg0KICAgIGlmICgkZXJybm8gPT0gRV9DT1JFX1dBUk5JTkcpIHsNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KDQogICAgaWYgKCRlcnJubyA9PSBFX0NPTVBJTEVfV0FSTklORykgew0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQoNCiAgICBpZiAoZGVmaW5lZCgnRV9ERVBSRUNBVEVEJykgJiYgJGVycm5vID09IEVfREVQUkVDQVRFRCkgew0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQoNCiAgICBpZiAoZGVmaW5lZCgnRV9VU0VSX0RFUFJFQ0FURUQnKSAmJiAkZXJybm8gPT0gRV9VU0VSX0RFUFJFQ0FURUQpIHsNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KDQogICAgLy9FX1VTRVJfRVJST1INCiAgICAvL0VfUkVDT1ZFUkFCTEVfRVJST1INCg0KICAgIGlmIChkZWZpbmVkKCdaQlBfRVJST1JQUk9DRVNTSU5HJykpIHsNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KDQogICAgcmV0dXJuIGZhbHNlOw0KfQ0KDQovKioNCiAqIOmUmeivr+iwg+W6puaPkOekui4NCiAqDQogKiBAcGFyYW0gaW50ICAgICRlcnJubyAgIOmUmeivr+e6p+WIqw0KICogQHBhcmFtIHN0cmluZyAkZXJyc3RyICDplJnor6/kv6Hmga8NCiAqIEBwYXJhbSBzdHJpbmcgJGVycmZpbGUg6ZSZ6K+v5paH5Lu25ZCNDQogKiBAcGFyYW0gaW50ICAgICRlcnJsaW5lIOmUmeivr+ihjA0KICoNCiAqIEByZXR1cm4gYm9vbA0KICovDQpmdW5jdGlvbiBEZWJ1Z19FcnJvcl9IYW5kbGVyKCRlcnJubywgJGVycnN0ciwgJGVycmZpbGUsICRlcnJsaW5lKQ0Kew0KICAgIGlmIChaQmxvZ0V4Y2VwdGlvbjo6JGlzZGlzYWJsZSA9PSB0cnVlKSB7DQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIGZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX0RlYnVnX0hhbmRsZXInXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAgICAgJGZwcmV0dXJuID0gJGZwbmFtZSgnRXJyb3InLCBhcnJheSgkZXJybm8sICRlcnJzdHIsICRlcnJmaWxlLCAkZXJybGluZSkpOw0KICAgIH0NCg0KICAgICRfU0VSVkVSWydfZXJyb3JfY291bnQnXSA9ICRfU0VSVkVSWydfZXJyb3JfY291bnQnXSArIDE7DQoNCiAgICBpZiAoWkJsb2dFeGNlcHRpb246OiRpc2xvZ2Vycm9yID09IHRydWUpIHsNCiAgICAgICAgTG9ncyh2YXJfZXhwb3J0KGFycmF5KCdFcnJvcicsICRlcnJubywgJGVycnN0ciwgJGVycmZpbGUsICRlcnJsaW5lKSwgdHJ1ZSksIHRydWUpOw0KICAgIH0NCg0KICAgIGlmIChpc19yZWFkYWJsZSgkZXJyZmlsZSkpIHsNCiAgICAgICAgJGEgPSBhcnJheV9zbGljZShmaWxlKCRlcnJmaWxlKSwgbWF4KDAsICRlcnJsaW5lIC0gMSksIDEsIHRydWUpOw0KICAgICAgICAkcyA9IHJlc2V0KCRhKTsNCiAgICAgICAgaWYgKHN0cnBvcygkcywgJ0AnKSAhPT0gZmFsc2UpIHsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgaWYgKERlYnVnX0lnbm9yZUVycm9yKCRlcnJubykpIHsNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KDQogICAgJHpiZSA9IFpCbG9nRXhjZXB0aW9uOjpHZXRJbnN0YW5jZSgpOw0KICAgICR6YmUtPlBhcnNlRXJyb3IoJGVycm5vLCAkZXJyc3RyLCAkZXJyZmlsZSwgJGVycmxpbmUpOw0KICAgICR6YmUtPkRpc3BsYXkoKTsNCg0KICAgIHJldHVybiB0cnVlOw0KfQ0KDQovKioNCiAqIOW8guW4uOWkhOeQhi4NCiAqDQogKiBAcGFyYW0gRXhjZXB0aW9uICRleGNlcHRpb24g5byC5bi45LqL5Lu2DQogKg0KICogQHJldHVybiBib29sDQogKi8NCmZ1bmN0aW9uIERlYnVnX0V4Y2VwdGlvbl9IYW5kbGVyKCRleGNlcHRpb24pDQp7DQogICAgaWYgKFpCbG9nRXhjZXB0aW9uOjokaXNkaXNhYmxlID09IHRydWUpIHsNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KDQogICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fRGVidWdfSGFuZGxlciddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAkZnByZXR1cm4gPSAkZnBuYW1lKCdFeGNlcHRpb24nLCAkZXhjZXB0aW9uKTsNCiAgICB9DQoNCiAgICAkX1NFUlZFUlsnX2Vycm9yX2NvdW50J10gPSAkX1NFUlZFUlsnX2Vycm9yX2NvdW50J10gKyAxOw0KDQogICAgaWYgKFpCbG9nRXhjZXB0aW9uOjokaXNsb2dlcnJvcikgew0KICAgICAgICBMb2dzKHZhcl9leHBvcnQoDQogICAgICAgICAgICBhcnJheSgnRXhjZXB0aW9uJywNCiAgICAgICAgICAgICAgICAkZXhjZXB0aW9uLT5nZXRNZXNzYWdlKCksICRleGNlcHRpb24tPmdldENvZGUoKSwgJGV4Y2VwdGlvbi0+Z2V0RmlsZSgpLCAkZXhjZXB0aW9uLT5nZXRMaW5lKCksDQogICAgICAgICAgICApLCB0cnVlKSwgdHJ1ZSk7DQogICAgfQ0KDQogICAgJHpiZSA9IFpCbG9nRXhjZXB0aW9uOjpHZXRJbnN0YW5jZSgpOw0KICAgICR6YmUtPlBhcnNlRXhjZXB0aW9uKCRleGNlcHRpb24pOw0KICAgICR6YmUtPkRpc3BsYXkoKTsNCg0KICAgIHJldHVybiB0cnVlOw0KfQ0KDQovKioNCiAqIOW9k+acuumUmeivr+WkhOeQhi4NCiAqDQogKiBAcmV0dXJuIGJvb2wNCiAqLw0KZnVuY3Rpb24gRGVidWdfU2h1dGRvd25fSGFuZGxlcigpDQp7DQogICAgaWYgKCRlcnJvciA9IGVycm9yX2dldF9sYXN0KCkpIHsNCiAgICAgICAgaWYgKFpCbG9nRXhjZXB0aW9uOjokaXNkaXNhYmxlID09IHRydWUpIHsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9DQoNCiAgICAgICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fRGVidWdfSGFuZGxlciddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgJGZwcmV0dXJuID0gJGZwbmFtZSgnU2h1dGRvd24nLCAkZXJyb3IpOw0KICAgICAgICB9DQoNCiAgICAgICAgJF9TRVJWRVJbJ19lcnJvcl9jb3VudCddID0gJF9TRVJWRVJbJ19lcnJvcl9jb3VudCddICsgMTsNCg0KICAgICAgICBpZiAoWkJsb2dFeGNlcHRpb246OiRpc2xvZ2Vycm9yKSB7DQogICAgICAgICAgICBMb2dzKHZhcl9leHBvcnQoYXJyYXkoJ1NodXRkb3duJywgJGVycm9yWyd0eXBlJ10sICRlcnJvclsnbWVzc2FnZSddLCAkZXJyb3JbJ2ZpbGUnXSwgJGVycm9yWydsaW5lJ10pLCB0cnVlKSwgdHJ1ZSk7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoRGVidWdfSWdub3JlRXJyb3IoJGVycm9yWyd0eXBlJ10pKSB7DQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfQ0KDQogICAgICAgICR6YmUgPSBaQmxvZ0V4Y2VwdGlvbjo6R2V0SW5zdGFuY2UoKTsNCiAgICAgICAgJHpiZS0+UGFyc2VTaHV0ZG93bigkZXJyb3IpOw0KICAgICAgICAkemJlLT5EaXNwbGF5KCk7DQogICAgfQ0KDQogICAgcmV0dXJuIHRydWU7DQp9DQoNCmZ1bmN0aW9uIERlYnVnX0RvTm90aGluZygpDQp7DQogICAgcmV0dXJuIGZhbHNlOw0KfQ0KDQovKioNCiAqIENsYXNzIFpCbG9nRXhjZXB0aW9uLg0KICovDQpjbGFzcyBaQmxvZ0V4Y2VwdGlvbg0Kew0KICAgIHByaXZhdGUgc3RhdGljICRfemJlID0gbnVsbDsNCiAgICBwdWJsaWMgc3RhdGljICRpc2Rpc2FibGUgPSBmYWxzZTsNCiAgICBwcml2YXRlIHN0YXRpYyAkX2lzZGlzYWJsZSA9IG51bGw7DQogICAgcHVibGljIHN0YXRpYyAkaXNzdHJpY3QgPSBmYWxzZTsNCiAgICBwdWJsaWMgc3RhdGljICRpc3dhcm5pbmcgPSB0cnVlOw0KICAgIHB1YmxpYyBzdGF0aWMgJGVycm9yX2lkID0gMDsNCiAgICBwdWJsaWMgc3RhdGljICRlcnJvcl9maWxlID0gbnVsbDsNCiAgICBwdWJsaWMgc3RhdGljICRlcnJvcl9saW5lID0gbnVsbDsNCiAgICBwdWJsaWMgc3RhdGljICRpc2xvZ2Vycm9yID0gZmFsc2U7DQogICAgcHVibGljICR0eXBlOw0KICAgIHB1YmxpYyAkbWVzc2FnZTsNCiAgICBwdWJsaWMgJG1lc3NhZ2VmdWxsOw0KICAgIHB1YmxpYyAkZmlsZTsNCiAgICBwdWJsaWMgJGxpbmU7DQogICAgcHVibGljICRlcnJhcnJheSA9IGFycmF5KCk7DQoNCiAgICAvKioNCiAgICAgKiDmnoTpgKDlh73mlbDvvIzlrprkuYnluLjop4HplJnor6/ku6PnoIENCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gX19jb25zdHJ1Y3QoKQ0KICAgIHsNCiAgICAgICAgJHRoaXMtPmVycmFycmF5ID0gYXJyYXkoDQogICAgICAgICAgICAwICAgICA9PiAnVU5LTk9XTicsDQogICAgICAgICAgICAxICAgICA9PiAnRV9FUlJPUicsDQogICAgICAgICAgICAyICAgICA9PiAnRV9XQVJOSU5HJywNCiAgICAgICAgICAgIDQgICAgID0+ICdFX1BBUlNFJywNCiAgICAgICAgICAgIDggICAgID0+ICdFX05PVElDRScsDQogICAgICAgICAgICAxNiAgICA9PiAnRV9DT1JFX0VSUk9SJywNCiAgICAgICAgICAgIDMyICAgID0+ICdFX0NPUkVfV0FSTklORycsDQogICAgICAgICAgICA2NCAgICA9PiAnRV9DT01QSUxFX0VSUk9SJywNCiAgICAgICAgICAgIDEyOCAgID0+ICdFX0NPTVBJTEVfV0FSTklORycsDQogICAgICAgICAgICAyNTYgICA9PiAnRV9VU0VSX0VSUk9SJywNCiAgICAgICAgICAgIDUxMiAgID0+ICdFX1VTRVJfV0FSTklORycsDQogICAgICAgICAgICAxMDI0ICA9PiAnRV9VU0VSX05PVElDRScsDQogICAgICAgICAgICAyMDQ4ICA9PiAnRV9TVFJJQ1QnLA0KICAgICAgICAgICAgNDA5NiAgPT4gJ0VfUkVDT1ZFUkFCTEVfRVJST1InLA0KICAgICAgICAgICAgODE5MiAgPT4gJ0VfREVQUkVDQVRFRCcsDQogICAgICAgICAgICAxNjM4NCA9PiAnRV9VU0VSX0RFUFJFQ0FURUQnLA0KICAgICAgICAgICAgMzA3MTkgPT4gJ0VfQUxMJywNCiAgICAgICAgKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDojrflj5blj4LmlbAuDQogICAgICoNCiAgICAgKiBAcGFyYW0gJG5hbWUNCiAgICAgKg0KICAgICAqIEByZXR1cm4gbWl4ZWQNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gX19nZXQoJG5hbWUpDQogICAgew0KICAgICAgICBpZiAoJG5hbWUgPT0gJ3R5cGVOYW1lJykgew0KICAgICAgICAgICAgaWYgKGlzc2V0KCR0aGlzLT5lcnJhcnJheVskdGhpcy0+dHlwZV0pKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuICR0aGlzLT5lcnJhcnJheVskdGhpcy0+dHlwZV07DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIHJldHVybiAkdGhpcy0+ZXJyYXJyYXlbMF07DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDojrflj5bljZXkuIDlrp7kvosuDQogICAgICoNCiAgICAgKiBAcmV0dXJuIFpCbG9nRXhjZXB0aW9uDQogICAgICovDQogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBHZXRJbnN0YW5jZSgpDQogICAgew0KICAgICAgICBpZiAoIWlzc2V0KHNlbGY6OiRfemJlKSkgew0KICAgICAgICAgICAgc2VsZjo6JF96YmUgPSBuZXcgc2VsZigpOw0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuIHNlbGY6OiRfemJlOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOiuvuWumumUmeivr+WkhOeQhuWHveaVsC4NCiAgICAgKi8NCiAgICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIFNldEVycm9ySG9vaygpDQogICAgew0KICAgICAgICBpZiAoSVNfQ0xJKSB7DQogICAgICAgICAgICByZXR1cm47DQogICAgICAgIH0NCiAgICAgICAgc2V0X2Vycm9yX2hhbmRsZXIoJ0RlYnVnX0Vycm9yX0hhbmRsZXInKTsNCiAgICAgICAgc2V0X2V4Y2VwdGlvbl9oYW5kbGVyKCdEZWJ1Z19FeGNlcHRpb25fSGFuZGxlcicpOw0KICAgICAgICByZWdpc3Rlcl9zaHV0ZG93bl9mdW5jdGlvbignRGVidWdfU2h1dGRvd25fSGFuZGxlcicpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOa4hemZpOazqOWGjOeahOmUmeivr+WkhOeQhueoi+W6jy4NCiAgICAgKi8NCiAgICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIENsZWFyRXJyb3JIb29rKCkNCiAgICB7DQogICAgICAgIHNldF9lcnJvcl9oYW5kbGVyKCdEZWJ1Z19Eb05vdGhpbmcnKTsNCiAgICAgICAgc2V0X2V4Y2VwdGlvbl9oYW5kbGVyKCdEZWJ1Z19Eb05vdGhpbmcnKTsNCiAgICAgICAgcmVnaXN0ZXJfc2h1dGRvd25fZnVuY3Rpb24oJ0RlYnVnX0RvTm90aGluZycpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOWQr+eUqOmUmeivr+iwg+W6pi4NCiAgICAgKi8NCiAgICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIEVuYWJsZUVycm9ySG9vaygpDQogICAgew0KICAgICAgICBzZWxmOjokaXNkaXNhYmxlID0gZmFsc2U7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog56aB5q2i6ZSZ6K+v6LCD5bqmLg0KICAgICAqLw0KICAgIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gRGlzYWJsZUVycm9ySG9vaygpDQogICAgew0KICAgICAgICBzZWxmOjokaXNkaXNhYmxlID0gdHJ1ZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmmoLlgZzplJnor6/osIPluqYuDQogICAgICovDQogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBTdXNwZW5kRXJyb3JIb29rKCkNCiAgICB7DQogICAgICAgIGlmIChzZWxmOjokX2lzZGlzYWJsZSAhPT0gbnVsbCkgew0KICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICB9DQoNCiAgICAgICAgc2VsZjo6JF9pc2Rpc2FibGUgPSBzZWxmOjokaXNkaXNhYmxlOw0KICAgICAgICBzZWxmOjokaXNkaXNhYmxlID0gdHJ1ZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmgaLlpI3plJnor6/osIPluqYuDQogICAgICovDQogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBSZXN1bWVFcnJvckhvb2soKQ0KICAgIHsNCiAgICAgICAgaWYgKHNlbGY6OiRfaXNkaXNhYmxlID09PSBudWxsKSB7DQogICAgICAgICAgICByZXR1cm47DQogICAgICAgIH0NCg0KICAgICAgICBzZWxmOjokaXNkaXNhYmxlID0gc2VsZjo6JF9pc2Rpc2FibGU7DQogICAgICAgIHNlbGY6OiRfaXNkaXNhYmxlID0gbnVsbDsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmgaLlpI3plJnor6/osIPluqYuDQogICAgICovDQogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBEaXNhYmxlU3RyaWN0KCkNCiAgICB7DQogICAgICAgIHNlbGY6OiRpc3N0cmljdCA9IGZhbHNlOw0KICAgIH0NCg0KICAgIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gRW5hYmxlU3RyaWN0KCkNCiAgICB7DQogICAgICAgIHNlbGY6OiRpc3N0cmljdCA9IHRydWU7DQogICAgfQ0KDQogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBEaXNhYmxlV2FybmluZygpDQogICAgew0KICAgICAgICBzZWxmOjokaXN3YXJuaW5nID0gZmFsc2U7DQogICAgfQ0KDQogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBFbmFibGVXYXJuaW5nKCkNCiAgICB7DQogICAgICAgIHNlbGY6OiRpc3dhcm5pbmcgPSB0cnVlOw0KICAgIH0NCg0KICAgIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gVHJhY2UoJHMpDQogICAgew0KICAgICAgICBMb2dzKCRzKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDop6PmnpDplJnor6/kv6Hmga8uDQogICAgICoNCiAgICAgKiBAcGFyYW0gJHR5cGUNCiAgICAgKiBAcGFyYW0gJG1lc3NhZ2UNCiAgICAgKiBAcGFyYW0gJGZpbGUNCiAgICAgKiBAcGFyYW0gJGxpbmUNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gUGFyc2VFcnJvcigkdHlwZSwgJG1lc3NhZ2UsICRmaWxlLCAkbGluZSkNCiAgICB7DQogICAgICAgICR0aGlzLT50eXBlID0gJHR5cGU7DQogICAgICAgICR0aGlzLT5tZXNzYWdlID0gJG1lc3NhZ2U7DQogICAgICAgICR0aGlzLT5tZXNzYWdlZnVsbCA9ICRtZXNzYWdlIC4gJyAoc2V0X2Vycm9yX2hhbmRsZXIpICc7DQogICAgICAgICR0aGlzLT5maWxlID0gJGZpbGU7DQogICAgICAgICR0aGlzLT5saW5lID0gJGxpbmU7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6Kej5p6Q6ZSZ6K+v5L+h5oGvLg0KICAgICAqDQogICAgICogQHBhcmFtICRlcnJvcg0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBQYXJzZVNodXRkb3duKCRlcnJvcikNCiAgICB7DQogICAgICAgICR0aGlzLT50eXBlID0gJGVycm9yWyd0eXBlJ107DQogICAgICAgICR0aGlzLT5tZXNzYWdlID0gJGVycm9yWydtZXNzYWdlJ107DQogICAgICAgICR0aGlzLT5tZXNzYWdlZnVsbCA9ICRlcnJvclsnbWVzc2FnZSddIC4gJyAocmVnaXN0ZXJfc2h1dGRvd25fZnVuY3Rpb24pICc7DQogICAgICAgICR0aGlzLT5maWxlID0gJGVycm9yWydmaWxlJ107DQogICAgICAgICR0aGlzLT5saW5lID0gJGVycm9yWydsaW5lJ107DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6Kej5p6Q5byC5bi45L+h5oGvLg0KICAgICAqDQogICAgICogQHBhcmFtIEV4Y2VwdGlvbiAkZXhjZXB0aW9uDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFBhcnNlRXhjZXB0aW9uKCRleGNlcHRpb24pDQogICAgew0KICAgICAgICAkdGhpcy0+bWVzc2FnZSA9ICRleGNlcHRpb24tPmdldE1lc3NhZ2UoKTsNCiAgICAgICAgJHRoaXMtPm1lc3NhZ2VmdWxsID0gJGV4Y2VwdGlvbi0+Z2V0TWVzc2FnZSgpIC4gJyAoc2V0X2V4Y2VwdGlvbl9oYW5kbGVyKSAnOw0KICAgICAgICAkdGhpcy0+dHlwZSA9ICRleGNlcHRpb24tPmdldENvZGUoKTsNCiAgICAgICAgJHRoaXMtPmZpbGUgPSAkZXhjZXB0aW9uLT5nZXRGaWxlKCk7DQogICAgICAgICR0aGlzLT5saW5lID0gJGV4Y2VwdGlvbi0+Z2V0TGluZSgpOw0KDQogICAgICAgIGlmIChzZWxmOjokZXJyb3JfZmlsZSAhPT0gbnVsbCkgew0KICAgICAgICAgICAgJHRoaXMtPmZpbGUgPSBzZWxmOjokZXJyb3JfZmlsZTsNCiAgICAgICAgfQ0KDQogICAgICAgIGlmIChzZWxmOjokZXJyb3JfbGluZSAhPT0gbnVsbCkgew0KICAgICAgICAgICAgJHRoaXMtPmxpbmUgPSBzZWxmOjokZXJyb3JfbGluZTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOi+k+WHuumUmeivr+S/oeaBry4NCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gRGlzcGxheSgpDQogICAgew0KICAgICAgICBpZiAoIWhlYWRlcnNfc2VudCgpKSB7DQogICAgICAgICAgICBIdHRwNTAwKCk7DQogICAgICAgICAgICBvYl9jbGVhbigpOw0KICAgICAgICB9DQoNCiAgICAgICAgJGVycm9yID0gJHRoaXM7DQoNCiAgICAgICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fRGVidWdfRGlzcGxheSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgJGZwc2lnbmFsID0gUExVR0lOX0VYSVRTSUdOQUxfTk9ORTsNCiAgICAgICAgICAgICRmcHJldHVybiA9ICRmcG5hbWUoJGVycm9yKTsNCiAgICAgICAgICAgIGlmICgkZnBzaWduYWwgPT0gUExVR0lOX0VYSVRTSUdOQUxfUkVUVVJOKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuICRmcHJldHVybjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIHJlcXVpcmUgZGlybmFtZShfX0ZJTEVfXykgLiAnLy4uL2RlZmVuZC9lcnJvci5waHAnOw0KICAgICAgICBSdW5UaW1lKCk7DQoNCiAgICAgICAgLyoNCiAgICAgICAgICogYGBmbHVzaCgpYGAgYW5kIGBgZXhpdCgkZXJyb3JDb2RlKWBgIGlzIGZvciBISFZNLg0KICAgICAgICAgKiBAbGluayBodHRwczovL2dpdGh1Yi5jb20vemJsb2djbi96YmxvZ3BocC9pc3N1ZXMvMzINCiAgICAgICAgICovDQogICAgICAgIGZsdXNoKCk7DQogICAgICAgIGV4aXQoMSk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6I635Y+W5Ye66ZSZ5Luj56CB5L+h5oGvLg0KICAgICAqDQogICAgICogQHBhcmFtICRmaWxlDQogICAgICogQHBhcmFtICRsaW5lDQogICAgICoNCiAgICAgKiBAcmV0dXJuIGFycmF5DQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIGdldF9jb2RlKCRmaWxlLCAkbGluZSkNCiAgICB7DQogICAgICAgIGlmIChzdHJjYXNlY21wKCRmaWxlLCAnVW5rbm93bicpID09IDApIHsNCiAgICAgICAgICAgIHJldHVybiBhcnJheSgpOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKCFpc19yZWFkYWJsZSgkZmlsZSkpIHsNCiAgICAgICAgICAgIHJldHVybiBhcnJheSgpOw0KICAgICAgICB9DQoNCiAgICAgICAgJGFGaWxlID0gYXJyYXlfc2xpY2UoZmlsZSgkZmlsZSksIG1heCgwLCAkbGluZSAtIDUpLCAxMCwgdHJ1ZSk7DQogICAgICAgIGZvcmVhY2ggKCRhRmlsZSBhcyAmJHNEYXRhKSB7DQogICAgICAgICAgICAvLyYkID0gQnlSZWYNCiAgICAgICAgICAgICRzRGF0YSA9IGh0bWxzcGVjaWFsY2hhcnMoJHNEYXRhKTsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiAkYUZpbGU7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5b6X5Yiw5Y+v6IO955qE6ZSZ6K+v5Y6f5ZugLg0KICAgICAqDQogICAgICogQHJldHVybiBzdHJpbmcNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gcG9zc2libGVfY2F1c2VzX29mX3RoZV9lcnJvcigpDQogICAgew0KICAgICAgICBnbG9iYWwgJGxhbmc7DQogICAgICAgIGdsb2JhbCAkYmxvZ2hvc3Q7DQogICAgICAgICRyZXN1bHQgPSAnJzsNCiAgICAgICAgaWYgKHNlbGY6OiRlcnJvcl9pZCAhPSAwKSB7DQogICAgICAgICAgICAvLyDku6PooahaLUJsb2dQSFDoh6rouqvmipvlh7rnmoTplJnor68NCiAgICAgICAgICAgIGlmIChpc3NldCgkbGFuZ1snZXJyb3JfcmVhc29ucyddW3NlbGY6OiRlcnJvcl9pZF0pKSB7DQogICAgICAgICAgICAgICAgJHJlc3VsdCA9ICRsYW5nWydlcnJvcl9yZWFzb25zJ11bc2VsZjo6JGVycm9yX2lkXTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgJHJlc3VsdCA9ICRsYW5nWydlcnJvcl9yZWFzb25zJ11bJ2RlZmF1bHQnXTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIC8vIOagueaNruWFs+mUruivjeafpeaJvumUmeivrw0KICAgICAgICAkbG93ZXJFcnJvclJlYXNvbiA9IHN0cnRvbG93ZXIoJHRoaXMtPm1lc3NhZ2UpOw0KICAgICAgICBmb3JlYWNoICgkbGFuZ1snZXJyb3JfcmVhc29ucyddWydvdGhlciddIGFzICRrZXkgPT4gJHZhbHVlKSB7DQogICAgICAgICAgICBpZiAoc3RycG9zKCRsb3dlckVycm9yUmVhc29uLCAka2V5KSA+IC0xKSB7DQogICAgICAgICAgICAgICAgJHJlc3VsdCAuPSAkdmFsdWU7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICAkZXJyb3JJZCA9IHVybGVuY29kZShzZWxmOjokZXJyb3JfaWQpOw0KICAgICAgICAkZXJyb3JNZXNzYWdlID0gdXJsZW5jb2RlKCR0aGlzLT5tZXNzYWdlKTsNCiAgICAgICAgJG1vcmVIZWxwID0gJGxhbmdbJ29mZmljYWxfdXJscyddWydtb3JlX2hlbHAnXTsNCiAgICAgICAgJG1vcmVIZWxwID0gc3RyX3JlcGxhY2UoJ3slaWQlfScsICRlcnJvcklkLCAkbW9yZUhlbHApOw0KICAgICAgICAkbW9yZUhlbHAgPSBzdHJfcmVwbGFjZSgneyVtZXNzYWdlJX0nLCAkZXJyb3JNZXNzYWdlLCAkbW9yZUhlbHApOw0KDQogICAgICAgICRyZXN1bHQgLj0gJGxhbmdbJ2Vycm9yX3JlYXNvbnMnXVsnZW5kJ107DQogICAgICAgICRyZXN1bHQgPSBzdHJfcmVwbGFjZSgneyVibG9naG9zdCV9JywgJGJsb2dob3N0LCAkcmVzdWx0KTsNCiAgICAgICAgJHJlc3VsdCA9IHN0cl9yZXBsYWNlKCd7JW1vcmVoZWxwJX0nLCAkbW9yZUhlbHAsICRyZXN1bHQpOw0KDQogICAgICAgIHJldHVybiAkcmVzdWx0Ow0KICAgIH0NCn0NCg==</file>
	<file name='zb_system\function\c_system_common.php' crc32='9A38A1BF'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\c_system_event.php' crc32='F89B4D07'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\c_system_base.php' crc32='9A042873'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\c_system_admin.php' crc32='DA46D6E5'  dt:dt='bin.base64'></file>
	<file name='zb_system\defend\option.php' crc32='C171A420'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\base.php' crc32='5525AEEB'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\dbsql.php' crc32='3338C9B8'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KLyoqDQogKiDmlbDmja7lupPmk43kvZzmjqXlj6MuDQogKi8NCg0KLyoqDQogKiBTUUzor63lj6XnlJ/miJDnsbsuDQogKi8NCmNsYXNzIERiU3FsDQp7DQogICAgLyoqDQogICAgICogQHZhciBEYXRhYmFzZV9fSW50ZXJmYWNlIOaVsOaNruW6k+i/nuaOpeWunuS+iw0KICAgICAqLw0KICAgIHByaXZhdGUgJGRiID0gbnVsbDsNCiAgICAvKioNCiAgICAgKiBAdmFyIG51bGx8c3RyaW5nIOaVsOaNruW6k+exu+Wei+WQjeensA0KICAgICAqLw0KICAgIHByaXZhdGUgJGRiY2xhc3MgPSBudWxsOw0KICAgIC8qKg0KICAgICAqIEBwYXJhbSBvYmplY3QgJGRiDQogICAgICovDQogICAgcHJpdmF0ZSAkc3FsID0gbnVsbDsNCg0KICAgIHB1YmxpYyBmdW5jdGlvbiBfX2NvbnN0cnVjdCgmJGRiID0gbnVsbCkNCiAgICB7DQogICAgICAgICR0aGlzLT5kYiA9ICYkZGI7DQogICAgICAgICR0aGlzLT5kYmNsYXNzID0gZ2V0X2NsYXNzKCR0aGlzLT5kYik7DQogICAgICAgICR0aGlzLT5zcWwgPSAnc3FsX18nIC4gJHRoaXMtPmRiLT50eXBlOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOabv+aNouaVsOaNruihqOWJjee8gA0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAkcw0KICAgICAqDQogICAgICogQHJldHVybiBzdHJpbmcNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gUmVwbGFjZVByZSgmJHMpDQogICAgew0KICAgICAgICAkcyA9IHN0cl9yZXBsYWNlKCclcHJlJScsICR0aGlzLT5kYi0+ZGJwcmUsICRzKTsNCg0KICAgICAgICByZXR1cm4gJHM7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHJldHVybiBTUUxfX0dsb2JhbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBnZXQoKQ0KICAgIHsNCiAgICAgICAgJHNxbCA9IG5ldyAkdGhpcy0+c3FsKCR0aGlzLT5kYik7DQoNCiAgICAgICAgcmV0dXJuICRzcWw7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5Yig6Zmk6KGoLOi/lOWbnlNRTOivreWPpS4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJHRhYmxlDQogICAgICoNCiAgICAgKiBAcmV0dXJuIHN0cmluZw0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBEZWxUYWJsZSgkdGFibGUpDQogICAgew0KICAgICAgICByZXR1cm4gJHRoaXMtPmdldCgpLT5kcm9wKCIkdGFibGUiKS0+c3FsOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOajgOafpeihqOaYr+WQpuWtmOWcqO+8jOi/lOWbnlNRTOivreWPpS4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJHRhYmxlDQogICAgICogQHBhcmFtIHN0cmluZyAkZGJuYW1lDQogICAgICoNCiAgICAgKiBAcmV0dXJuIHN0cmluZw0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBFeGlzdFRhYmxlKCR0YWJsZSwgJGRibmFtZSA9ICcnKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuICR0aGlzLT5nZXQoKS0+ZXhpc3QoJHRhYmxlLCAkZGJuYW1lKS0+c3FsOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOWIm+W7uuihqO+8jOi/lOWbnuaehOmAoOWujOaVtOeahFNRTOivreWPpS4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJHRhYmxlDQogICAgICogQHBhcmFtIGFycmF5ICAkZGF0YWluZm8NCiAgICAgKiBAcGFyYW0gbnVsbCAgICRlbmdpbmUNCiAgICAgKg0KICAgICAqIEByZXR1cm4gc3RyaW5nDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIENyZWF0ZVRhYmxlKCR0YWJsZSwgJGRhdGFpbmZvLCAkZW5naW5lID0gbnVsbCkNCiAgICB7DQogICAgICAgICRzcWwgPSAkdGhpcy0+Z2V0KCk7DQogICAgICAgICRzcWwtPmNyZWF0ZSgkdGFibGUpLT5kYXRhKCRkYXRhaW5mbyk7DQogICAgICAgIGlmICghaXNfbnVsbCgkZW5naW5lKSkgew0KICAgICAgICAgICAgJHNxbC0+b3B0aW9uKGFycmF5KCdlbmdpbmUnID0+ICRlbmdpbmUpKTsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiAkc3FsLT5zcWw7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5p6E6YCg5p+l6K+i6K+t5Y+lLg0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAgICAgJHRhYmxlDQogICAgICogQHBhcmFtIHN0cmluZyAgICAgJHNlbGVjdA0KICAgICAqIEBwYXJhbSBzdHJpbmcgICAgICR3aGVyZQ0KICAgICAqIEBwYXJhbSBzdHJpbmcgICAgICRvcmRlcg0KICAgICAqIEBwYXJhbSBzdHJpbmcgICAgICRsaW1pdA0KICAgICAqIEBwYXJhbSBhcnJheXxudWxsICRvcHRpb24NCiAgICAgKg0KICAgICAqIEByZXR1cm4gc3RyaW5nIOi/lOWbnuaehOmAoOeahOivreWPpQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBTZWxlY3QoJHRhYmxlLCAkc2VsZWN0ID0gbnVsbCwgJHdoZXJlID0gbnVsbCwgJG9yZGVyID0gbnVsbCwgJGxpbWl0ID0gbnVsbCwgJG9wdGlvbiA9IG51bGwpDQogICAgew0KICAgICAgICBpZiAoIWlzX2FycmF5KCRvcHRpb24pKSB7DQogICAgICAgICAgICAkb3B0aW9uID0gYXJyYXkoKTsNCiAgICAgICAgfQ0KDQogICAgICAgICRzcWwgPSAkdGhpcy0+Z2V0KCktPnNlbGVjdCgkdGFibGUpLT5vcHRpb24oJG9wdGlvbiktPndoZXJlKCR3aGVyZSktPm9yZGVyQnkoJG9yZGVyKS0+bGltaXQoJGxpbWl0KTsNCg0KICAgICAgICBpZiAoaXNzZXQoJG9wdGlvblsnc2VsZWN0MmNvdW50J10pKSB7DQogICAgICAgICAgICBmb3JlYWNoICgkc2VsZWN0IGFzICRrZXkgPT4gJHZhbHVlKSB7DQogICAgICAgICAgICAgICAgaWYgKGNvdW50KCR2YWx1ZSkgPiAyKSB7DQogICAgICAgICAgICAgICAgICAgICRzcWwtPmNvdW50KGFycmF5X3NsaWNlKCR2YWx1ZSwgMSkpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICRzcWwtPmNvdW50KCR2YWx1ZSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgaWYgKCFpc19hcnJheSgkc2VsZWN0KSkgew0KICAgICAgICAgICAgICAgICRzZWxlY3QgPSBhcnJheSgkc2VsZWN0KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGNhbGxfdXNlcl9mdW5jX2FycmF5KGFycmF5KCRzcWwsICdjb2x1bW4nKSwgJHNlbGVjdCk7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoIWVtcHR5KCRvcHRpb24pKSB7DQogICAgICAgICAgICBpZiAoaXNzZXQoJG9wdGlvblsncGFnZWJhciddKSkgew0KICAgICAgICAgICAgICAgIGlmICgkb3B0aW9uWydwYWdlYmFyJ10tPkNvdW50ID09PSBudWxsKSB7DQogICAgICAgICAgICAgICAgICAgICRzMiA9ICR0aGlzLT5Db3VudCgkdGFibGUsIGFycmF5KGFycmF5KCcqJywgJ251bScpKSwgJHdoZXJlKTsNCiAgICAgICAgICAgICAgICAgICAgJG9wdGlvblsncGFnZWJhciddLT5Db3VudCA9IEdldFZhbHVlSW5BcnJheUJ5Q3VycmVudCgkdGhpcy0+ZGItPlF1ZXJ5KCRzMiksICdudW0nKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgJG9wdGlvblsncGFnZWJhciddLT5Db3VudCA9IChpbnQpICRvcHRpb25bJ3BhZ2ViYXInXS0+Q291bnQ7DQogICAgICAgICAgICAgICAgJG9wdGlvblsncGFnZWJhciddLT5tYWtlKCk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgJHNxbCA9ICRzcWwtPnNxbDsNCg0KICAgICAgICByZXR1cm4gJHNxbDsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmnoTpgKDorqHmlbDor63lj6UuDQogICAgICoNCiAgICAgKiBAcGFyYW0gc3RyaW5nICR0YWJsZQ0KICAgICAqIEBwYXJhbSBtaXhlZCAgJGNvdW50DQogICAgICogQHBhcmFtIG1peGVkICAkd2hlcmUNCiAgICAgKiBAcGFyYW0gbnVsbCAgICRvcHRpb24NCiAgICAgKg0KICAgICAqIEByZXR1cm4gc3RyaW5nIOi/lOWbnuaehOmAoOeahOivreWPpQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBDb3VudCgkdGFibGUsICRjb3VudCwgJHdoZXJlID0gbnVsbCwgJG9wdGlvbiA9IG51bGwpDQogICAgew0KICAgICAgICBpZiAoIWlzX2FycmF5KCRvcHRpb24pKSB7DQogICAgICAgICAgICAkb3B0aW9uID0gYXJyYXkoJ3NlbGVjdDJjb3VudCcgPT4gdHJ1ZSk7DQogICAgICAgIH0NCg0KICAgICAgICByZXR1cm4gJHRoaXMtPlNlbGVjdCgkdGFibGUsICRjb3VudCwgJHdoZXJlLCBudWxsLCBudWxsLCAkb3B0aW9uKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmnoTpgKDmlbDmja7mm7TmlrDor63lj6UuDQogICAgICoNCiAgICAgKiBAcGFyYW0gc3RyaW5nICAgICAkdGFibGUNCiAgICAgKiBAcGFyYW0gbWl4ZWQgICAgICAka2V5dmFsdWUNCiAgICAgKiBAcGFyYW0gbWl4ZWQgICAgICAkd2hlcmUNCiAgICAgKiBAcGFyYW0gYXJyYXl8bnVsbCAkb3B0aW9uDQogICAgICoNCiAgICAgKiBAcmV0dXJuIHN0cmluZyDov5Tlm57mnoTpgKDnmoTor63lj6UNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gVXBkYXRlKCR0YWJsZSwgJGtleXZhbHVlLCAkd2hlcmUsICRvcHRpb24gPSBudWxsKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuICR0aGlzLT5nZXQoKS0+dXBkYXRlKCR0YWJsZSktPmRhdGEoJGtleXZhbHVlKS0+d2hlcmUoJHdoZXJlKS0+b3B0aW9uKCRvcHRpb24pLT5zcWw7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5p6E6YCg5pWw5o2u5o+S5YWl6K+t5Y+lLg0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAkdGFibGUNCiAgICAgKiBAcGFyYW0gbWl4ZWQgICRrZXl2YWx1ZQ0KICAgICAqDQogICAgICogQHJldHVybiBzdHJpbmcg6L+U5Zue5p6E6YCg55qE6K+t5Y+lDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEluc2VydCgkdGFibGUsICRrZXl2YWx1ZSkNCiAgICB7DQogICAgICAgIHJldHVybiAkdGhpcy0+Z2V0KCktPmluc2VydCgkdGhpcy0+ZGIpLT5pbnNlcnQoJHRhYmxlKS0+ZGF0YSgka2V5dmFsdWUpLT5zcWw7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5p6E6YCg5pWw5o2u5Yig6Zmk6K+t5Y+lLg0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAgICAgJHRhYmxlDQogICAgICogQHBhcmFtIG1peGVkICAgICAgJHdoZXJlDQogICAgICogQHBhcmFtIGFycmF5fG51bGwgJG9wdGlvbg0KICAgICAqDQogICAgICogQHJldHVybiBzdHJpbmcg6L+U5Zue5p6E6YCg55qE6K+t5Y+lDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIERlbGV0ZSgkdGFibGUsICR3aGVyZSwgJG9wdGlvbiA9IG51bGwpDQogICAgew0KICAgICAgICByZXR1cm4gJHRoaXMtPmdldCgpLT5kZWxldGUoJHRoaXMtPmRiKS0+ZGVsZXRlKCR0YWJsZSktPndoZXJlKCR3aGVyZSktPm9wdGlvbigkb3B0aW9uKS0+c3FsOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOi/lOWbnue7j+i/h+i/h+a7pOeahFNRTOivreWPpS4NCiAgICAgKg0KICAgICAqIEBwYXJhbSAkc3FsDQogICAgICoNCiAgICAgKiBAcmV0dXJuIG1peGVkDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEZpbHRlcigkc3FsKQ0KICAgIHsNCiAgICAgICAgJF9TRVJWRVJbJ19xdWVyeV9jb3VudCddID0gJF9TRVJWRVJbJ19xdWVyeV9jb3VudCddICsgMTsNCg0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9EYlNxbF9GaWx0ZXInXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAgICAgICAgICRmcG5hbWUoJHNxbCk7DQogICAgICAgIH0NCiAgICAgICAgLy9Mb2dzKCRzcWwpOw0KICAgICAgICByZXR1cm4gJHNxbDsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDlr7zlh7pzcWznlJ/miJDor63lj6XvvIznlKjkuo7lpIfku73mlbDmja7nlKjjgIINCiAgICAgKg0KICAgICAqIEBwYXJhbSAkdHlwZSDmlbDmja7ov57mjqXnsbvlnosNCiAgICAgKg0KICAgICAqIEByZXR1cm4gbWl4ZWQNCiAgICAgKi8NCiAgICBwcml2YXRlICRfZXhwbG9ydF9kYiA9IG51bGw7DQoNCiAgICBwdWJsaWMgZnVuY3Rpb24gRXhwb3J0KCR0YWJsZSwgJGtleXZhbHVlLCAkdHlwZSA9ICdteXNxbCcpDQogICAgew0KICAgICAgICBpZiAoJHR5cGUgPT0gJ215c3FsJyAmJiAkdGhpcy0+X2V4cGxvcnRfZGIgPT09IG51bGwpIHsNCiAgICAgICAgICAgICR0aGlzLT5fZXhwbG9ydF9kYiA9IG5ldyBEYXRhYmFzZV9NeVNRTCgpOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKCR0eXBlID09ICdteXNxbGknICYmICR0aGlzLT5fZXhwbG9ydF9kYiA9PT0gbnVsbCkgew0KICAgICAgICAgICAgJHRoaXMtPl9leHBsb3J0X2RiID0gbmV3IERhdGFiYXNlX015U1FMaSgpOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKCR0eXBlID09ICdwZG9fbXlzcWwnICYmICR0aGlzLT5fZXhwbG9ydF9kYiA9PT0gbnVsbCkgew0KICAgICAgICAgICAgJHRoaXMtPl9leHBsb3J0X2RiID0gbmV3IERhdGFiYXNlX1BET015U1FMKCk7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoJHR5cGUgPT0gJ3NxbGl0ZScgJiYgJHRoaXMtPl9leHBsb3J0X2RiID09PSBudWxsKSB7DQogICAgICAgICAgICAkdGhpcy0+X2V4cGxvcnRfZGIgPSBuZXcgRGF0YWJhc2VfU1FMaXRlKCk7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoJHR5cGUgPT0gJ3NxbGl0ZTMnICYmICR0aGlzLT5fZXhwbG9ydF9kYiA9PT0gbnVsbCkgew0KICAgICAgICAgICAgJHRoaXMtPl9leHBsb3J0X2RiID0gbmV3IERhdGFiYXNlX1NRTGl0ZSgpOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKCR0eXBlID09ICdwZG9fc3FsaXRlJyAmJiAkdGhpcy0+X2V4cGxvcnRfZGIgPT09IG51bGwpIHsNCiAgICAgICAgICAgICR0aGlzLT5fZXhwbG9ydF9kYiA9IG5ldyBEYXRhYmFzZV9TUUxpdGUzKCk7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoJHRoaXMtPl9leHBsb3J0X2RiID09PSBudWxsKSB7DQogICAgICAgICAgICAkdGhpcy0+X2V4cGxvcnRfZGIgPSBuZXcgRGF0YWJhc2VfTXlTUUwoKTsNCiAgICAgICAgfQ0KDQogICAgICAgICRzcWwgPSAiSU5TRVJUIElOVE8gJHRhYmxlICI7DQoNCiAgICAgICAgJHNxbCAuPSAnKCc7DQogICAgICAgICRjb21tYSA9ICcnOw0KICAgICAgICBmb3JlYWNoICgka2V5dmFsdWUgYXMgJGsgPT4gJHYpIHsNCiAgICAgICAgICAgIGlmIChpc19udWxsKCR2KSkgew0KICAgICAgICAgICAgICAgIGNvbnRpbnVlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAkc3FsIC49ICRjb21tYSAuICIkayI7DQogICAgICAgICAgICAkY29tbWEgPSAnLCc7DQogICAgICAgIH0NCiAgICAgICAgJHNxbCAuPSAnKVZBTFVFUygnOw0KDQogICAgICAgICRjb21tYSA9ICcnOw0KICAgICAgICBmb3JlYWNoICgka2V5dmFsdWUgYXMgJGsgPT4gJHYpIHsNCiAgICAgICAgICAgIGlmIChpc19udWxsKCR2KSkgew0KICAgICAgICAgICAgICAgIGNvbnRpbnVlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAkdiA9ICR0aGlzLT5fZXhwbG9ydF9kYi0+RXNjYXBlU3RyaW5nKCR2KTsNCiAgICAgICAgICAgICRzcWwgLj0gJGNvbW1hIC4gIickdiciOw0KICAgICAgICAgICAgJGNvbW1hID0gJywnOw0KICAgICAgICB9DQogICAgICAgICRzcWwgLj0gJyknOw0KDQogICAgICAgIHJldHVybiAkc3FsIC4gIjtcclxuIjsNCiAgICB9DQp9DQo=</file>
	<file name='zb_system\function\lib\metas.php' crc32='A67380A'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KDQovKioNCiAqIOaJqeWxleWGheWuueexuy4NCiAqDQogKiBAcHJvcGVydHkgc3RyaW5nIE5hbWUNCiAqIEBwcm9wZXJ0eSBpbnR8c3RyaW5nIENvdW50DQogKiBAcHJvcGVydHkgc3RyaW5nIFVybA0KICovDQpjbGFzcyBNZXRhcw0Kew0KICAgIC8qKg0KICAgICAqIEB2YXIgYXJyYXkg5a2Y5YKoTWV0YXPnm7jlupTmlbDlgLznmoTmlbDnu4QNCiAgICAgKi8NCiAgICBwcml2YXRlICRfZGF0YSA9IGFycmF5KCk7DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gc3RyaW5nICRuYW1lIGtleeWQjQ0KICAgICAqIEBwYXJhbSAkdmFsdWUNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gX19zZXQoJG5hbWUsICR2YWx1ZSkNCiAgICB7DQogICAgICAgICR0aGlzLT5fZGF0YVskbmFtZV0gPSAkdmFsdWU7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtIHN0cmluZyAkbmFtZSBrZXnlkI0NCiAgICAgKg0KICAgICAqIEByZXR1cm4gbnVsbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBfX2dldCgkbmFtZSkNCiAgICB7DQogICAgICAgIGlmICghaXNzZXQoJHRoaXMtPl9kYXRhWyRuYW1lXSkpIHsNCiAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiAkdGhpcy0+X2RhdGFbJG5hbWVdOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkbmFtZQ0KICAgICAqDQogICAgICogQHJldHVybiBib29sDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIF9faXNzZXQoJG5hbWUpDQogICAgew0KICAgICAgICByZXR1cm4gaXNzZXQoJHRoaXMtPl9kYXRhWyRuYW1lXSk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRuYW1lDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIF9fdW5zZXQoJG5hbWUpDQogICAgew0KICAgICAgICB1bnNldCgkdGhpcy0+X2RhdGFbJG5hbWVdKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDlsIbmlbDnu4TmlbDmja7ovazmjaLkuLpNZXRhc+WunuS+iy4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBhcnJheSAkYQ0KICAgICAqDQogICAgICogQHJldHVybiBNZXRhcw0KICAgICAqLw0KICAgIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gQ29udmVydEFycmF5KCRhKQ0KICAgIHsNCiAgICAgICAgJG0gPSBuZXcgc2VsZigpOw0KICAgICAgICBpZiAoaXNfYXJyYXkoJGEpKSB7DQogICAgICAgICAgICAkbS0+X2RhdGEgPSAkYTsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiAkbTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDojrflj5ZEYXRh5pWw5o2uLg0KICAgICAqDQogICAgICogQHJldHVybiBhcnJheQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBHZXREYXRhKCkNCiAgICB7DQogICAgICAgIHJldHVybiAkdGhpcy0+X2RhdGE7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5L6d5o2uemJw6K6+572u5pu/5o2i562+5qCH5Li6aG9zdOWAvOaIluaYr+WbuuWumuWfn+WQjS4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJHZhbHVlDQogICAgICoNCiAgICAgKiBAcmV0dXJuIHN0cmluZw0KICAgICAqLw0KICAgIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gUmVwbGFjZVRhZzJIb3N0KCR2YWx1ZSkNCiAgICB7DQogICAgICAgIGdsb2JhbCAkYmxvZ2hvc3Q7DQoNCiAgICAgICAgcmV0dXJuIHN0cl9yZXBsYWNlKCd7I1pDX0JMT0dfSE9TVCN9JywgJGJsb2dob3N0LCAkdmFsdWUpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOS+neaNrnpicOiuvue9ruabv+aNomhvc3TlgLzkuLrnrb7moIcuDQogICAgICoNCiAgICAgKiBAcGFyYW0gc3RyaW5nICR2YWx1ZQ0KICAgICAqDQogICAgICogQHJldHVybiBzdHJpbmcNCiAgICAgKi8NCiAgICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIFJlcGxhY2VIb3N0MlRhZygkdmFsdWUpDQogICAgew0KICAgICAgICBnbG9iYWwgJGJsb2dob3N0Ow0KDQogICAgICAgIHJldHVybiBzdHJfcmVwbGFjZSgkYmxvZ2hvc3QsICd7I1pDX0JMT0dfSE9TVCN9JywgJHZhbHVlKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmo4Dmn6VEYXRh5bGe5oCn77yI5pWw57uE77yJ5bGe5oCn5YC85piv5piv5ZCm5a2Y5Zyo55u45bqUa2V5Lg0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAkbmFtZSBrZXnlkI0NCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBIYXNLZXkoJG5hbWUpDQogICAgew0KICAgICAgICByZXR1cm4gYXJyYXlfa2V5X2V4aXN0cygkbmFtZSwgJHRoaXMtPl9kYXRhKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmo4Dmn6VEYXRh5bGe5oCn77yI5pWw57uE77yJ5Lit55qE5Y2V5YWD5pWw55uuLg0KICAgICAqDQogICAgICogQHJldHVybiBpbnQNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gQ291bnRJdGVtKCkNCiAgICB7DQogICAgICAgIHJldHVybiBjb3VudCgkdGhpcy0+X2RhdGEpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOWIoOmZpERhdGHlsZ7mgKfvvIjmlbDnu4TvvInkuK3nmoTnm7jlupTpobkuDQogICAgICoNCiAgICAgKiBAcGFyYW0gc3RyaW5nICRuYW1lIGtleeWQjQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBEZWwoJG5hbWUpDQogICAgew0KICAgICAgICB1bnNldCgkdGhpcy0+X2RhdGFbJG5hbWVdKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDlsIZEYXRh5bGe5oCn77yI5pWw57uE77yJ5YC85bqP5YiX5YyWLg0KICAgICAqDQogICAgICogQHJldHVybiBzdHJpbmcg6L+U5Zue5bqP5YiX5YyW55qE5YC8DQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFNlcmlhbGl6ZSgpDQogICAgew0KICAgICAgICBpZiAoY291bnQoJHRoaXMtPl9kYXRhKSA9PSAwKSB7DQogICAgICAgICAgICByZXR1cm4gJyc7DQogICAgICAgIH0NCg0KICAgICAgICAkZGF0YSA9ICR0aGlzLT5fZGF0YTsNCiAgICAgICAgZm9yZWFjaCAoJGRhdGEgYXMgJGtleSA9PiAkdmFsdWUpIHsNCiAgICAgICAgICAgIGlmIChpc19zdHJpbmcoJHZhbHVlKSkgew0KICAgICAgICAgICAgICAgICRkYXRhWyRrZXldID0gc2VsZjo6UmVwbGFjZUhvc3QyVGFnKCR2YWx1ZSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICAvL3JldHVybiBqc29uX2VuY29kZSgkZGF0YSk7DQogICAgICAgIHJldHVybiBzZXJpYWxpemUoJGRhdGEpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOWwhuW6j+WIl+WMlueahOWAvOWPjeW6j+WIl+WMluWQjui1i+S6iERhdGHlsZ7mgKflgLwNCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJHMg5bqP5YiX5YyW5YC8DQogICAgICoNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gVW5zZXJpYWxpemUoJHMpDQogICAgew0KICAgICAgICBpZiAoJHMgPT0gJycpIHsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KDQogICAgICAgIC8vaWYoc3RycG9zKCRzLCd7Jyk9PT0wKXsNCiAgICAgICAgLy8kdGhpcy0+X2RhdGE9anNvbl9kZWNvZGUoJHMsdHJ1ZSk7DQogICAgICAgIC8vfWVsc2V7DQogICAgICAgICR0aGlzLT5fZGF0YSA9IEB1bnNlcmlhbGl6ZSgkcyk7DQogICAgICAgIC8vfQ0KICAgICAgICBpZiAoaXNfYXJyYXkoJHRoaXMtPl9kYXRhKSkgew0KICAgICAgICAgICAgaWYgKGNvdW50KCR0aGlzLT5fZGF0YSkgPT0gMCkgew0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBmb3JlYWNoICgkdGhpcy0+X2RhdGEgYXMgJGtleSA9PiAkdmFsdWUpIHsNCiAgICAgICAgICAgICAgICBpZiAoaXNfc3RyaW5nKCR2YWx1ZSkpIHsNCiAgICAgICAgICAgICAgICAgICAgJHRoaXMtPl9kYXRhWyRrZXldID0gc2VsZjo6UmVwbGFjZVRhZzJIb3N0KCR2YWx1ZSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgJHRoaXMtPl9kYXRhID0gYXJyYXkoKTsNCg0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KfQ0K</file>
	<file name='zb_system\function\lib\template.php' crc32='6215BE6C'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KLyoqDQogKiDmqKHmnb/nsbsuDQogKi8NCmNsYXNzIFRlbXBsYXRlDQp7DQogICAgcHJvdGVjdGVkICRwYXRoID0gbnVsbDsNCiAgICBwcm90ZWN0ZWQgJGVudHJ5UGFnZSA9IG51bGw7DQogICAgcHJvdGVjdGVkICR1bmNvbXBpbGVkQ29kZVN0b3JlID0gYXJyYXkoKTsNCiAgICBwdWJsaWMgJHRoZW1lID0gIiI7DQogICAgcHVibGljICR0ZW1wbGF0ZXMgPSBhcnJheSgpOw0KICAgIHB1YmxpYyAkY29tcGlsZWRUZW1wbGF0ZXMgPSBhcnJheSgpOw0KICAgIHB1YmxpYyAkdGVtcGxhdGVUYWdzID0gYXJyYXkoKTsNCiAgICBwdWJsaWMgJHN0YXRpY1RhZ3MgPSBhcnJheSgpOw0KDQogICAgLyoqDQogICAgICogQHZhciBhcnJheSDpu5jorqTkvqfmoI8NCiAgICAgKi8NCiAgICBwdWJsaWMgJHNpZGViYXIgPSBhcnJheSgpOw0KICAgIC8qKg0KICAgICAqIEB2YXIgYXJyYXkg5L6n5qCPMg0KICAgICAqLw0KICAgIHB1YmxpYyAkc2lkZWJhcjIgPSBhcnJheSgpOw0KICAgIC8qKg0KICAgICAqIEB2YXIgYXJyYXkg5L6n5qCPMw0KICAgICAqLw0KICAgIHB1YmxpYyAkc2lkZWJhcjMgPSBhcnJheSgpOw0KICAgIC8qKg0KICAgICAqIEB2YXIgYXJyYXkg5L6n5qCPNA0KICAgICAqLw0KICAgIHB1YmxpYyAkc2lkZWJhcjQgPSBhcnJheSgpOw0KICAgIC8qKg0KICAgICAqIEB2YXIgYXJyYXkg5L6n5qCPNQ0KICAgICAqLw0KICAgIHB1YmxpYyAkc2lkZWJhcjUgPSBhcnJheSgpOw0KDQogICAgcHVibGljIGZ1bmN0aW9uIF9fY29uc3RydWN0KCkNCiAgICB7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRwYXRoDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFNldFBhdGgoJHBhdGgpDQogICAgew0KICAgICAgICAkdGhpcy0+cGF0aCA9ICRwYXRoOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEByZXR1cm4gbnVsbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBHZXRQYXRoKCkNCiAgICB7DQogICAgICAgIHJldHVybiAkdGhpcy0+cGF0aDsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJG5hbWUNCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBIYXNUZW1wbGF0ZSgkbmFtZSkNCiAgICB7DQogICAgICAgIHJldHVybiBmaWxlX2V4aXN0cygkdGhpcy0+cGF0aCAuICcvJyAuICRuYW1lIC4gJy5waHAnKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJG5hbWUNCiAgICAgKg0KICAgICAqIEByZXR1cm4gc3RyaW5nDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEdldFRlbXBsYXRlKCRuYW1lKQ0KICAgIHsNCiAgICAgICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fVGVtcGxhdGVfR2V0VGVtcGxhdGUnXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAgICAgICAgICRmcHJldHVybiA9ICRmcG5hbWUoJHRoaXMsICRuYW1lKTsNCiAgICAgICAgICAgIGlmICgkZnBzaWduYWwgPT0gUExVR0lOX0VYSVRTSUdOQUxfUkVUVVJOKSB7DQogICAgICAgICAgICAgICAgJGZwc2lnbmFsID0gUExVR0lOX0VYSVRTSUdOQUxfTk9ORTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiAkZnByZXR1cm47DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICByZXR1cm4gJHRoaXMtPnBhdGggLiAkbmFtZSAuICcucGhwJzsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHRlbXBsYXRlbmFtZQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBTZXRUZW1wbGF0ZSgkdGVtcGxhdGVuYW1lKQ0KICAgIHsNCiAgICAgICAgJHRoaXMtPmVudHJ5UGFnZSA9ICR0ZW1wbGF0ZW5hbWU7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRuYW1lDQogICAgICoNCiAgICAgKiBAcmV0dXJuIG1peGVkDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uICZHZXRUYWdzKCRuYW1lKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJG5hbWVdOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkbmFtZQ0KICAgICAqIEBwYXJhbSAkdmFsdWUNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gU2V0VGFncygkbmFtZSwgJHZhbHVlKQ0KICAgIHsNCiAgICAgICAgJHRoaXMtPnRlbXBsYXRlVGFnc1skbmFtZV0gPSAkdmFsdWU7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHJldHVybiBhcnJheQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiAmR2V0VGFnc0FsbCgpDQogICAgew0KICAgICAgICByZXR1cm4gJHRoaXMtPnRlbXBsYXRlVGFnczsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJGFycmF5DQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFNldFRhZ3NBbGwoJiRhcnJheSkNCiAgICB7DQogICAgICAgIGlmIChpc19hcnJheSgkYXJyYXkpKSB7DQogICAgICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzID0gJGFycmF5ICsgJHRoaXMtPnRlbXBsYXRlVGFnczsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOe8luivkeaJgOacieaWh+S7ti4NCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gQ29tcGlsZUZpbGVzKCkNCiAgICB7DQogICAgICAgIGZvcmVhY2ggKCR0aGlzLT50ZW1wbGF0ZXMgYXMgJG5hbWUgPT4gJGNvbnRlbnQpIHsNCiAgICAgICAgICAgICRzID0gUmVtb3ZlQk9NKCR0aGlzLT5Db21waWxlRmlsZSgkY29udGVudCkpOw0KICAgICAgICAgICAgQGZpbGVfcHV0X2NvbnRlbnRzKCR0aGlzLT5wYXRoIC4gJG5hbWUgLiAnLnBocCcsICRzKTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOWIneWni+WMluW5tue8luivkeaJgOacieaWh+S7ti4NCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBCdWlsZFRlbXBsYXRlKCkNCiAgICB7DQogICAgICAgIGdsb2JhbCAkemJwOw0KDQogICAgICAgIC8vIOWIneWni+WMluaooeadvw0KICAgICAgICBpZiAoIWZpbGVfZXhpc3RzKCR0aGlzLT5wYXRoKSkgew0KICAgICAgICAgICAgQG1rZGlyKCR0aGlzLT5wYXRoLCAwNzU1LCB0cnVlKTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIGZvcmVhY2ggKEdldEZpbGVzSW5EaXIoJHRoaXMtPnBhdGgsICdwaHAnKSBhcyAkZnVsbG5hbWUpIHsNCiAgICAgICAgICAgICAgICBAdW5saW5rKCRmdWxsbmFtZSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgJHRoaXMtPmFkZE5vbmV4aXN0ZW5kVGFncygpOw0KDQogICAgICAgICR0aGlzLT5Db21waWxlRmlsZXMoKTsNCg0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQoNCiAgICBwcm90ZWN0ZWQgZnVuY3Rpb24gYWRkTm9uZXhpc3RlbmRUYWdzKCkNCiAgICB7DQogICAgICAgIGdsb2JhbCAkemJwOw0KICAgICAgICAkdGVtcGxhdGVzID0gJiR0aGlzLT50ZW1wbGF0ZXM7DQoNCiAgICAgICAgaWYgKHN0cnBvcygkdGVtcGxhdGVzWydjb21tZW50cyddLCAnQWpheENvbW1lbnRCZWdpbicpID09PSBmYWxzZSkgew0KICAgICAgICAgICAgJHRlbXBsYXRlc1snY29tbWVudHMnXSA9ICc8bGFiZWwgaWQ9IkFqYXhDb21tZW50QmVnaW4iPjwvbGFiZWw+JyAuICR0ZW1wbGF0ZXNbJ2NvbW1lbnRzJ107DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoc3RycG9zKCR0ZW1wbGF0ZXNbJ2NvbW1lbnRzJ10sICdBamF4Q29tbWVudEVuZCcpID09PSBmYWxzZSkgew0KICAgICAgICAgICAgJHRlbXBsYXRlc1snY29tbWVudHMnXSA9ICR0ZW1wbGF0ZXNbJ2NvbW1lbnRzJ10gLiAnPGxhYmVsIGlkPSJBamF4Q29tbWVudEVuZCI+PC9sYWJlbD4nOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKHN0cnBvcygkdGVtcGxhdGVzWydjb21tZW50J10sICdpZD0iY210eyRjb21tZW50LklEfSInKSA9PT0gZmFsc2UgJiYgc3RycG9zKCR0ZW1wbGF0ZXNbJ2NvbW1lbnQnXSwgJ2lkPVwnY210eyRjb21tZW50LklEfVwnJykgPT09IGZhbHNlKSB7DQogICAgICAgICAgICAkdGVtcGxhdGVzWydjb21tZW50J10gPSAnPGxhYmVsIGlkPSJjbXR7JGNvbW1lbnQuSUR9Ij48L2xhYmVsPicgLiAkdGVtcGxhdGVzWydjb21tZW50J107DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoc3RycG9zKCR0ZW1wbGF0ZXNbJ2NvbW1lbnRwb3N0J10sICdpbnBWZXJpZnknKSA9PT0gZmFsc2UgJiYgc3RycG9zKCR0ZW1wbGF0ZXNbJ2NvbW1lbnRwb3N0J10sICc9XCd2ZXJpZnlcJycpID09PSBmYWxzZSAmJiBzdHJwb3MoJHRlbXBsYXRlc1snY29tbWVudHBvc3QnXSwgJz0idmVyaWZ5IicpID09PSBmYWxzZSkgew0KICAgICAgICAgICAgJHZlcmlmeSA9ICd7dGVtcGxhdGU6Y29tbWVudHBvc3QtdmVyaWZ5fSc7DQoNCiAgICAgICAgICAgIGlmIChzdHJwb3MoJHRlbXBsYXRlc1snY29tbWVudHBvc3QnXSwgJzwhLS12ZXJpZnktLT4nKSAhPT0gZmFsc2UpIHsNCiAgICAgICAgICAgICAgICAkdGVtcGxhdGVzWydjb21tZW50cG9zdCddID0gc3RyX3JlcGxhY2UoJzwhLS12ZXJpZnktLT4nLCAkdmVyaWZ5LCAkdGVtcGxhdGVzWydjb21tZW50cG9zdCddKTsNCiAgICAgICAgICAgIH0gZWxzZWlmIChzdHJwb3MoJHRlbXBsYXRlc1snY29tbWVudHBvc3QnXSwgJzwvZm9ybT4nKSkgew0KICAgICAgICAgICAgICAgICR0ZW1wbGF0ZXNbJ2NvbW1lbnRwb3N0J10gPSBzdHJfcmVwbGFjZSgnPC9mb3JtPicsICR2ZXJpZnkgLiAnPC9mb3JtPicsICR0ZW1wbGF0ZXNbJ2NvbW1lbnRwb3N0J10pOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAkdGVtcGxhdGVzWydjb21tZW50cG9zdCddIC49ICR2ZXJpZnk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoc3RycG9zKCR0ZW1wbGF0ZXNbJ2hlYWRlciddLCAneyRoZWFkZXJ9JykgPT09IGZhbHNlKSB7DQogICAgICAgICAgICBpZiAoc3RycG9zKCR0ZW1wbGF0ZXNbJ2hlYWRlciddLCAnPC9oZWFkPicpICE9PSBmYWxzZSkgew0KICAgICAgICAgICAgICAgICR0ZW1wbGF0ZXNbJ2hlYWRlciddID0gc3RyX3JlcGxhY2UoJzwvaGVhZD4nLCAneyRoZWFkZXJ9JyAuICc8L2hlYWQ+JywgJHRlbXBsYXRlc1snaGVhZGVyJ10pOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAkdGVtcGxhdGVzWydoZWFkZXInXSAuPSAneyRoZWFkZXJ9JzsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIGlmIChzdHJwb3MoJHRlbXBsYXRlc1snZm9vdGVyJ10sICd7JGZvb3Rlcn0nKSA9PT0gZmFsc2UpIHsNCiAgICAgICAgICAgIGlmIChzdHJwb3MoJHRlbXBsYXRlc1snZm9vdGVyJ10sICc8L2JvZHk+JykgIT09IGZhbHNlKSB7DQogICAgICAgICAgICAgICAgJHRlbXBsYXRlc1snZm9vdGVyJ10gPSBzdHJfcmVwbGFjZSgnPC9ib2R5PicsICd7JGZvb3Rlcn0nIC4gJzwvYm9keT4nLCAkdGVtcGxhdGVzWydmb290ZXInXSk7DQogICAgICAgICAgICB9IGVsc2VpZiAoc3RycG9zKCR0ZW1wbGF0ZXNbJ2Zvb3RlciddLCAnPC9odG1sPicpICE9PSBmYWxzZSkgew0KICAgICAgICAgICAgICAgICR0ZW1wbGF0ZXNbJ2Zvb3RlciddID0gc3RyX3JlcGxhY2UoJzwvaHRtbD4nLCAneyRmb290ZXJ9JyAuICc8L2h0bWw+JywgJHRlbXBsYXRlc1snZm9vdGVyJ10pOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAkdGVtcGxhdGVzWydmb290ZXInXSA9ICd7JGZvb3Rlcn0nIC4gJHRlbXBsYXRlc1snZm9vdGVyJ107DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJGNvbnRlbnQNCiAgICAgKg0KICAgICAqIEByZXR1cm4gbWl4ZWQNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gQ29tcGlsZUZpbGUoJGNvbnRlbnQpDQogICAgew0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9UZW1wbGF0ZV9Db21waWxpbmdfQmVnaW4nXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAgICAgICAgICRmcHJldHVybiA9ICRmcG5hbWUoJHRoaXMsICRjb250ZW50KTsNCiAgICAgICAgICAgIGlmICgkZnBzaWduYWwgPT0gUExVR0lOX0VYSVRTSUdOQUxfUkVUVVJOKSB7DQogICAgICAgICAgICAgICAgJGZwc2lnbmFsID0gUExVR0lOX0VYSVRTSUdOQUxfTk9ORTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiAkZnByZXR1cm47DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICAvLyBTdGVwIDE6IOabv+aNojw/cGhw5Z2XDQogICAgICAgICR0aGlzLT5yZW1vdmVfcGhwX2Jsb2NrcygkY29udGVudCk7DQogICAgICAgIC8vIFN0ZXAgMjog5aSE55CG5LiN57yW6K+R55qE5Luj56CBDQogICAgICAgICR0aGlzLT5wYXJzZV91bmNvbXBpbGVfY29kZSgkY29udGVudCk7DQogICAgICAgIC8vIFN0ZXAgMzog5byV5YWl5Li76aKYDQogICAgICAgICR0aGlzLT5wYXJzZV90ZW1wbGF0ZSgkY29udGVudCk7DQogICAgICAgIC8vIFN0ZXAgNDog6Kej5p6QbW9kdWxlDQogICAgICAgICR0aGlzLT5wYXJzZV9tb2R1bGUoJGNvbnRlbnQpOw0KICAgICAgICAvLyBTdGVwIDU6IOWkhOeQhuazqOmHig0KICAgICAgICAkdGhpcy0+cGFyc2VfY29tbWVudHMoJGNvbnRlbnQpOw0KICAgICAgICAvLyBTdGVwIDY6IOabv+aNoumFjee9rg0KICAgICAgICAkdGhpcy0+cGFyc2Vfb3B0aW9uKCRjb250ZW50KTsNCiAgICAgICAgLy8gU3RlcCA3OiDmm7/mjaLmoIfnrb4NCiAgICAgICAgJHRoaXMtPnBhcnNlX3ZhcnMoJGNvbnRlbnQpOw0KICAgICAgICAvLyBTdGVwIDg6IOabv+aNouWHveaVsA0KICAgICAgICAkdGhpcy0+cGFyc2VfZnVuY3Rpb24oJGNvbnRlbnQpOw0KICAgICAgICAvLyBTdGVwIDk6IOino+aekElmDQogICAgICAgICR0aGlzLT5wYXJzZV9pZigkY29udGVudCk7DQogICAgICAgIC8vIFN0ZXAgMTA6IOino+aekGZvcmVhY2gNCiAgICAgICAgJHRoaXMtPnBhcnNlX2ZvcmVhY2goJGNvbnRlbnQpOw0KICAgICAgICAvLyBTdGVwIDExOiDop6PmnpBmb3INCiAgICAgICAgJHRoaXMtPnBhcnNlX2ZvcigkY29udGVudCk7DQogICAgICAgIC8vIFN0ZXAgTjog5oGi5aSN5LiN57yW6K+R55qE5Luj56CBDQogICAgICAgICR0aGlzLT5wYXJzZV9iYWNrX3VuY29tcGlsZV9jb2RlKCRjb250ZW50KTsNCg0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9UZW1wbGF0ZV9Db21waWxpbmdfRW5kJ10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICAgICAkZnByZXR1cm4gPSAkZnBuYW1lKCR0aGlzLCAkY29udGVudCk7DQogICAgICAgICAgICBpZiAoJGZwc2lnbmFsID09IFBMVUdJTl9FWElUU0lHTkFMX1JFVFVSTikgew0KICAgICAgICAgICAgICAgICRmcHNpZ25hbCA9IFBMVUdJTl9FWElUU0lHTkFMX05PTkU7DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gJGZwcmV0dXJuOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuICRjb250ZW50Ow0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkY29udGVudA0KICAgICAqLw0KICAgIHByb3RlY3RlZCBmdW5jdGlvbiByZW1vdmVfcGhwX2Jsb2NrcygmJGNvbnRlbnQpDQogICAgew0KICAgICAgICAkY29udGVudCA9IHByZWdfcmVwbGFjZSgiL1w8XD9waHBbXGRcRF0rP1w/XD4vc2kiLCAnJywgJGNvbnRlbnQpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkY29udGVudA0KICAgICAqLw0KICAgIHByb3RlY3RlZCBmdW5jdGlvbiBwYXJzZV9jb21tZW50cygmJGNvbnRlbnQpDQogICAgew0KICAgICAgICAkY29udGVudCA9IHByZWdfcmVwbGFjZSgnL1x7XCooW15cfV0rKVwqXH0vJywgJ3twaHB9IC8qJDEqLyB7L3BocH0nLCAkY29udGVudCk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRjb250ZW50DQogICAgICovDQogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIHBhcnNlX3VuY29tcGlsZV9jb2RlKCYkY29udGVudCkNCiAgICB7DQogICAgICAgICR0aGlzLT51bmNvbXBpbGVkQ29kZVN0b3JlID0gYXJyYXkoKTsNCiAgICAgICAgJG1hdGNoZXMgPSBhcnJheSgpOw0KICAgICAgICBpZiAoJGkgPSBwcmVnX21hdGNoX2FsbCgnL1x7KHBocHxwcmUpXH0oW1xEXGRdKz8pXHtcLyhwaHB8cHJlKVx9L3NpJywgJGNvbnRlbnQsICRtYXRjaGVzKSA+IDApIHsNCiAgICAgICAgICAgIGlmIChpc3NldCgkbWF0Y2hlc1syXSkpIHsNCiAgICAgICAgICAgICAgICBmb3JlYWNoICgkbWF0Y2hlc1syXSBhcyAkaiA9PiAkcCkgew0KICAgICAgICAgICAgICAgICAgICAkY29udGVudCA9IHN0cl9yZXBsYWNlKCRwLCAnPCEtLSBwYXJzZV9taWRkbGVfY29kZScgLiAkaiAuICctLT4nLCAkY29udGVudCk7DQogICAgICAgICAgICAgICAgICAgICR0aGlzLT51bmNvbXBpbGVkQ29kZVN0b3JlWyRqXSA9IGFycmF5KA0KICAgICAgICAgICAgICAgICAgICAgICAgJ3R5cGUnICAgID0+ICRtYXRjaGVzWzFdWyRqXSwNCiAgICAgICAgICAgICAgICAgICAgICAgICdjb250ZW50JyA9PiAkcCwNCiAgICAgICAgICAgICAgICAgICAgKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJGNvbnRlbnQNCiAgICAgKi8NCiAgICBwcm90ZWN0ZWQgZnVuY3Rpb24gcGFyc2VfYmFja191bmNvbXBpbGVfY29kZSgmJGNvbnRlbnQpDQogICAgew0KICAgICAgICBmb3JlYWNoICgkdGhpcy0+dW5jb21waWxlZENvZGVTdG9yZSBhcyAkaiA9PiAkcCkgew0KICAgICAgICAgICAgaWYgKCRwWyd0eXBlJ10gPT0gJ3BocCcpIHsNCiAgICAgICAgICAgICAgICAkY29udGVudCA9IHN0cl9yZXBsYWNlKCd7cGhwfTwhLS0gcGFyc2VfbWlkZGxlX2NvZGUnIC4gJGogLiAnLS0+ey9waHB9JywgJzwnIC4gJz9waHAgJyAuICRwWydjb250ZW50J10gLiAnID8nIC4gJz4nLCAkY29udGVudCk7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICRjb250ZW50ID0gc3RyX3JlcGxhY2UoDQogICAgICAgICAgICAgICAgICAgICd7JyAuICRwWyd0eXBlJ10gLiAnfTwhLS0gcGFyc2VfbWlkZGxlX2NvZGUnIC4gJGogLiAnLS0+ey8nIC4gJHBbJ3R5cGUnXSAuICd9JywNCiAgICAgICAgICAgICAgICAgICAgJHBbJ2NvbnRlbnQnXSwNCiAgICAgICAgICAgICAgICAgICAgJGNvbnRlbnQNCiAgICAgICAgICAgICAgICApOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgJGNvbnRlbnQgPSBwcmVnX3JlcGxhY2UoJy9ce3BocFx9KFtcRFxkXSs/KVx7XC9waHBcfS8nLCAnPCcgLiAnP3BocCAkMSA/JyAuICc+JywgJGNvbnRlbnQpOw0KICAgICAgICAkdGhpcy0+dW5jb21waWxlZENvZGVTdG9yZSA9IGFycmF5KCk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRjb250ZW50DQogICAgICovDQogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIHBhcnNlX3RlbXBsYXRlKCYkY29udGVudCkNCiAgICB7DQogICAgICAgICRjb250ZW50ID0gcHJlZ19yZXBsYWNlKCcvXHt0ZW1wbGF0ZTooW15cfV0rKVx9LycsICd7cGhwfSBpbmNsdWRlICR0aGlzLT5HZXRUZW1wbGF0ZShcJyQxXCcpOyB7L3BocH0nLCAkY29udGVudCk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRjb250ZW50DQogICAgICovDQogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIHBhcnNlX21vZHVsZSgmJGNvbnRlbnQpDQogICAgew0KICAgICAgICAkY29udGVudCA9IHByZWdfcmVwbGFjZSgnL1x7bW9kdWxlOihbXlx9XSspXH0vJywgJ3twaHB9IGlmKGlzc2V0KCRtb2R1bGVzW1wnJDFcJ10pKXtlY2hvICRtb2R1bGVzW1wnJDFcJ10tPkNvbnRlbnQ7fSB7L3BocH0nLCAkY29udGVudCk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRjb250ZW50DQogICAgICovDQogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIHBhcnNlX29wdGlvbigmJGNvbnRlbnQpDQogICAgew0KICAgICAgICAkY29udGVudCA9IHByZWdfcmVwbGFjZSgnI1x7XCMoW15cfV0rKVwjXH0jJywgJzw/cGhwIGlmKGRlZmluZWQodHJpbShcJ1xcMVwnKSkpe2VjaG8gXFwxO31lbHNle2VjaG8gJG9wdGlvbltcJ1xcMVwnXTt9ID8+JywgJGNvbnRlbnQpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkY29udGVudA0KICAgICAqLw0KICAgIHByb3RlY3RlZCBmdW5jdGlvbiBwYXJzZV92YXJzKCYkY29udGVudCkNCiAgICB7DQogICAgICAgICRjb250ZW50ID0gcHJlZ19yZXBsYWNlX2NhbGxiYWNrKCcjXHtcJCg/IVwoKShbXlx9XSspXH0jJywgYXJyYXkoJHRoaXMsICdwYXJzZV92YXJzX3JlcGxhY2VfZG90JyksICRjb250ZW50KTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJGNvbnRlbnQNCiAgICAgKi8NCiAgICBwcm90ZWN0ZWQgZnVuY3Rpb24gcGFyc2VfZnVuY3Rpb24oJiRjb250ZW50KQ0KICAgIHsNCiAgICAgICAgJGNvbnRlbnQgPSBwcmVnX3JlcGxhY2VfY2FsbGJhY2soJy9ceyhbYS16QS1aMC05X10rPylcKCguKj8pXClcfS8nLCBhcnJheSgkdGhpcywgJ3BhcnNlX2Z1bnRpb25fcmVwbGFjZV9kb3QnKSwgJGNvbnRlbnQpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkY29udGVudA0KICAgICAqLw0KICAgIHByb3RlY3RlZCBmdW5jdGlvbiBwYXJzZV9pZigmJGNvbnRlbnQpDQogICAgew0KICAgICAgICB3aGlsZSAocHJlZ19tYXRjaCgnL1x7aWYgW15cblx9XStcfS4qP1x7XC9pZlx9L3MnLCAkY29udGVudCkpIHsNCiAgICAgICAgICAgICRjb250ZW50ID0gcHJlZ19yZXBsYWNlX2NhbGxiYWNrKA0KICAgICAgICAgICAgICAgICcvXHtpZiAoW15cblx9XSspXH0oLio/KVx7XC9pZlx9L3MnLA0KICAgICAgICAgICAgICAgIGFycmF5KCR0aGlzLCAncGFyc2VfaWZfc3ViJyksDQogICAgICAgICAgICAgICAgJGNvbnRlbnQNCiAgICAgICAgICAgICk7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJG1hdGNoZXMNCiAgICAgKg0KICAgICAqIEByZXR1cm4gc3RyaW5nDQogICAgICovDQogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIHBhcnNlX2lmX3N1YigkbWF0Y2hlcykNCiAgICB7DQogICAgICAgICRjb250ZW50ID0gcHJlZ19yZXBsYWNlX2NhbGxiYWNrKA0KICAgICAgICAgICAgJy9ce2Vsc2VpZiAoW15cblx9XSspXH0vJywNCiAgICAgICAgICAgIGFycmF5KCR0aGlzLCAncGFyc2VfZWxzZWlmJyksDQogICAgICAgICAgICAkbWF0Y2hlc1syXQ0KICAgICAgICApOw0KDQogICAgICAgICRpZmV4cCA9IHN0cl9yZXBsYWNlKCRtYXRjaGVzWzFdLCAkdGhpcy0+cmVwbGFjZV9kb3QoJG1hdGNoZXNbMV0pLCAkbWF0Y2hlc1sxXSk7DQoNCiAgICAgICAgJGNvbnRlbnQgPSBzdHJfcmVwbGFjZSgne2Vsc2V9JywgJ3twaHB9fWVsc2V7IHsvcGhwfScsICRjb250ZW50KTsNCg0KICAgICAgICByZXR1cm4gIjw/cGhwIGlmICgkaWZleHApIHsgPz4kY29udGVudDw/cGhwIH0gPz4iOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkbWF0Y2hlcw0KICAgICAqDQogICAgICogQHJldHVybiBzdHJpbmcNCiAgICAgKi8NCiAgICBwcm90ZWN0ZWQgZnVuY3Rpb24gcGFyc2VfZWxzZWlmKCRtYXRjaGVzKQ0KICAgIHsNCiAgICAgICAgJGlmZXhwID0gc3RyX3JlcGxhY2UoJG1hdGNoZXNbMV0sICR0aGlzLT5yZXBsYWNlX2RvdCgkbWF0Y2hlc1sxXSksICRtYXRjaGVzWzFdKTsNCg0KICAgICAgICByZXR1cm4gIntwaHB9fWVsc2VpZigkaWZleHApIHsgey9waHB9IjsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJGNvbnRlbnQNCiAgICAgKi8NCiAgICBwcm90ZWN0ZWQgZnVuY3Rpb24gcGFyc2VfZm9yZWFjaCgmJGNvbnRlbnQpDQogICAgew0KICAgICAgICB3aGlsZSAocHJlZ19tYXRjaCgnL1x7Zm9yZWFjaCguKz8pXH0oLis/KXtcL2ZvcmVhY2h9L3MnLCAkY29udGVudCkpIHsNCiAgICAgICAgICAgICRjb250ZW50ID0gcHJlZ19yZXBsYWNlX2NhbGxiYWNrKA0KICAgICAgICAgICAgICAgICcvXHtmb3JlYWNoKC4rPylcfSguKz8pe1wvZm9yZWFjaH0vcycsDQogICAgICAgICAgICAgICAgYXJyYXkoJHRoaXMsICdwYXJzZV9mb3JlYWNoX3N1YicpLA0KICAgICAgICAgICAgICAgICRjb250ZW50DQogICAgICAgICAgICApOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRtYXRjaGVzDQogICAgICoNCiAgICAgKiBAcmV0dXJuIHN0cmluZw0KICAgICAqLw0KICAgIHByb3RlY3RlZCBmdW5jdGlvbiBwYXJzZV9mb3JlYWNoX3N1YigkbWF0Y2hlcykNCiAgICB7DQogICAgICAgICRleHAgPSAkdGhpcy0+cmVwbGFjZV9kb3QoJG1hdGNoZXNbMV0pOw0KICAgICAgICAkY29kZSA9ICRtYXRjaGVzWzJdOw0KDQogICAgICAgIHJldHVybiAie3BocH0gZm9yZWFjaCAoJGV4cCkge3svcGhwfSRjb2Rle3BocH19ICB7L3BocH0iOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkY29udGVudA0KICAgICAqLw0KICAgIHByb3RlY3RlZCBmdW5jdGlvbiBwYXJzZV9mb3IoJiRjb250ZW50KQ0KICAgIHsNCiAgICAgICAgd2hpbGUgKHByZWdfbWF0Y2goJy9ce2ZvciguKz8pXH0oLis/KXtcL2Zvcn0vcycsICRjb250ZW50KSkgew0KICAgICAgICAgICAgJGNvbnRlbnQgPSBwcmVnX3JlcGxhY2VfY2FsbGJhY2soDQogICAgICAgICAgICAgICAgJy9ce2ZvciguKz8pXH0oLis/KXtcL2Zvcn0vcycsDQogICAgICAgICAgICAgICAgYXJyYXkoJHRoaXMsICdwYXJzZV9mb3Jfc3ViJyksDQogICAgICAgICAgICAgICAgJGNvbnRlbnQNCiAgICAgICAgICAgICk7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJG1hdGNoZXMNCiAgICAgKg0KICAgICAqIEByZXR1cm4gc3RyaW5nDQogICAgICovDQogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIHBhcnNlX2Zvcl9zdWIoJG1hdGNoZXMpDQogICAgew0KICAgICAgICAkZXhwID0gJHRoaXMtPnJlcGxhY2VfZG90KCRtYXRjaGVzWzFdKTsNCiAgICAgICAgJGNvZGUgPSAkbWF0Y2hlc1syXTsNCg0KICAgICAgICByZXR1cm4gIntwaHB9IGZvcigkZXhwKSB7ey9waHB9ICRjb2Rle3BocH0gfSAgey9waHB9IjsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJG1hdGNoZXMNCiAgICAgKg0KICAgICAqIEByZXR1cm4gc3RyaW5nDQogICAgICovDQogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIHBhcnNlX3ZhcnNfcmVwbGFjZV9kb3QoJG1hdGNoZXMpDQogICAgew0KICAgICAgICAkcyA9IHN0cl9yZXBsYWNlKCc9PicsICcnLCAkbWF0Y2hlc1sxXSk7DQogICAgICAgIGlmIChzdHJwb3MoJHMsICc9JykgPT09IGZhbHNlKSB7DQogICAgICAgICAgICByZXR1cm4gJ3twaHB9IGVjaG8gJCcgLiAkdGhpcy0+cmVwbGFjZV9kb3QoJG1hdGNoZXNbMV0pIC4gJzsgey9waHB9JzsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIHJldHVybiAne3BocH0gJCcgLiAkdGhpcy0+cmVwbGFjZV9kb3QoJG1hdGNoZXNbMV0pIC4gJzsgey9waHB9JzsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkbWF0Y2hlcw0KICAgICAqDQogICAgICogQHJldHVybiBzdHJpbmcNCiAgICAgKi8NCiAgICBwcm90ZWN0ZWQgZnVuY3Rpb24gcGFyc2VfZnVudGlvbl9yZXBsYWNlX2RvdCgkbWF0Y2hlcykNCiAgICB7DQogICAgICAgIHJldHVybiAne3BocH0gZWNobyAnIC4gJG1hdGNoZXNbMV0gLiAnKCcgLiAkdGhpcy0+cmVwbGFjZV9kb3QoJG1hdGNoZXNbMl0pIC4gJyk7IHsvcGhwfSc7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRjb250ZW50DQogICAgICoNCiAgICAgKiBAcmV0dXJuIG1peGVkDQogICAgICovDQogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIHJlcGxhY2VfZG90KCRjb250ZW50KQ0KICAgIHsNCiAgICAgICAgJGFycmF5ID0gYXJyYXkoKTsNCiAgICAgICAgcHJlZ19tYXRjaF9hbGwoJy8iLis/InxcJy4rP1wnLycsICRjb250ZW50LCAkYXJyYXksIFBSRUdfU0VUX09SREVSKTsNCiAgICAgICAgaWYgKGNvdW50KCRhcnJheSkgPiAwKSB7DQogICAgICAgICAgICBmb3JlYWNoICgkYXJyYXkgYXMgJGEpIHsNCiAgICAgICAgICAgICAgICAkYSA9ICRhWzBdOw0KICAgICAgICAgICAgICAgIGlmIChzdHJzdHIoJGEsICcuJykgIT0gZmFsc2UpIHsNCiAgICAgICAgICAgICAgICAgICAgJGIgPSBzdHJfcmVwbGFjZSgnLicsICd7JV9kb3RfJX0nLCAkYSk7DQogICAgICAgICAgICAgICAgICAgICRjb250ZW50ID0gc3RyX3JlcGxhY2UoJGEsICRiLCAkY29udGVudCk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgICRjb250ZW50ID0gc3RyX3JlcGxhY2UoJyAuICcsICcgeyVfZG90XyV9ICcsICRjb250ZW50KTsNCiAgICAgICAgJGNvbnRlbnQgPSBzdHJfcmVwbGFjZSgnLiAnLCAneyVfZG90XyV9ICcsICRjb250ZW50KTsNCiAgICAgICAgJGNvbnRlbnQgPSBzdHJfcmVwbGFjZSgnIC4nLCAnIHslX2RvdF8lfScsICRjb250ZW50KTsNCiAgICAgICAgJGNvbnRlbnQgPSBzdHJfcmVwbGFjZSgnLicsICctPicsICRjb250ZW50KTsNCiAgICAgICAgJGNvbnRlbnQgPSBzdHJfcmVwbGFjZSgneyVfZG90XyV9JywgJy4nLCAkY29udGVudCk7DQoNCiAgICAgICAgcmV0dXJuICRjb250ZW50Ow0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOaYvuekuuaooeadvw0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAkZW50cnlQYWdlDQogICAgICoNCiAgICAgKiBAdGhyb3dzIEV4Y2VwdGlvbg0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBEaXNwbGF5KCRlbnRyeVBhZ2UgPSAiIikNCiAgICB7DQogICAgICAgIGdsb2JhbCAkemJwOw0KICAgICAgICBpZiAoJGVudHJ5UGFnZSA9PSAiIikgew0KICAgICAgICAgICAgJGVudHJ5UGFnZSA9ICR0aGlzLT5lbnRyeVBhZ2U7DQogICAgICAgIH0NCiAgICAgICAgJGYgPSAkdGhpcy0+cGF0aCAuICRlbnRyeVBhZ2UgLiAnLnBocCc7DQoNCiAgICAgICAgaWYgKCFpc19yZWFkYWJsZSgkZikpIHsNCiAgICAgICAgICAgICR6YnAtPlNob3dFcnJvcig4NiwgX19GSUxFX18sIF9fTElORV9fKTsNCiAgICAgICAgfQ0KDQogICAgICAgICRhayA9IGFycmF5X2tleXMoJHRoaXMtPnN0YXRpY1RhZ3MpOw0KICAgICAgICAkYXYgPSBhcnJheV92YWx1ZXMoJHRoaXMtPnN0YXRpY1RhZ3MpOw0KICAgICAgICBmb3JlYWNoICgkemJwLT5tb2R1bGVzYnlmaWxlbmFtZSBhcyAmJG0pIHsNCiAgICAgICAgICAgICRtLT5Db250ZW50ID0gc3RyX3JlcGxhY2UoJGFrLCAkYXYsICRtLT5Db250ZW50KTsNCiAgICAgICAgfQ0KICAgICAgICB1bnNldCgkYWssICRhdik7DQoNCiAgICAgICAgLy8g5YWl5Y+j5aSE5bCGdGFnc+mHjOeahOWPmOmHj+aPkOWNh+WFqOWxgA0KICAgICAgICBmb3JlYWNoICgkdGhpcy0+dGVtcGxhdGVUYWdzIGFzICRrZXkgPT4gJiR2YWx1ZSkgew0KICAgICAgICAgICAgJCRrZXkgPSAmJHZhbHVlOw0KICAgICAgICB9DQoNCiAgICAgICAgaW5jbHVkZSAkZjsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDojrflj5bovpPlh7rlhoXlrrkuDQogICAgICoNCiAgICAgKiBAcGFyYW0gc3RyaW5nICRlbnRyeVBhZ2UNCiAgICAgKg0KICAgICAqIEB0aHJvd3MgRXhjZXB0aW9uDQogICAgICoNCiAgICAgKiBAcmV0dXJuIHN0cmluZw0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBPdXRwdXQoJGVudHJ5UGFnZSA9ICIiKQ0KICAgIHsNCiAgICAgICAgb2Jfc3RhcnQoKTsNCiAgICAgICAgJHRoaXMtPkRpc3BsYXkoJGVudHJ5UGFnZSk7DQogICAgICAgICRkYXRhID0gb2JfZ2V0X2NvbnRlbnRzKCk7DQogICAgICAgIG9iX2VuZF9jbGVhbigpOw0KDQogICAgICAgIHJldHVybiAkZGF0YTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDovb3lhaXlt7LnvJbor5HmqKHmnb9zLg0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBMb2FkQ29tcGlsZWRUZW1wbGF0ZXMoKQ0KICAgIHsNCiAgICAgICAgJHRlbXBsYXRlcyA9IGFycmF5KCk7DQoNCiAgICAgICAgLy8g6K+75Y+W5Li76aKY5qih5p2/DQogICAgICAgICRmaWxlcyA9IEdldEZpbGVzSW5EaXIoJHRoaXMtPnBhdGgsICdwaHAnKTsNCiAgICAgICAgZm9yZWFjaCAoJGZpbGVzIGFzICRzb3J0bmFtZSA9PiAkZnVsbG5hbWUpIHsNCiAgICAgICAgICAgICR0ZW1wbGF0ZXNbJHNvcnRuYW1lXSA9IGZpbGVfZ2V0X2NvbnRlbnRzKCRmdWxsbmFtZSk7DQogICAgICAgIH0NCg0KICAgICAgICAkdGhpcy0+Y29tcGlsZWRUZW1wbGF0ZXMgPSAkdGVtcGxhdGVzOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOi9veWFpeacque8luivkeaooeadv3MuDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIExvYWRUZW1wbGF0ZXMoKQ0KICAgIHsNCiAgICAgICAgZ2xvYmFsICR6YnA7DQoNCiAgICAgICAgJHRoZW1lID0gJHRoaXMtPnRoZW1lOw0KICAgICAgICAkdGVtcGxhdGVzID0gYXJyYXkoKTsNCg0KICAgICAgICAvLyDor7vlj5bpooTnva7mqKHmnb8NCiAgICAgICAgJGZpbGVzID0gR2V0RmlsZXNJbkRpcigkemJwLT5wYXRoIC4gJ3piX3N5c3RlbS9kZWZlbmQvZGVmYXVsdC8nLCAncGhwJyk7DQogICAgICAgIGZvcmVhY2ggKCRmaWxlcyBhcyAkc29ydG5hbWUgPT4gJGZ1bGxuYW1lKSB7DQogICAgICAgICAgICAkdGVtcGxhdGVzWyRzb3J0bmFtZV0gPSBmaWxlX2dldF9jb250ZW50cygkZnVsbG5hbWUpOw0KICAgICAgICB9DQoNCiAgICAgICAgLy8g6K+75Y+W5Li76aKY5qih5p2/DQogICAgICAgICRmaWxlcyA9IEdldEZpbGVzSW5EaXIoJHpicC0+dXNlcnNkaXIgLiAndGhlbWUvJyAuICR0aGVtZSAuICcvdGVtcGxhdGUvJywgJ3BocCcpOw0KICAgICAgICBmb3JlYWNoICgkZmlsZXMgYXMgJHNvcnRuYW1lID0+ICRmdWxsbmFtZSkgew0KICAgICAgICAgICAgJHRlbXBsYXRlc1skc29ydG5hbWVdID0gZmlsZV9nZXRfY29udGVudHMoJGZ1bGxuYW1lKTsNCiAgICAgICAgfQ0KDQogICAgICAgIGZvciAoJGkgPSAyOyAkaSA8PSA1OyAkaSsrKSB7DQogICAgICAgICAgICBpZiAoIWlzc2V0KCR0ZW1wbGF0ZXNbJ3NpZGViYXInIC4gJGldKSkgew0KICAgICAgICAgICAgICAgICR0ZW1wbGF0ZXNbJ3NpZGViYXInIC4gJGldID0gc3RyX3JlcGxhY2UoJyRzaWRlYmFyJywgJyRzaWRlYmFyJyAuICRpLCAkdGVtcGxhdGVzWydzaWRlYmFyJ10pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgJHRoaXMtPnRlbXBsYXRlcyA9ICR0ZW1wbGF0ZXM7DQogICAgfQ0KDQogICAgLyoqDQogICAgICrop6PmnpDmqKHmnb/moIfnrb4uDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIE1ha2VUZW1wbGF0ZVRhZ3MoKQ0KICAgIHsNCiAgICAgICAgZ2xvYmFsICR6YnA7DQoNCiAgICAgICAgJG9wdGlvbiA9ICR6YnAtPm9wdGlvbjsNCiAgICAgICAgdW5zZXQoJG9wdGlvblsnWkNfQkxPR19DTFNJRCddKTsNCiAgICAgICAgdW5zZXQoJG9wdGlvblsnWkNfU1FMSVRFX05BTUUnXSk7DQogICAgICAgIHVuc2V0KCRvcHRpb25bJ1pDX01ZU1FMX1VTRVJOQU1FJ10pOw0KICAgICAgICB1bnNldCgkb3B0aW9uWydaQ19NWVNRTF9QQVNTV09SRCddKTsNCiAgICAgICAgdW5zZXQoJG9wdGlvblsnWkNfTVlTUUxfTkFNRSddKTsNCiAgICAgICAgdW5zZXQoJG9wdGlvblsnWkNfTVlTUUxfUE9SVCddKTsNCiAgICAgICAgdW5zZXQoJG9wdGlvblsnWkNfTVlTUUxfU0VSVkVSJ10pOw0KICAgICAgICB1bnNldCgkb3B0aW9uWydaQ19QR1NRTF9VU0VSTkFNRSddKTsNCiAgICAgICAgdW5zZXQoJG9wdGlvblsnWkNfUEdTUUxfUEFTU1dPUkQnXSk7DQogICAgICAgIHVuc2V0KCRvcHRpb25bJ1pDX1BHU1FMX05BTUUnXSk7DQogICAgICAgIHVuc2V0KCRvcHRpb25bJ1pDX1BHU1FMX1BPUlQnXSk7DQogICAgICAgIHVuc2V0KCRvcHRpb25bJ1pDX1BHU1FMX1NFUlZFUiddKTsNCiAgICAgICAgdW5zZXQoJG9wdGlvblsnWkNfREFUQUJBU0VfVFlQRSddKTsNCg0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWyd6YnAnXSA9ICYkemJwOw0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWyd1c2VyJ10gPSAmJHpicC0+dXNlcjsNCiAgICAgICAgJHRoaXMtPnRlbXBsYXRlVGFnc1snb3B0aW9uJ10gPSAmJG9wdGlvbjsNCiAgICAgICAgJHRoaXMtPnRlbXBsYXRlVGFnc1snbGFuZyddID0gJiR6YnAtPmxhbmc7DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ3ZlcnNpb24nXSA9ICYkemJwLT52ZXJzaW9uOw0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWydjYXRlZ29yeXMnXSA9ICYkemJwLT5jYXRlZ29yaWVzOw0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWydjYXRlZ29yaWVzJ10gPSAmJHpicC0+Y2F0ZWdvcmllczsNCiAgICAgICAgJHRoaXMtPnRlbXBsYXRlVGFnc1snY2F0ZWdvcnlzYnlvcmRlciddID0gJiR6YnAtPmNhdGVnb3JpZXNieW9yZGVyOw0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWydjYXRlZ29yaWVzYnlvcmRlciddID0gJiR6YnAtPmNhdGVnb3JpZXNieW9yZGVyOw0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWydtb2R1bGVzJ10gPSAmJHpicC0+bW9kdWxlc2J5ZmlsZW5hbWU7DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ3RpdGxlJ10gPSBodG1sc3BlY2lhbGNoYXJzKCR6YnAtPnRpdGxlKTsNCiAgICAgICAgJHRoaXMtPnRlbXBsYXRlVGFnc1snaG9zdCddID0gJiR6YnAtPmhvc3Q7DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ3BhdGgnXSA9ICYkemJwLT5wYXRoOw0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWydjb29raWVzcGF0aCddID0gJiR6YnAtPmNvb2tpZXNwYXRoOw0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWyduYW1lJ10gPSBodG1sc3BlY2lhbGNoYXJzKCR6YnAtPm5hbWUpOw0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWydzdWJuYW1lJ10gPSBodG1sc3BlY2lhbGNoYXJzKCR6YnAtPnN1Ym5hbWUpOw0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWyd0aGVtZSddID0gJiR6YnAtPnRoZW1lOw0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWyd0aGVtZWluZm8nXSA9ICYkemJwLT50aGVtZWluZm87DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ3N0eWxlJ10gPSAmJHpicC0+c3R5bGU7DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ2xhbmd1YWdlJ10gPSAkemJwLT5vcHRpb25bJ1pDX0JMT0dfTEFOR1VBR0UnXTsNCiAgICAgICAgJHRoaXMtPnRlbXBsYXRlVGFnc1snY29weXJpZ2h0J10gPSAkemJwLT5vcHRpb25bJ1pDX0JMT0dfQ09QWVJJR0hUJ107DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ3pibG9ncGhwJ10gPSAkemJwLT5vcHRpb25bJ1pDX0JMT0dfUFJPRFVDVF9GVUxMJ107DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ3pibG9ncGhwaHRtbCddID0gJHpicC0+b3B0aW9uWydaQ19CTE9HX1BST0RVQ1RfRlVMTEhUTUwnXTsNCiAgICAgICAgJHRoaXMtPnRlbXBsYXRlVGFnc1snemJsb2dwaHBhYmJyaHRtbCddID0gJHpicC0+b3B0aW9uWydaQ19CTE9HX1BST0RVQ1RfSFRNTCddOw0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWyd0eXBlJ10gPSAnJzsNCiAgICAgICAgJHRoaXMtPnRlbXBsYXRlVGFnc1sncGFnZSddID0gJyc7DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ3NvY2lhbGNvbW1lbnQnXSA9ICYkemJwLT5zb2NpYWxjb21tZW50Ow0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWydoZWFkZXInXSA9ICYkemJwLT5oZWFkZXI7DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ2Zvb3RlciddID0gJiR6YnAtPmZvb3RlcjsNCiAgICAgICAgJHRoaXMtPnRlbXBsYXRlVGFnc1sndmFsaWRjb2RldXJsJ10gPSAmJHpicC0+dmFsaWRjb2RldXJsOw0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWydmZWVkdXJsJ10gPSAmJHpicC0+ZmVlZHVybDsNCiAgICAgICAgJHRoaXMtPnRlbXBsYXRlVGFnc1snc2VhcmNodXJsJ10gPSAmJHpicC0+c2VhcmNodXJsOw0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWydhamF4dXJsJ10gPSAmJHpicC0+YWpheHVybDsNCiAgICAgICAgJHMgPSBhcnJheSgNCiAgICAgICAgICAgICRvcHRpb25bJ1pDX1NJREVCQVJfT1JERVInXSwNCiAgICAgICAgICAgICRvcHRpb25bJ1pDX1NJREVCQVIyX09SREVSJ10sDQogICAgICAgICAgICAkb3B0aW9uWydaQ19TSURFQkFSM19PUkRFUiddLA0KICAgICAgICAgICAgJG9wdGlvblsnWkNfU0lERUJBUjRfT1JERVInXSwNCiAgICAgICAgICAgICRvcHRpb25bJ1pDX1NJREVCQVI1X09SREVSJ10sDQogICAgICAgICk7DQogICAgICAgIGZvcmVhY2ggKCRzIGFzICRrID0+ICR2KSB7DQogICAgICAgICAgICAkYSA9IGV4cGxvZGUoJ3wnLCAkdik7DQogICAgICAgICAgICAkbXMgPSBhcnJheSgpOw0KICAgICAgICAgICAgZm9yZWFjaCAoJGEgYXMgJHYyKSB7DQogICAgICAgICAgICAgICAgaWYgKGlzc2V0KCR6YnAtPm1vZHVsZXNieWZpbGVuYW1lWyR2Ml0pKSB7DQogICAgICAgICAgICAgICAgICAgICRtID0gJHpicC0+bW9kdWxlc2J5ZmlsZW5hbWVbJHYyXTsNCiAgICAgICAgICAgICAgICAgICAgJG1zW10gPSAkbTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICAgICAvL3Jlc2V0KCRtcyk7DQogICAgICAgICAgICAkcyA9ICdzaWRlYmFyJyAuICgkayA9PSAwID8gJycgOiAkayArIDEpOw0KICAgICAgICAgICAgJHRoaXMtPiRzID0gJG1zOw0KICAgICAgICAgICAgJG1zID0gbnVsbDsNCiAgICAgICAgfQ0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWydzaWRlYmFyJ10gPSAmJHRoaXMtPnNpZGViYXI7DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ3NpZGViYXIyJ10gPSAmJHRoaXMtPnNpZGViYXIyOw0KICAgICAgICAkdGhpcy0+dGVtcGxhdGVUYWdzWydzaWRlYmFyMyddID0gJiR0aGlzLT5zaWRlYmFyMzsNCiAgICAgICAgJHRoaXMtPnRlbXBsYXRlVGFnc1snc2lkZWJhcjQnXSA9ICYkdGhpcy0+c2lkZWJhcjQ7DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZVRhZ3NbJ3NpZGViYXI1J10gPSAmJHRoaXMtPnNpZGViYXI1Ow0KDQogICAgICAgIC8vZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fVGVtcGxhdGVfTWFrZVRlbXBsYXRldGFncyddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAvLyAgICAkZnByZXR1cm4gPSAkZnBuYW1lKCR0aGlzLT50ZW1wbGF0ZVRhZ3MpOw0KICAgICAgICAvL30NCg0KICAgICAgICAkdCA9IGFycmF5KCk7DQogICAgICAgICRvID0gYXJyYXkoKTsNCiAgICAgICAgZm9yZWFjaCAoJHRoaXMtPnRlbXBsYXRlVGFncyBhcyAkayA9PiAkdikgew0KICAgICAgICAgICAgaWYgKGlzX3N0cmluZygkdikgfHwgaXNfbnVtZXJpYygkdikgfHwgaXNfYm9vbCgkdikpIHsNCiAgICAgICAgICAgICAgICAkdFsneyQnIC4gJGsgLiAnfSddID0gJHY7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgZm9yZWFjaCAoJG9wdGlvbiBhcyAkayA9PiAkdikgew0KICAgICAgICAgICAgaWYgKGlzX3N0cmluZygkdikgfHwgaXNfbnVtZXJpYygkdikgfHwgaXNfYm9vbCgkdikpIHsNCiAgICAgICAgICAgICAgICAkb1sneyMnIC4gJGsgLiAnI30nXSA9ICR2Ow0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgICR0aGlzLT5zdGF0aWNUYWdzID0gJHQgKyAkbzsNCiAgICB9DQoNCiAgICBwdWJsaWMgZnVuY3Rpb24gUmVwbGFjZVN0YXRpY1RhZ3MoJHMpDQogICAgew0KICAgICAgICAkcyA9IHN0cl9yZXBsYWNlKGFycmF5X2tleXMoJHRoaXMtPnN0YXRpY1RhZ3MpLCBhcnJheV92YWx1ZXMoJHRoaXMtPnN0YXRpY1RhZ3MpLCAkcyk7DQoNCiAgICAgICAgcmV0dXJuICRzOw0KICAgIH0NCn0NCg==</file>
	<file name='zb_system\function\lib\network.php' crc32='5033B4AF'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KLyoqDQogKiDnvZHnu5zov57mjqXnsbsuDQogKi8NCmNsYXNzIE5ldHdvcmsNCnsNCiAgICAvKioNCiAgICAgKiBAdmFyIG51bGwNCiAgICAgKi8NCiAgICBwdWJsaWMgJG5ldHdvcmt0eXBlID0gbnVsbDsNCiAgICAvKioNCiAgICAgKiBAdmFyIGFycmF5DQogICAgICovDQogICAgcHVibGljICRuZXR3b3JrX2xpc3QgPSBhcnJheSgpOw0KICAgIC8qKg0KICAgICAqIEB2YXIgYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyAkY3VybCA9IGZhbHNlOw0KICAgIC8qKg0KICAgICAqIEB2YXIgYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyAkZnNvY2tvcGVuID0gZmFsc2U7DQogICAgLyoqDQogICAgICogQHZhciBib29sDQogICAgICovDQogICAgcHVibGljICRmaWxlX2dldF9jb250ZW50cyA9IGZhbHNlOw0KICAgIC8qKg0KICAgICAqIEB2YXIgTmV0d29ya19fSW50ZXJmYWNlW10NCiAgICAgKi8NCiAgICBwcml2YXRlIHN0YXRpYyAkX25ldHdvcmsgPSBudWxsOw0KDQogICAgLyoqDQogICAgICog5p6E6YCg5Ye95pWwLg0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBfX2NvbnN0cnVjdCgpDQogICAgew0KICAgICAgICBpZiAoZnVuY3Rpb25fZXhpc3RzKCdjdXJsX2luaXQnKSAmJiBmdW5jdGlvbl9leGlzdHMoJ2N1cmxfZXhlYycpKSB7DQogICAgICAgICAgICAkdGhpcy0+bmV0d29ya19saXN0W10gPSAnY3VybCc7DQogICAgICAgICAgICAkdGhpcy0+Y3VybCA9IHRydWU7DQogICAgICAgIH0NCiAgICAgICAgaWYgKChib29sKSBpbmlfZ2V0KCdhbGxvd191cmxfZm9wZW4nKSkgew0KICAgICAgICAgICAgaWYgKGZ1bmN0aW9uX2V4aXN0cygnZnNvY2tvcGVuJykpIHsNCiAgICAgICAgICAgICAgICAkdGhpcy0+bmV0d29ya19saXN0W10gPSAnZnNvY2tvcGVuJzsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgICR0aGlzLT5mc29ja29wZW4gPSB0cnVlOw0KICAgICAgICB9DQogICAgICAgIGlmICgoYm9vbCkgaW5pX2dldCgnYWxsb3dfdXJsX2ZvcGVuJykpIHsNCiAgICAgICAgICAgIGlmIChmdW5jdGlvbl9leGlzdHMoJ2ZpbGVfZ2V0X2NvbnRlbnRzJykpIHsNCiAgICAgICAgICAgICAgICAkdGhpcy0+bmV0d29ya19saXN0W10gPSAnZmlsZWdldGNvbnRlbnRzJzsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgICR0aGlzLT5maWxlX2dldF9jb250ZW50cyA9IHRydWU7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gc3RyaW5nICRleHRlbnNpb24NCiAgICAgKg0KICAgICAqIEByZXR1cm4gTmV0d29ya19fSW50ZXJmYWNlDQogICAgICovDQogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBDcmVhdGUoJGV4dGVuc2lvbiA9ICcnKQ0KICAgIHsNCiAgICAgICAgaWYgKCFpc3NldChzZWxmOjokX25ldHdvcmspKSB7DQogICAgICAgICAgICBzZWxmOjokX25ldHdvcmsgPSBuZXcgc2VsZigpOw0KICAgICAgICB9DQogICAgICAgIGlmICgoIXNlbGY6OiRfbmV0d29yay0+ZmlsZV9nZXRfY29udGVudHMpICYmICghc2VsZjo6JF9uZXR3b3JrLT5mc29ja29wZW4pICYmICghc2VsZjo6JF9uZXR3b3JrLT5jdXJsKSkgew0KICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICB9DQoNCiAgICAgICAgJGV4dGVuc2lvbiA9ICgkZXh0ZW5zaW9uID09ICcnID8gc2VsZjo6JF9uZXR3b3JrLT5uZXR3b3JrX2xpc3RbMF0gOiAkZXh0ZW5zaW9uKTsNCiAgICAgICAgJHR5cGUgPSAnTmV0d29ya19fJyAuICRleHRlbnNpb247DQogICAgICAgICRuZXR3b3JrID0gbmV3ICR0eXBlKCk7DQoNCiAgICAgICAgcmV0dXJuICRuZXR3b3JrOw0KICAgIH0NCn0NCg==</file>
	<file name='zb_system\function\lib\zblogphp.php' crc32='71AE10A3'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KLyoqDQogKiB6YnDlhajlsYDmk43kvZznsbsuDQogKi8NCmNsYXNzIFpCbG9nUEhQDQp7DQogICAgcHJpdmF0ZSBzdGF0aWMgJF96YnAgPSBudWxsOw0KICAgIC8qKg0KICAgICAqIEB2YXIgc3RyaW5nIOeJiOacrOWPtw0KICAgICAqLw0KICAgIHB1YmxpYyAkdmVyc2lvbiA9IG51bGw7DQogICAgLyoqDQogICAgICogQHZhciBEYXRhYmFzZV9fSW50ZXJmYWNlIOaVsOaNruW6kw0KICAgICAqLw0KICAgIHB1YmxpYyAkZGIgPSBudWxsOw0KICAgIC8qKg0KICAgICAqIEB2YXIgYXJyYXkg6YWN572u6YCJ6aG5DQogICAgICovDQogICAgcHVibGljICRvcHRpb24gPSBhcnJheSgpOw0KICAgIC8qKg0KICAgICAqIEB2YXIgYXJyYXkg6K+t6KiADQogICAgICovDQogICAgcHVibGljICRsYW5nID0gYXJyYXkoKTsNCiAgICAvKioNCiAgICAgKiBAdmFyIGFycmF5IOivreiogOWMhWxpc3QNCiAgICAgKi8NCiAgICBwdWJsaWMgJGxhbmdwYWNrbGlzdCA9IGFycmF5KCk7DQogICAgLyoqDQogICAgICogQHZhciBzdHJpbmcg6Lev5b6EDQogICAgICovDQogICAgcHVibGljICRwYXRoID0gbnVsbDsNCiAgICAvKioNCiAgICAgKiBAdmFyIHN0cmluZyDln5/lkI0NCiAgICAgKi8NCiAgICBwdWJsaWMgJGhvc3QgPSBudWxsOw0KICAgIC8qKg0KICAgICAqIEB2YXIgc3RyaW5nIGNvb2tpZeS9nOeUqOWfnw0KICAgICAqLw0KICAgIHB1YmxpYyAkY29va2llc3BhdGggPSBudWxsOw0KICAgIC8qKg0KICAgICAqIEB2YXIgc3RyaW5nIGd1aWQNCiAgICAgKi8NCiAgICBwdWJsaWMgJGd1aWQgPSBudWxsOw0KICAgIC8qKg0KICAgICAqIEB2YXIgc3RyaW5nIOW9k+WJjemTvuaOpQ0KICAgICAqLw0KICAgIHB1YmxpYyAkY3VycmVudHVybCA9IG51bGw7DQogICAgLyoqDQogICAgICogQHZhciBzdHJpbmcg5b2T5YmN6ZO+5o6lDQogICAgICovDQogICAgcHVibGljICRmdWxsY3VycmVudHVybCA9IG51bGw7DQogICAgLyoqDQogICAgICogQHZhciBzdHJpbmcg55So5oi355uu5b2VDQogICAgICovDQogICAgcHVibGljICR1c2Vyc2RpciA9IG51bGw7DQogICAgLyoqDQogICAgICogQHZhciBzdHJpbmcg6aqM6K+B56CB5Zyw5Z2ADQogICAgICovDQogICAgcHVibGljICR2ZXJpZnlDb2RlVXJsID0gbnVsbDsNCiAgICAvKioNCiAgICAgKiBAdmFyIHN0cmluZyDpqozor4HnoIHlnLDlnYDvvIjmi7zlhpnplJnor6/vvIkNCiAgICAgKg0KICAgICAqIEBkZXByZWNhdGVkDQogICAgICovDQogICAgcHVibGljICR2YWxpZGNvZGV1cmwgPSBudWxsOw0KICAgIC8qKg0KICAgICAqIEB2YXIgc3RyaW5nDQogICAgICovDQogICAgcHVibGljICRmZWVkdXJsID0gbnVsbDsNCiAgICAvKioNCiAgICAgKiBAdmFyIHN0cmluZw0KICAgICAqLw0KICAgIHB1YmxpYyAkc2VhcmNodXJsID0gbnVsbDsNCiAgICAvKioNCiAgICAgKiBAdmFyIHN0cmluZw0KICAgICAqLw0KICAgIHB1YmxpYyAkYWpheHVybCA9IG51bGw7DQogICAgLyoqDQogICAgICogQHZhciBzdHJpbmcNCiAgICAgKi8NCiAgICBwdWJsaWMgJHhtbHJwY3VybCA9IG51bGw7DQogICAgLyoqDQogICAgICogQHZhciBNZW1iZXJbXSDnlKjmiLfmlbDnu4QNCiAgICAgKi8NCiAgICBwdWJsaWMgJG1lbWJlcnMgPSBhcnJheSgpOw0KICAgIC8qKg0KICAgICAqIEB2YXIgTWVtYmVyW10g55So5oi35pWw57uE77yI5Lul55So5oi35ZCN5Li66ZSu77yJDQogICAgICovDQogICAgcHVibGljICRtZW1iZXJzYnluYW1lID0gYXJyYXkoKTsNCiAgICAvKioNCiAgICAgKiBAdmFyIENhdGVnb3J5W10g5YiG57G75pWw57uEDQogICAgICovDQogICAgcHVibGljICRjYXRlZ29yeXMgPSBhcnJheSgpOw0KICAgIHB1YmxpYyAkY2F0ZWdvcmllcyA9IG51bGw7DQogICAgLyoqDQogICAgICogQHZhciBDYXRlZ29yeVtdIOWIhuexu+aVsOe7hO+8iOW3suaOkuW6j++8iQ0KICAgICAqLw0KICAgIHB1YmxpYyAkY2F0ZWdvcnlzYnlvcmRlciA9IGFycmF5KCk7DQogICAgcHVibGljICRjYXRlZ29yaWVzYnlvcmRlciA9IG51bGw7DQogICAgLyoqDQogICAgICogQHZhciBNb2R1bGVbXSDmqKHlnZfmlbDnu4QNCiAgICAgKi8NCiAgICBwdWJsaWMgJG1vZHVsZXMgPSBhcnJheSgpOw0KICAgIC8qKg0KICAgICAqIEB2YXIgTW9kdWxlW10g5qih5Z2X5pWw57uE77yI5Lul5paH5Lu25ZCN5Li66ZSu77yJDQogICAgICovDQogICAgcHVibGljICRtb2R1bGVzYnlmaWxlbmFtZSA9IGFycmF5KCk7DQogICAgLyoqDQogICAgICogQHZhciBDb25maWdbXSDphY3nva7pgInpobkNCiAgICAgKi8NCiAgICBwdWJsaWMgJGNvbmZpZ3MgPSBhcnJheSgpOw0KICAgIC8qKg0KICAgICAqIEB2YXIgVGFnW10g5qCH562+5pWw57uEDQogICAgICovDQogICAgcHVibGljICR0YWdzID0gYXJyYXkoKTsNCiAgICAvKioNCiAgICAgKiBAdmFyIFRhZ1tdIOagh+etvuaVsOe7hO+8iOS7peagh+etvuWQjeS4uumUru+8iQ0KICAgICAqLw0KICAgIHB1YmxpYyAkdGFnc2J5bmFtZSA9IGFycmF5KCk7DQogICAgLyoqDQogICAgICogQHZhciBDb21tZW50W10g6K+E6K665pWw57uEDQogICAgICovDQogICAgcHVibGljICRjb21tZW50cyA9IGFycmF5KCk7DQogICAgLyoqDQogICAgICogQHZhciBQb3N0W10g5paH56ug5YiX6KGo5pWw57uEDQogICAgICovDQogICAgcHVibGljICRwb3N0cyA9IGFycmF5KCk7DQoNCiAgICAvKioNCiAgICAgKiBAdmFyIHN0cmluZyDlvZPliY3pobXpnaLmoIfpopgNCiAgICAgKi8NCiAgICBwdWJsaWMgJHRpdGxlID0gbnVsbDsNCiAgICAvKioNCiAgICAgKiBAdmFyIHN0cmluZyDnvZHnq5nlkI0NCiAgICAgKi8NCiAgICBwdWJsaWMgJG5hbWUgPSBudWxsOw0KICAgIC8qKg0KICAgICAqIEB2YXIgc3RyaW5nIOe9keermeWtkOagh+mimA0KICAgICAqLw0KICAgIHB1YmxpYyAkc3VibmFtZSA9IG51bGw7DQogICAgLyoqDQogICAgICogQHZhciBBcHAg5b2T5YmN5Li76aKYDQogICAgICovDQogICAgcHVibGljICR0aGVtZSA9IG51bGw7DQogICAgLyoqDQogICAgICogQHZhciBhcnJheSgpIOW9k+WJjeS4u+mimOeJiOacrOS/oeaBrw0KICAgICAqLw0KICAgIHB1YmxpYyAkdGhlbWVpbmZvID0gYXJyYXkoKTsNCiAgICAvKioNCiAgICAgKiBAdmFyIHN0cmluZyDlvZPliY3kuLvpopjpo47moLwNCiAgICAgKi8NCiAgICBwdWJsaWMgJHN0eWxlID0gbnVsbDsNCg0KICAgIC8qKg0KICAgICAqIEB2YXIgTWVtYmVyIOW9k+WJjeeUqOaItw0KICAgICAqLw0KICAgIHB1YmxpYyAkdXNlciA9IG51bGw7DQogICAgLyoqDQogICAgICogQHZhciBDb25maWcg57yT5a2YDQogICAgICovDQogICAgcHVibGljICRjYWNoZSA9IG51bGw7DQoNCiAgICAvKioNCiAgICAgKiBAdmFyIGFycmF5fG51bGwg5pWw5o2u6KGoDQogICAgICovDQogICAgcHVibGljICR0YWJsZSA9IG51bGw7DQogICAgLyoqDQogICAgICogQHZhciBhcnJheXxudWxsIOaVsOaNruihqOS/oeaBrw0KICAgICAqLw0KICAgIHB1YmxpYyAkZGF0YWluZm8gPSBudWxsOw0KICAgIC8qKg0KICAgICAqIEB2YXIgYXJyYXl8bnVsbCDnsbvlnovluo/liJcNCiAgICAgKi8NCiAgICBwdWJsaWMgJHBvc3R0eXBlID0gbnVsbDsNCiAgICAvKioNCiAgICAgKiBAdmFyIGFycmF5fG51bGwg5pON5L2c5YiX6KGoDQogICAgICovDQogICAgcHVibGljICRhY3Rpb25zID0gbnVsbDsNCiAgICAvKioNCiAgICAgKiBAdmFyIG1peGVkfG51bGx8c3RyaW5nIOW9k+WJjeaTjeS9nA0KICAgICAqLw0KICAgIHB1YmxpYyAkYWN0aW9uID0gbnVsbDsNCg0KICAgIHByaXZhdGUgJGlzaW5pdGlhbGl6ZWQgPSBmYWxzZTsgLy/mmK/lkKbliJ3lp4vljJbmiJDlip8NCiAgICBwcml2YXRlICRpc2Nvbm5lY3RlZCA9IGZhbHNlOyAvL+aYr+WQpui/nuaOpeaIkOWKnw0KICAgIHByaXZhdGUgJGlzbG9hZCA9IGZhbHNlOyAvL+aYr+WQpui9veWFpQ0KICAgIHByaXZhdGUgJGlzc2Vzc2lvbiA9IGZhbHNlOyAvL+aYr+WQpuS9v+eUqHNlc3Npb24NCiAgICBwdWJsaWMgJGlzbWFuYWdlID0gZmFsc2U7IC8v5piv5ZCm5Yqg6L29566h55CG5qih5byPDQogICAgcHJpdmF0ZSAkaXNHemlwID0gZmFsc2U7IC8v5piv5ZCm5byA5ZCvZ3ppcA0KICAgIHB1YmxpYyAkaXNIdHRwcyA9IGZhbHNlOyAvL+aYr+WQpkhUVFBTDQoNCiAgICAvKioNCiAgICAgKiBAdmFyIFRlbXBsYXRlIOW9k+WJjeaooeadvw0KICAgICAqLw0KICAgIHB1YmxpYyAkdGVtcGxhdGUgPSBudWxsOw0KICAgIC8qKg0KICAgICAqIEB2YXIgbnVsbCDnpL7kvJrljJbor4TorroNCiAgICAgKi8NCiAgICBwdWJsaWMgJHNvY2lhbGNvbW1lbnQgPSBudWxsOw0KICAgIC8qKg0KICAgICAqIEB2YXIgbnVsbCDmqKHmnb/lpLTpg6gNCiAgICAgKi8NCiAgICBwdWJsaWMgJGhlYWRlciA9IG51bGw7DQogICAgLyoqDQogICAgICogQHZhciBudWxsIOaooeadv+WwvumDqA0KICAgICAqLw0KICAgIHB1YmxpYyAkZm9vdGVyID0gbnVsbDsNCg0KICAgIC8qKg0KICAgICAqIEB2YXIgYXJyYXkg5r+A5rS755qE5o+S5Lu25YiX6KGoDQogICAgICovDQogICAgcHVibGljICRhY3RpdmVkYXBwcyA9IGFycmF5KCk7DQogICAgcHVibGljICRhY3RpdmVhcHBzOw0KDQogICAgLyoqDQogICAgICogQHZhciBpbnQg566h55CG6aG16Z2i5pi+56S65p2h5pWwDQogICAgICovDQogICAgcHVibGljICRtYW5hZ2Vjb3VudCA9IDUwOw0KICAgIC8qKg0KICAgICAqIEB2YXIgaW50IOmhteeggeaYvuekuuadoeaVsA0KICAgICAqLw0KICAgIHB1YmxpYyAkcGFnZWJhcmNvdW50ID0gMTA7DQogICAgLyoqDQogICAgICogQHZhciBpbnQg5pCc57Si6L+U5Zue5p2h5pWwDQogICAgICovDQogICAgcHVibGljICRzZWFyY2hjb3VudCA9IDEwOw0KICAgIC8qKg0KICAgICAqIEB2YXIgaW50IOaWh+eroOWIl+ihqOaYvuekuuadoeaVsA0KICAgICAqLw0KICAgIHB1YmxpYyAkZGlzcGxheWNvdW50ID0gMTA7DQogICAgLyoqDQogICAgICogQHZhciBpbnQg6K+E6K665pi+56S65pWw6YePDQogICAgICovDQogICAgcHVibGljICRjb21tZW50ZGlzcGxheWNvdW50ID0gMTA7DQoNCiAgICAvKioNCiAgICAgKiBAdmFyIGludCDlvZPliY3lrp7kvovkuItDU1JGIFRva2Vu6L+H5pyf5pe26Ze077yI5bCP5pe277yJDQogICAgICovDQogICAgcHVibGljICRjc3JmRXhwaXJhdGlvbiA9IDE7DQoNCiAgICAvKioNCiAgICAgKiDojrflj5bllK/kuIDlrp7kvosuDQogICAgICoNCiAgICAgKiBAcmV0dXJuIG51bGx8WkJsb2dQSFANCiAgICAgKi8NCiAgICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIEdldEluc3RhbmNlKCkNCiAgICB7DQogICAgICAgIGlmICghaXNzZXQoc2VsZjo6JF96YnApKSB7DQogICAgICAgICAgICBpZiAoaXNzZXQoJEdMT0JBTFNbJ29wdGlvbiddWydaQ19HT0RaQlBfRklMRSddKSAmJiBpc3NldCgkR0xPQkFMU1snb3B0aW9uJ11bJ1pDX0dPRFpCUF9OQU1FJ10pICYmIGlzX3JlYWRhYmxlKFpCUF9QQVRIIC4gJEdMT0JBTFNbJ29wdGlvbiddWydaQ19HT0RaQlBfRklMRSddKSkgew0KICAgICAgICAgICAgICAgIHJlcXVpcmUgWkJQX1BBVEggLiAkR0xPQkFMU1snb3B0aW9uJ11bJ1pDX0dPRFpCUF9GSUxFJ107DQogICAgICAgICAgICAgICAgc2VsZjo6JF96YnAgPSBuZXcgJEdMT0JBTFNbJ29wdGlvbiddWydaQ19HT0RaQlBfTkFNRSddKCk7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIHNlbGY6OiRfemJwID0gbmV3IHNlbGYoKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiBzZWxmOjokX3picDsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDliJ3lp4vljJbmlbDmja7lupPov57mjqUuDQogICAgICoNCiAgICAgKiBAcGFyYW0gc3RyaW5nICR0eXBlIOaVsOaNrui/nuaOpeexu+Weiw0KICAgICAqDQogICAgICogQHJldHVybiBEYXRhYmFzZV9fSW50ZXJmYWNlDQogICAgICovDQogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBJbml0aWFsaXplREIoJHR5cGUpDQogICAgew0KICAgICAgICBpZiAoIXRyaW0oJHR5cGUpKSB7DQogICAgICAgICAgICByZXR1cm47DQogICAgICAgIH0NCg0KICAgICAgICAkbmV3dHlwZSA9ICdEYXRhYmFzZV9fJyAuIHRyaW0oJHR5cGUpOw0KDQogICAgICAgIHJldHVybiBuZXcgJG5ld3R5cGUoKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmnoTpgKDlh73mlbDvvIzliqDovb3ln7rmnKzphY3nva7liLAkemJwLg0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBfX2NvbnN0cnVjdCgpDQogICAgew0KICAgICAgICBnbG9iYWwgJG9wdGlvbiwgJGxhbmcsICRibG9ncGF0aCwgJGJsb2dob3N0LCAkY29va2llc3BhdGgsICR1c2Vyc2RpciwgJHRhYmxlLA0KICAgICAgICAkZGF0YWluZm8sICRhY3Rpb25zLCAkYWN0aW9uLCAkYmxvZ3ZlcnNpb24sICRibG9ndGl0bGUsICRibG9nbmFtZSwgJGJsb2dzdWJuYW1lLA0KICAgICAgICAkYmxvZ3RoZW1lLCAkYmxvZ3N0eWxlLCAkY3VycmVudHVybCwgJGFjdGl2ZWRhcHBzLCAkcG9zdHR5cGU7DQoNCiAgICAgICAgaWYgKFpCUF9IT09LRVJST1IpIHsNCiAgICAgICAgICAgIFpCbG9nRXhjZXB0aW9uOjpTZXRFcnJvckhvb2soKTsNCiAgICAgICAgfQ0KDQogICAgICAgIC8v5Z+65pys6YWN572u5Yqg6L295YiwJHpicOWGhQ0KICAgICAgICAkdGhpcy0+dmVyc2lvbiA9ICYkYmxvZ3ZlcnNpb247DQogICAgICAgICR0aGlzLT5vcHRpb24gPSAmJG9wdGlvbjsNCiAgICAgICAgJHRoaXMtPmxhbmcgPSAmJGxhbmc7DQogICAgICAgICR0aGlzLT5wYXRoID0gJiRibG9ncGF0aDsNCiAgICAgICAgJHRoaXMtPmhvc3QgPSAmJGJsb2dob3N0OyAvL+atpOWAvOWcqOWQjui+ueWIneWni+WMluaXtuWPr+iDveS8muWPmOWMliENCiAgICAgICAgJHRoaXMtPmNvb2tpZXNwYXRoID0gJiRjb29raWVzcGF0aDsNCiAgICAgICAgJHRoaXMtPnVzZXJzZGlyID0gJiR1c2Vyc2RpcjsNCg0KICAgICAgICAkdGhpcy0+dGFibGUgPSAmJHRhYmxlOw0KICAgICAgICAkdGhpcy0+ZGF0YWluZm8gPSAmJGRhdGFpbmZvOw0KICAgICAgICAkdGhpcy0+YWN0aW9ucyA9ICYkYWN0aW9uczsNCiAgICAgICAgJHRoaXMtPnBvc3R0eXBlID0gJiRwb3N0dHlwZTsNCiAgICAgICAgJHRoaXMtPmN1cnJlbnR1cmwgPSAmJGN1cnJlbnR1cmw7DQoNCiAgICAgICAgJHRoaXMtPmFjdGlvbiA9ICYkYWN0aW9uOw0KICAgICAgICAkdGhpcy0+YWN0aXZlZGFwcHMgPSAmJGFjdGl2ZWRhcHBzOw0KICAgICAgICAkdGhpcy0+YWN0aXZlYXBwcyA9ICYkdGhpcy0+YWN0aXZlZGFwcHM7DQoNCiAgICAgICAgJHRoaXMtPmd1aWQgPSAmJHRoaXMtPm9wdGlvblsnWkNfQkxPR19DTFNJRCddOw0KDQogICAgICAgICR0aGlzLT50aXRsZSA9ICYkYmxvZ3RpdGxlOw0KICAgICAgICAkdGhpcy0+bmFtZSA9ICYkYmxvZ25hbWU7DQogICAgICAgICR0aGlzLT5zdWJuYW1lID0gJiRibG9nc3VibmFtZTsNCiAgICAgICAgJHRoaXMtPnRoZW1lID0gJiRibG9ndGhlbWU7DQogICAgICAgICR0aGlzLT5zdHlsZSA9ICYkYmxvZ3N0eWxlOw0KDQogICAgICAgICR0aGlzLT5tYW5hZ2Vjb3VudCA9ICYkdGhpcy0+b3B0aW9uWydaQ19NQU5BR0VfQ09VTlQnXTsNCiAgICAgICAgJHRoaXMtPnBhZ2ViYXJjb3VudCA9ICYkdGhpcy0+b3B0aW9uWydaQ19QQUdFQkFSX0NPVU5UJ107DQogICAgICAgICR0aGlzLT5zZWFyY2hjb3VudCA9ICYkdGhpcy0+b3B0aW9uWydaQ19TRUFSQ0hfQ09VTlQnXTsNCiAgICAgICAgJHRoaXMtPmRpc3BsYXljb3VudCA9ICYkdGhpcy0+b3B0aW9uWydaQ19ESVNQTEFZX0NPVU5UJ107DQogICAgICAgICR0aGlzLT5jb21tZW50ZGlzcGxheWNvdW50ID0gJiR0aGlzLT5vcHRpb25bJ1pDX0NPTU1FTlRTX0RJU1BMQVlfQ09VTlQnXTsNCg0KICAgICAgICAkdGhpcy0+Y2F0ZWdvcmllcyA9ICYkdGhpcy0+Y2F0ZWdvcnlzOw0KICAgICAgICAkdGhpcy0+Y2F0ZWdvcmllc2J5b3JkZXIgPSAmJHRoaXMtPmNhdGVnb3J5c2J5b3JkZXI7DQoNCiAgICAgICAgJHRoaXMtPnVzZXIgPSBuZXcgc3RkQ2xhc3MoKTsNCiAgICAgICAgZm9yZWFjaCAoJHRoaXMtPmRhdGFpbmZvWydNZW1iZXInXSBhcyAka2V5ID0+ICR2YWx1ZSkgew0KICAgICAgICAgICAgJHRoaXMtPnVzZXItPiRrZXkgPSAkdmFsdWVbM107DQogICAgICAgIH0NCiAgICAgICAgJHRoaXMtPnVzZXItPk1ldGFzID0gbmV3IENvbmZpZygpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAq5p6Q5p6E5Ye95pWw77yM6YeK5pS+6LWE5rqQLg0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBfX2Rlc3RydWN0KCkNCiAgICB7DQogICAgICAgICR0aGlzLT5UZXJtaW5hdGUoKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAYXBpIEZpbHRlcl9QbHVnaW5fWmJwX0NhbGwNCiAgICAgKg0KICAgICAqIEBwYXJhbSAkbWV0aG9kDQogICAgICogQHBhcmFtICRhcmdzDQogICAgICoNCiAgICAgKiBAcmV0dXJuIG1peGVkDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIF9fY2FsbCgkbWV0aG9kLCAkYXJncykNCiAgICB7DQogICAgICAgIGZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX1picF9DYWxsJ10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICAgICAkZnByZXR1cm4gPSAkZnBuYW1lKCRtZXRob2QsICRhcmdzKTsNCiAgICAgICAgICAgIGlmICgkZnBzaWduYWwgPT0gUExVR0lOX0VYSVRTSUdOQUxfUkVUVVJOKSB7DQogICAgICAgICAgICAgICAgJGZwc2lnbmFsID0gUExVR0lOX0VYSVRTSUdOQUxfTk9ORTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiAkZnByZXR1cm47DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgdHJpZ2dlcl9lcnJvcigkdGhpcy0+bGFuZ1snZXJyb3InXVs4MV0sIEVfVVNFUl9XQVJOSU5HKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDorr7nva7lj4LmlbDlgLwNCiAgICAgKg0KICAgICAqIEBwYXJhbSAkbmFtZQ0KICAgICAqIEBwYXJhbSAkdmFsdWUNCiAgICAgKg0KICAgICAqIEByZXR1cm4gbWl4ZWQNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gX19zZXQoJG5hbWUsICR2YWx1ZSkNCiAgICB7DQogICAgICAgIGZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX1picF9TZXQnXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAgICAgICAgICRmcHJldHVybiA9ICRmcG5hbWUoJG5hbWUsICR2YWx1ZSk7DQogICAgICAgICAgICBpZiAoJGZwc2lnbmFsID09IFBMVUdJTl9FWElUU0lHTkFMX1JFVFVSTikgew0KICAgICAgICAgICAgICAgICRmcHNpZ25hbCA9IFBMVUdJTl9FWElUU0lHTkFMX05PTkU7DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gJGZwcmV0dXJuOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIHRyaWdnZXJfZXJyb3IoJHRoaXMtPmxhbmdbJ2Vycm9yJ11bODFdLCBFX1VTRVJfV0FSTklORyk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6I635Y+W5Y+C5pWw5YC8DQogICAgICoNCiAgICAgKiBAcGFyYW0gJG5hbWUNCiAgICAgKg0KICAgICAqIEByZXR1cm4gbWl4ZWQNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gX19nZXQoJG5hbWUpDQogICAgew0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9aYnBfR2V0J10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICAgICAkZnByZXR1cm4gPSAkZnBuYW1lKCRuYW1lKTsNCiAgICAgICAgICAgIGlmICgkZnBzaWduYWwgPT0gUExVR0lOX0VYSVRTSUdOQUxfUkVUVVJOKSB7DQogICAgICAgICAgICAgICAgJGZwc2lnbmFsID0gUExVR0lOX0VYSVRTSUdOQUxfTk9ORTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiAkZnByZXR1cm47DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgdHJpZ2dlcl9lcnJvcigkdGhpcy0+bGFuZ1snZXJyb3InXVs4MV0sIEVfVVNFUl9XQVJOSU5HKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDliJ3lp4vljJYkemJwLg0KICAgICAqDQogICAgICogQHRocm93cyBFeGNlcHRpb24NCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBJbml0aWFsaXplKCkNCiAgICB7DQogICAgICAgICRvbGRab25lID0gJHRoaXMtPm9wdGlvblsnWkNfVElNRV9aT05FX05BTUUnXTsNCiAgICAgICAgZGF0ZV9kZWZhdWx0X3RpbWV6b25lX3NldCgkb2xkWm9uZSk7DQoNCiAgICAgICAgJG9sZExhbmcgPSAkdGhpcy0+b3B0aW9uWydaQ19CTE9HX0xBTkdVQUdFUEFDSyddOw0KICAgICAgICAkdGhpcy0+TG9hZExhbmd1YWdlKCdzeXN0ZW0nLCAnJyk7DQoNCiAgICAgICAgaWYgKCR0aGlzLT5vcHRpb25bJ1pDX0NMT1NFX1dIT0xFX1NJVEUnXSA9PSB0cnVlKSB7DQogICAgICAgICAgICBIdHRwNTAzKCk7DQogICAgICAgICAgICAkdGhpcy0+U2hvd0Vycm9yKDgyLCBfX0ZJTEVfXywgX19MSU5FX18pOw0KDQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoISR0aGlzLT5PcGVuQ29ubmVjdCgpKSB7DQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0NCg0KICAgICAgICAkdGhpcy0+Q29udmVydFRhYmxlQW5kRGF0YWluZm8oKTsNCg0KICAgICAgICAkdGhpcy0+TG9hZENvbmZpZ3NPbmx5U3lzdGVtKHRydWUpOw0KICAgICAgICAkdGhpcy0+TG9hZE9wdGlvbigpOw0KDQogICAgICAgICR0aGlzLT5SZWdQb3N0VHlwZSgwLCAnYXJ0aWNsZScsICR0aGlzLT5vcHRpb25bJ1pDX0FSVElDTEVfUkVHRVgnXSwgJHRoaXMtPm9wdGlvblsnWkNfUE9TVF9ERUZBVUxUX1RFTVBMQVRFJ10sIDAsIDApOw0KICAgICAgICAkdGhpcy0+UmVnUG9zdFR5cGUoMSwgJ3BhZ2UnLCAkdGhpcy0+b3B0aW9uWydaQ19QQUdFX1JFR0VYJ10sICR0aGlzLT5vcHRpb25bJ1pDX1BPU1RfREVGQVVMVF9URU1QTEFURSddLCBudWxsLCBudWxsKTsNCg0KICAgICAgICBpZiAoJHRoaXMtPm9wdGlvblsnWkNfQkxPR19MQU5HVUFHRVBBQ0snXSA9PT0gJ1NpbXBDaGluZXNlJykgew0KICAgICAgICAgICAgJHRoaXMtPm9wdGlvblsnWkNfQkxPR19MQU5HVUFHRVBBQ0snXSA9ICd6aC1jbic7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoJHRoaXMtPm9wdGlvblsnWkNfQkxPR19MQU5HVUFHRVBBQ0snXSA9PT0gJ1RyYWRDaGluZXNlJykgew0KICAgICAgICAgICAgJHRoaXMtPm9wdGlvblsnWkNfQkxPR19MQU5HVUFHRVBBQ0snXSA9ICd6aC10dyc7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoJG9sZExhbmcgIT0gJHRoaXMtPm9wdGlvblsnWkNfQkxPR19MQU5HVUFHRVBBQ0snXSkgew0KICAgICAgICAgICAgJHRoaXMtPkxvYWRMYW5ndWFnZSgnc3lzdGVtJywgJycpOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKGlzc2V0KCR0aGlzLT5vcHRpb25bJ1pDX0RFQlVHX01PREVfV0FSTklORyddKSkgew0KICAgICAgICAgICAgWkJsb2dFeGNlcHRpb246OiRpc3dhcm5pbmcgPSAoYm9vbCkgJHRoaXMtPm9wdGlvblsnWkNfREVCVUdfTU9ERV9XQVJOSU5HJ107DQogICAgICAgIH0NCiAgICAgICAgaWYgKGlzc2V0KCR0aGlzLT5vcHRpb25bJ1pDX0RFQlVHX01PREVfU1RSSUNUJ10pKSB7DQogICAgICAgICAgICBaQmxvZ0V4Y2VwdGlvbjo6JGlzc3RyaWN0ID0gKGJvb2wpICR0aGlzLT5vcHRpb25bJ1pDX0RFQlVHX01PREVfU1RSSUNUJ107DQogICAgICAgIH0NCiAgICAgICAgaWYgKGlzc2V0KCR0aGlzLT5vcHRpb25bJ1pDX0RFQlVHX0xPR19FUlJPUiddKSkgew0KICAgICAgICAgICAgWkJsb2dFeGNlcHRpb246OiRpc2xvZ2Vycm9yID0gKGJvb2wpICR0aGlzLT5vcHRpb25bJ1pDX0RFQlVHX0xPR19FUlJPUiddOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKCR0aGlzLT5vcHRpb25bJ1pDX1BFUk1BTkVOVF9ET01BSU5fRU5BQkxFJ10gPT0gdHJ1ZSkgew0KICAgICAgICAgICAgJHRoaXMtPmhvc3QgPSAkdGhpcy0+b3B0aW9uWydaQ19CTE9HX0hPU1QnXTsNCiAgICAgICAgICAgICR0aGlzLT5jb29raWVzcGF0aCA9IHN0cnN0cihzdHJfcmVwbGFjZSgnOi8vJywgJycsICR0aGlzLT5ob3N0KSwgJy8nKTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICR0aGlzLT5vcHRpb25bJ1pDX0JMT0dfSE9TVCddID0gJHRoaXMtPmhvc3Q7DQogICAgICAgIH0NCg0KICAgICAgICAkdGhpcy0+b3B0aW9uWydaQ19CTE9HX1BST0RVQ1QnXSA9ICdaLUJsb2dQSFAnOw0KICAgICAgICAkdGhpcy0+b3B0aW9uWydaQ19CTE9HX1ZFUlNJT04nXSA9IFpDX0JMT0dfVkVSU0lPTjsNCiAgICAgICAgJHRoaXMtPm9wdGlvblsnWkNfTk9XX1ZFUlNJT04nXSA9ICR0aGlzLT52ZXJzaW9uOyAgLy9aQ19MQVNUX1ZFUlNJT04NCiAgICAgICAgJHRoaXMtPm9wdGlvblsnWkNfQkxPR19QUk9EVUNUX0ZVTEwnXSA9ICR0aGlzLT5vcHRpb25bJ1pDX0JMT0dfUFJPRFVDVCddIC4gJyAnIC4gWkNfVkVSU0lPTl9ESVNQTEFZOw0KICAgICAgICAkdGhpcy0+b3B0aW9uWydaQ19CTE9HX1BST0RVQ1RfRlVMTEhUTUwnXSA9ICc8YSBocmVmPSJodHRwOi8vd3d3LnpibG9nY24uY29tLyIgdGl0bGU9IlJhaW5ib3dTb2Z0IFotQmxvZ1BIUCIgdGFyZ2V0PSJfYmxhbmsiPicgLiAkdGhpcy0+b3B0aW9uWydaQ19CTE9HX1BST0RVQ1RfRlVMTCddIC4gJzwvYT4nOw0KICAgICAgICAkdGhpcy0+b3B0aW9uWydaQ19CTE9HX1BST0RVQ1RfSFRNTCddID0gJzxhIGhyZWY9Imh0dHA6Ly93d3cuemJsb2djbi5jb20vIiB0aXRsZT0iUmFpbmJvd1NvZnQgWi1CbG9nUEhQIiB0YXJnZXQ9Il9ibGFuayI+JyAuICR0aGlzLT5vcHRpb25bJ1pDX0JMT0dfUFJPRFVDVCddIC4gJzwvYT4nOw0KDQogICAgICAgIGlmICgkb2xkWm9uZSAhPSAkdGhpcy0+b3B0aW9uWydaQ19USU1FX1pPTkVfTkFNRSddKSB7DQogICAgICAgICAgICBkYXRlX2RlZmF1bHRfdGltZXpvbmVfc2V0KCR0aGlzLT5vcHRpb25bJ1pDX1RJTUVfWk9ORV9OQU1FJ10pOw0KICAgICAgICB9DQoNCiAgICAgICAgLyppZihpc3NldCgkX0NPT0tJRVsndGltZXpvbmUnXSkpew0KICAgICAgICAgICAgJHR6PUdldFZhcnMoJ3RpbWV6b25lJywnQ09PS0lFJyk7DQogICAgICAgICAgICBpZihpc19udW1lcmljKCR0eikpew0KICAgICAgICAgICAgJHR6PXNwcmludGYoJyUrZCcsLSR0eik7DQogICAgICAgICAgICBkYXRlX2RlZmF1bHRfdGltZXpvbmVfc2V0KCdFdGMvR01UJyAuICR0eik7DQogICAgICAgICAgICAkdGhpcy0+dGltZXpvbmU9ZGF0ZV9kZWZhdWx0X3RpbWV6b25lX2dldCgpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAqLw0KDQogICAgICAgIGlmICgkdGhpcy0+b3B0aW9uWydaQ19WRVJTSU9OX0lOX0hFQURFUiddICYmICFoZWFkZXJzX3NlbnQoKSkgew0KICAgICAgICAgICAgaGVhZGVyKCdQcm9kdWN0OicgLiAkdGhpcy0+b3B0aW9uWydaQ19CTE9HX1BST0RVQ1RfRlVMTCddKTsNCiAgICAgICAgfQ0KDQogICAgICAgICRwYXJzZWRIb3N0ID0gcGFyc2VfdXJsKCR0aGlzLT5ob3N0KTsNCiAgICAgICAgJHRoaXMtPmZ1bGxjdXJyZW50dXJsID0gJHBhcnNlZEhvc3RbJ3NjaGVtZSddIC4gJzovLycgLiAkcGFyc2VkSG9zdFsnaG9zdCddIC4gJHRoaXMtPmN1cnJlbnR1cmw7DQogICAgICAgIGlmIChzdWJzdHIoJHRoaXMtPmhvc3QsIDAsIDgpID09ICdodHRwczovLycpIHsNCiAgICAgICAgICAgICR0aGlzLT5pc0h0dHBzID0gdHJ1ZTsNCiAgICAgICAgfQ0KDQogICAgICAgICR0aGlzLT52ZXJpZnlDb2RlVXJsID0gJHRoaXMtPmhvc3QgLiAnemJfc3lzdGVtL3NjcmlwdC9jX3ZhbGlkY29kZS5waHAnOw0KICAgICAgICAkdGhpcy0+dmFsaWRjb2RldXJsID0gJiR0aGlzLT52ZXJpZnlDb2RlVXJsOw0KICAgICAgICAkdGhpcy0+ZmVlZHVybCA9ICR0aGlzLT5ob3N0IC4gJ2ZlZWQucGhwJzsNCiAgICAgICAgJHRoaXMtPnNlYXJjaHVybCA9ICR0aGlzLT5ob3N0IC4gJ3NlYXJjaC5waHAnOw0KICAgICAgICAkdGhpcy0+YWpheHVybCA9ICR0aGlzLT5ob3N0IC4gJ3piX3N5c3RlbS9jbWQucGhwP2FjdD1hamF4JnNyYz0nOw0KICAgICAgICAkdGhpcy0+eG1scnBjdXJsID0gJHRoaXMtPmhvc3QgLiAnemJfc3lzdGVtL3htbC1ycGMvaW5kZXgucGhwJzsNCg0KICAgICAgICAkdGhpcy0+TG9hZENvbmZpZ3NPbmx5U3lzdGVtKGZhbHNlKTsNCg0KICAgICAgICAkdGhpcy0+TG9hZENhY2hlKCk7DQoNCiAgICAgICAgJHRoaXMtPmlzaW5pdGlhbGl6ZWQgPSB0cnVlOw0KDQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOS7juaVsOaNruW6k+mHjOivu+WPluS/oeaBr++8jOWQr+WKqOaVtOS4qlpCUC4NCiAgICAgKg0KICAgICAqIEB0aHJvd3MgRXhjZXB0aW9uDQogICAgICoNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gTG9hZCgpDQogICAgew0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9aYnBfTG9hZF9QcmUnXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAgICAgICAgICRmcHJldHVybiA9ICRmcG5hbWUoKTsNCiAgICAgICAgICAgIGlmICgkZnBzaWduYWwgPT0gUExVR0lOX0VYSVRTSUdOQUxfUkVUVVJOKSB7DQogICAgICAgICAgICAgICAgJGZwc2lnbmFsID0gUExVR0lOX0VYSVRTSUdOQUxfTk9ORTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiAkZnByZXR1cm47DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoISR0aGlzLT5pc2luaXRpYWxpemVkKSB7DQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoJHRoaXMtPmlzbG9hZCkgew0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQoNCiAgICAgICAgJHRoaXMtPlN0YXJ0R3ppcCgpOw0KDQogICAgICAgIGlmICghaGVhZGVyc19zZW50KCkpIHsNCiAgICAgICAgICAgIGhlYWRlcignQ29udGVudC10eXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgnKTsNCiAgICAgICAgfQ0KDQogICAgICAgICR0aGlzLT5Db252ZXJ0VGFibGVBbmREYXRhaW5mbygpOw0KDQogICAgICAgICR0aGlzLT5Mb2FkTWVtYmVycygkdGhpcy0+b3B0aW9uWydaQ19MT0FETUVNQkVSU19MRVZFTCddKTsNCiAgICAgICAgJHRoaXMtPkxvYWRDYXRlZ29yaWVzKCk7DQogICAgICAgIC8vJHRoaXMtPkxvYWRUYWdzKCk7DQogICAgICAgICR0aGlzLT5Mb2FkTW9kdWxlcygpOw0KDQogICAgICAgIGlmICghKGdldF9jbGFzcygkdGhpcy0+dXNlcikgPT09ICdNZW1iZXInICYmICR0aGlzLT51c2VyLT5MZXZlbCA+IDAgJiYgIWVtcHR5KCR0aGlzLT51c2VyLT5JRCkpKSB7DQogICAgICAgICAgICAkdGhpcy0+VmVyaWZ5KCk7DQogICAgICAgIH0NCg0KICAgICAgICAkdGhpcy0+UmVnQnVpbGRNb2R1bGUoJ2NhdGFsb2cnLCAnTW9kdWxlQnVpbGRlcjo6Q2F0YWxvZycpOw0KICAgICAgICAkdGhpcy0+UmVnQnVpbGRNb2R1bGUoJ2NhbGVuZGFyJywgJ01vZHVsZUJ1aWxkZXI6OkNhbGVuZGFyJyk7DQogICAgICAgICR0aGlzLT5SZWdCdWlsZE1vZHVsZSgnY29tbWVudHMnLCAnTW9kdWxlQnVpbGRlcjo6Q29tbWVudHMnKTsNCiAgICAgICAgJHRoaXMtPlJlZ0J1aWxkTW9kdWxlKCdwcmV2aW91cycsICdNb2R1bGVCdWlsZGVyOjpMYXRlc3RBcnRpY2xlcycpOw0KICAgICAgICAkdGhpcy0+UmVnQnVpbGRNb2R1bGUoJ2FyY2hpdmVzJywgJ01vZHVsZUJ1aWxkZXI6OkFyY2hpdmVzJyk7DQogICAgICAgICR0aGlzLT5SZWdCdWlsZE1vZHVsZSgnbmF2YmFyJywgJ01vZHVsZUJ1aWxkZXI6Ok5hdmJhcicpOw0KICAgICAgICAkdGhpcy0+UmVnQnVpbGRNb2R1bGUoJ3RhZ3MnLCAnTW9kdWxlQnVpbGRlcjo6VGFnTGlzdCcpOw0KICAgICAgICAkdGhpcy0+UmVnQnVpbGRNb2R1bGUoJ3N0YXRpc3RpY3MnLCAnTW9kdWxlQnVpbGRlcjo6U3RhdGlzdGljcycpOw0KICAgICAgICAkdGhpcy0+UmVnQnVpbGRNb2R1bGUoJ2F1dGhvcnMnLCAnTW9kdWxlQnVpbGRlcjo6QXV0aG9ycycpOw0KDQogICAgICAgIC8v5Yib5bu65qih5p2/57G7DQogICAgICAgICR0aGlzLT50ZW1wbGF0ZSA9ICR0aGlzLT5QcmVwYXJlVGVtcGxhdGUoKTsNCg0KICAgICAgICAvLyDor7vkuLvpopjniYjmnKzkv6Hmga8NCiAgICAgICAgJGFwcCA9ICR0aGlzLT5Mb2FkQXBwKCd0aGVtZScsICR0aGlzLT50aGVtZSk7DQogICAgICAgIGlmICgkYXBwLT50eXBlICE9PSAnJykgew0KICAgICAgICAgICAgJHRoaXMtPnRoZW1laW5mbyA9ICRhcHAtPkdldEluZm9BcnJheSgpOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKCR0aGlzLT5pc21hbmFnZSkgew0KICAgICAgICAgICAgJHRoaXMtPkxvYWRNYW5hZ2UoKTsNCiAgICAgICAgfQ0KDQogICAgICAgIEFkZF9GaWx0ZXJfUGx1Z2luKCdGaWx0ZXJfUGx1Z2luX0xvZ2luX0hlYWRlcicsICdJbmNsdWRlX0FkZG9uQWRtaW5Gb250Jyk7DQogICAgICAgIEFkZF9GaWx0ZXJfUGx1Z2luKCdGaWx0ZXJfUGx1Z2luX090aGVyX0hlYWRlcicsICdJbmNsdWRlX0FkZG9uQWRtaW5Gb250Jyk7DQogICAgICAgIEFkZF9GaWx0ZXJfUGx1Z2luKCdGaWx0ZXJfUGx1Z2luX0FkbWluX0hlYWRlcicsICdJbmNsdWRlX0FkZG9uQWRtaW5Gb250Jyk7DQoNCiAgICAgICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fWmJwX0xvYWQnXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAgICAgICAgICRmcG5hbWUoKTsNCiAgICAgICAgfQ0KDQogICAgICAgIGlmICgkdGhpcy0+b3B0aW9uWydaQ19ERUJVR19NT0RFJ10pIHsNCiAgICAgICAgICAgICR0aGlzLT5DaGVja1RlbXBsYXRlKGZhbHNlLCB0cnVlKTsNCiAgICAgICAgfQ0KDQogICAgICAgICR0aGlzLT5pc2xvYWQgPSB0cnVlOw0KDQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOi9veWFpeeuoeeQhi4NCiAgICAgKg0KICAgICAqIEB0aHJvd3MgRXhjZXB0aW9uDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIExvYWRNYW5hZ2UoKQ0KICAgIHsNCiAgICAgICAgaWYgKCR0aGlzLT5vcHRpb25bJ1pDX1BFUk1BTkVOVF9ET01BSU5fV0lUSF9BRE1JTiddID09IGZhbHNlKSB7DQogICAgICAgICAgICAkdGhpcy0+aG9zdCA9IEdldEN1cnJlbnRIb3N0KCR0aGlzLT5wYXRoLCAkdGhpcy0+Y29va2llc3BhdGgpOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKHN1YnN0cigkdGhpcy0+aG9zdCwgMCwgOCkgPT0gJ2h0dHBzOi8vJykgew0KICAgICAgICAgICAgJHRoaXMtPmlzSHR0cHMgPSB0cnVlOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKCR0aGlzLT51c2VyLT5TdGF0dXMgPT0gWkNfTUVNQkVSX1NUQVRVU19BVURJVElORykgew0KICAgICAgICAgICAgJHRoaXMtPlNob3dFcnJvcig3OSwgX19GSUxFX18sIF9fTElORV9fKTsNCiAgICAgICAgfQ0KDQogICAgICAgIGlmICgkdGhpcy0+dXNlci0+U3RhdHVzID09IFpDX01FTUJFUl9TVEFUVVNfTE9DS0VEKSB7DQogICAgICAgICAgICAkdGhpcy0+U2hvd0Vycm9yKDgwLCBfX0ZJTEVfXywgX19MSU5FX18pOw0KICAgICAgICB9DQoNCiAgICAgICAgQWRkX0ZpbHRlcl9QbHVnaW4oJ0ZpbHRlcl9QbHVnaW5fQWRtaW5fUGFnZU1uZ19TdWJNZW51JywgJ0luY2x1ZGVfQWRtaW5fQWRkcGFnZXN1Ym1lbnUnKTsNCiAgICAgICAgQWRkX0ZpbHRlcl9QbHVnaW4oJ0ZpbHRlcl9QbHVnaW5fQWRtaW5fVGFnTW5nX1N1Yk1lbnUnLCAnSW5jbHVkZV9BZG1pbl9BZGR0YWdzdWJtZW51Jyk7DQogICAgICAgIEFkZF9GaWx0ZXJfUGx1Z2luKCdGaWx0ZXJfUGx1Z2luX0FkbWluX0NhdGVnb3J5TW5nX1N1Yk1lbnUnLCAnSW5jbHVkZV9BZG1pbl9BZGRjYXRlc3VibWVudScpOw0KICAgICAgICBBZGRfRmlsdGVyX1BsdWdpbignRmlsdGVyX1BsdWdpbl9BZG1pbl9NZW1iZXJNbmdfU3ViTWVudScsICdJbmNsdWRlX0FkbWluX0FkZG1lbXN1Ym1lbnUnKTsNCiAgICAgICAgQWRkX0ZpbHRlcl9QbHVnaW4oJ0ZpbHRlcl9QbHVnaW5fQWRtaW5fTW9kdWxlTW5nX1N1Yk1lbnUnLCAnSW5jbHVkZV9BZG1pbl9BZGRtb2RzdWJtZW51Jyk7DQogICAgICAgIEFkZF9GaWx0ZXJfUGx1Z2luKCdGaWx0ZXJfUGx1Z2luX0FkbWluX0NvbW1lbnRNbmdfU3ViTWVudScsICdJbmNsdWRlX0FkbWluX0FkZGNtdHN1Ym1lbnUnKTsNCg0KICAgICAgICAkdGhpcy0+Q2hlY2tUZW1wbGF0ZSh0cnVlKTsNCg0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9aYnBfTG9hZE1hbmFnZSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgJGZwbmFtZSgpOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgLyoqDQogICAgICog57uI5q2i6L+e5o6l77yM6YeK5pS+6LWE5rqQLg0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBUZXJtaW5hdGUoKQ0KICAgIHsNCiAgICAgICAgaWYgKCR0aGlzLT5pc2luaXRpYWxpemVkKSB7DQogICAgICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9aYnBfVGVybWluYXRlJ10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICAgICAgICAgJGZwbmFtZSgpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAkdGhpcy0+Q2xvc2VDb25uZWN0KCk7DQogICAgICAgICAgICB1bnNldCgkdGhpcy0+ZGIpOw0KICAgICAgICAgICAgJHRoaXMtPmlzaW5pdGlhbGl6ZWQgPSBmYWxzZTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOi/nuaOpeaVsOaNruW6ky4NCiAgICAgKg0KICAgICAqIEB0aHJvd3MgRXhjZXB0aW9uDQogICAgICoNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gT3BlbkNvbm5lY3QoKQ0KICAgIHsNCiAgICAgICAgaWYgKCR0aGlzLT5pc2Nvbm5lY3RlZCkgew0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKCEkdGhpcy0+b3B0aW9uWydaQ19EQVRBQkFTRV9UWVBFJ10pIHsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KDQogICAgICAgIHN3aXRjaCAoJHRoaXMtPm9wdGlvblsnWkNfREFUQUJBU0VfVFlQRSddKSB7DQogICAgICAgICAgICBjYXNlICdzcWxpdGUnOg0KICAgICAgICAgICAgY2FzZSAnc3FsaXRlMyc6DQogICAgICAgICAgICBjYXNlICdwZG9fc3FsaXRlJzoNCiAgICAgICAgICAgICAgICAkdGhpcy0+ZGIgPSBzZWxmOjpJbml0aWFsaXplREIoJHRoaXMtPm9wdGlvblsnWkNfREFUQUJBU0VfVFlQRSddKTsNCiAgICAgICAgICAgICAgICBpZiAoJHRoaXMtPmRiLT5PcGVuKGFycmF5KA0KICAgICAgICAgICAgICAgICR0aGlzLT51c2Vyc2RpciAuICdkYXRhLycgLiAkdGhpcy0+b3B0aW9uWydaQ19TUUxJVEVfTkFNRSddLA0KICAgICAgICAgICAgICAgICR0aGlzLT5vcHRpb25bJ1pDX1NRTElURV9QUkUnXSwNCiAgICAgICAgICAgICAgICApKSA9PSBmYWxzZSkgew0KICAgICAgICAgICAgICAgICAgICAkdGhpcy0+U2hvd0Vycm9yKDY5LCBfX0ZJTEVfXywgX19MSU5FX18pOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgIGNhc2UgJ3Bnc3FsJzoNCiAgICAgICAgICAgIGNhc2UgJ3Bkb19wZ3NxbCc6DQogICAgICAgICAgICAgICAgJHRoaXMtPmRiID0gc2VsZjo6SW5pdGlhbGl6ZURCKCR0aGlzLT5vcHRpb25bJ1pDX0RBVEFCQVNFX1RZUEUnXSk7DQogICAgICAgICAgICAgICAgaWYgKCR0aGlzLT5kYi0+T3BlbihhcnJheSgNCiAgICAgICAgICAgICAgICAkdGhpcy0+b3B0aW9uWydaQ19QR1NRTF9TRVJWRVInXSwNCiAgICAgICAgICAgICAgICAkdGhpcy0+b3B0aW9uWydaQ19QR1NRTF9VU0VSTkFNRSddLA0KICAgICAgICAgICAgICAgICR0aGlzLT5vcHRpb25bJ1pDX1BHU1FMX1BBU1NXT1JEJ10sDQogICAgICAgICAgICAgICAgJHRoaXMtPm9wdGlvblsnWkNfUEdTUUxfTkFNRSddLA0KICAgICAgICAgICAgICAgICR0aGlzLT5vcHRpb25bJ1pDX1BHU1FMX1BSRSddLA0KICAgICAgICAgICAgICAgICR0aGlzLT5vcHRpb25bJ1pDX1BHU1FMX1BPUlQnXSwNCiAgICAgICAgICAgICAgICAkdGhpcy0+b3B0aW9uWydaQ19QR1NRTF9QRVJTSVNURU5UJ10sDQogICAgICAgICAgICAgICAgKSkgPT0gZmFsc2UpIHsNCiAgICAgICAgICAgICAgICAgICAgJHRoaXMtPlNob3dFcnJvcig2NywgX19GSUxFX18sIF9fTElORV9fKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICBjYXNlICdteXNxbCc6DQogICAgICAgICAgICBjYXNlICdteXNxbGknOg0KICAgICAgICAgICAgY2FzZSAncGRvX215c3FsJzoNCiAgICAgICAgICAgIGRlZmF1bHQ6DQogICAgICAgICAgICAgICAgJHRoaXMtPmRiID0gc2VsZjo6SW5pdGlhbGl6ZURCKCR0aGlzLT5vcHRpb25bJ1pDX0RBVEFCQVNFX1RZUEUnXSk7DQogICAgICAgICAgICAgICAgaWYgKCR0aGlzLT5kYi0+T3BlbihhcnJheSgNCiAgICAgICAgICAgICAgICAkdGhpcy0+b3B0aW9uWydaQ19NWVNRTF9TRVJWRVInXSwNCiAgICAgICAgICAgICAgICAkdGhpcy0+b3B0aW9uWydaQ19NWVNRTF9VU0VSTkFNRSddLA0KICAgICAgICAgICAgICAgICR0aGlzLT5vcHRpb25bJ1pDX01ZU1FMX1BBU1NXT1JEJ10sDQogICAgICAgICAgICAgICAgJHRoaXMtPm9wdGlvblsnWkNfTVlTUUxfTkFNRSddLA0KICAgICAgICAgICAgICAgICR0aGlzLT5vcHRpb25bJ1pDX01ZU1FMX1BSRSddLA0KICAgICAgICAgICAgICAgICR0aGlzLT5vcHRpb25bJ1pDX01ZU1FMX1BPUlQnXSwNCiAgICAgICAgICAgICAgICAkdGhpcy0+b3B0aW9uWydaQ19NWVNRTF9QRVJTSVNURU5UJ10sDQogICAgICAgICAgICAgICAgJHRoaXMtPm9wdGlvblsnWkNfTVlTUUxfRU5HSU5FJ10sDQogICAgICAgICAgICAgICAgKSkgPT0gZmFsc2UpIHsNCiAgICAgICAgICAgICAgICAgICAgJHRoaXMtPlNob3dFcnJvcig2NywgX19GSUxFX18sIF9fTElORV9fKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgIH0NCiAgICAgICAgLy8gdXRmOG1iNOaUr+aMgQ0KICAgICAgICBpZiAoJHRoaXMtPmRiLT50eXBlID09ICdteXNxbCcgJiYgdmVyc2lvbl9jb21wYXJlKCR0aGlzLT5kYi0+dmVyc2lvbiwgJzUuNS4zJykgPCAwKSB7DQogICAgICAgICAgICBBZGRfRmlsdGVyX1BsdWdpbignRmlsdGVyX1BsdWdpbl9EYlNxbF9GaWx0ZXInLCAndXRmODRtYl9maWx0ZXInKTsNCiAgICAgICAgICAgIEFkZF9GaWx0ZXJfUGx1Z2luKCdGaWx0ZXJfUGx1Z2luX0VkaXRfQmVnaW4nLCAndXRmODRtYl9maXhIdG1sU3BlY2lhbENoYXJzJyk7DQogICAgICAgIH0NCiAgICAgICAgJHRoaXMtPmlzY29ubmVjdGVkID0gdHJ1ZTsNCg0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDlr7nooajlkI3lkozmlbDmja7nu5PmnoTov5vooYzpooTovazmjaIuDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIENvbnZlcnRUYWJsZUFuZERhdGFpbmZvKCkNCiAgICB7DQogICAgICAgIGlmICgkdGhpcy0+ZGItPmRicHJlKSB7DQogICAgICAgICAgICAkdGhpcy0+dGFibGUgPSBzdHJfcmVwbGFjZSgnJXByZSUnLCAkdGhpcy0+ZGItPmRicHJlLCAkdGhpcy0+dGFibGUpOw0KICAgICAgICB9DQogICAgICAgIGlmICgkdGhpcy0+ZGItPnR5cGUgPT09ICdwb3N0Z3Jlc3FsJykgew0KICAgICAgICAgICAgZm9yZWFjaCAoJHRoaXMtPmRhdGFpbmZvIGFzICRrZXkgPT4gJiR2YWx1ZSkgew0KICAgICAgICAgICAgICAgIGZvcmVhY2ggKCR2YWx1ZSBhcyAkazIgPT4gJiR2Mikgew0KICAgICAgICAgICAgICAgICAgICAkdjJbMF0gPSBzdHJ0b2xvd2VyKCR2MlswXSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5YWz6Zet5pWw5o2u5bqT6L+e5o6lLg0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBDbG9zZUNvbm5lY3QoKQ0KICAgIHsNCiAgICAgICAgaWYgKCR0aGlzLT5pc2Nvbm5lY3RlZCkgew0KICAgICAgICAgICAgJHRoaXMtPmRiLT5DbG9zZSgpOw0KICAgICAgICAgICAgJHRoaXMtPmlzY29ubmVjdGVkID0gZmFsc2U7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDlkK/nlKhzZXNzaW9uLg0KICAgICAqDQogICAgICogQHJldHVybiBib29sDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFN0YXJ0U2Vzc2lvbigpDQogICAgew0KICAgICAgICBpZiAoc2Vzc2lvbl9zdGF0dXMoKSA9PSAxKSB7DQogICAgICAgICAgICBzZXNzaW9uX3N0YXJ0KCk7DQogICAgICAgICAgICAkdGhpcy0+aXNzZXNzaW9uID0gdHJ1ZTsNCg0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0NCg0KICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog57uI5q2ic2Vzc2lvbi4NCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBFbmRTZXNzaW9uKCkNCiAgICB7DQogICAgICAgIGlmIChzZXNzaW9uX3N0YXR1cygpID09IDIpIHsNCiAgICAgICAgICAgIHNlc3Npb25fd3JpdGVfY2xvc2UoKTsNCiAgICAgICAgICAgICR0aGlzLT5pc3Nlc3Npb24gPSBmYWxzZTsNCg0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0NCg0KICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6L295YWl5o+S5Lu2Q29uZmlnc+ihqC4NCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gTG9hZENvbmZpZ3MoKQ0KICAgIHsNCiAgICAgICAgJHRoaXMtPmNvbmZpZ3MgPSBhcnJheSgpOw0KICAgICAgICAkc3FsID0gJHRoaXMtPmRiLT5zcWwtPlNlbGVjdCgkdGhpcy0+dGFibGVbJ0NvbmZpZyddLCBhcnJheSgnKicpLCAnJywgJycsICcnLCAnJyk7DQoNCiAgICAgICAgLyoqIEB2YXIgQ29uZmlnW10gJGFycmF5ICovDQogICAgICAgICRhcnJheSA9ICR0aGlzLT5HZXRMaXN0VHlwZSgnQ29uZmlnJywgJHNxbCk7DQogICAgICAgIGZvcmVhY2ggKCRhcnJheSBhcyAkYykgew0KICAgICAgICAgICAgJG4gPSAkYy0+R2V0SXRlbU5hbWUoKTsNCiAgICAgICAgICAgICR0aGlzLT5jb25maWdzWyRuXSA9ICRjOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6L295YWl5o+S5Lu2Q29uZmlnc+ihqCBPbmx5IFN5c3RlbSBPcHRpb24uDQogICAgICovDQogICAgcHJpdmF0ZSAkcHJ2Q29uZmlnTGlzdCA9IGFycmF5KCk7DQoNCiAgICBwdWJsaWMgZnVuY3Rpb24gTG9hZENvbmZpZ3NPbmx5U3lzdGVtKCRvbmx5c3lzdGVtb3B0aW9uID0gdHJ1ZSkNCiAgICB7DQogICAgICAgIGlmICgkb25seXN5c3RlbW9wdGlvbiA9PSB0cnVlKSB7DQogICAgICAgICAgICAkdGhpcy0+Y29uZmlncyA9IGFycmF5KCk7DQogICAgICAgICAgICAkdGhpcy0+cHJ2Q29uZmlnTGlzdCA9IGFycmF5KCk7DQogICAgICAgIH0NCg0KICAgICAgICAkc3FsID0gJHRoaXMtPmRiLT5zcWwtPlNlbGVjdCgkdGhpcy0+dGFibGVbJ0NvbmZpZyddLCBhcnJheSgnKicpLCAnJywgJycsICcnLCAnJyk7DQoNCiAgICAgICAgaWYgKCRvbmx5c3lzdGVtb3B0aW9uID09IHRydWUpIHsNCiAgICAgICAgICAgIC8qIEB2YXIgQ29uZmlnW10gJGFycmF5ICovDQogICAgICAgICAgICAkdGhpcy0+cHJ2Q29uZmlnTGlzdCA9ICR0aGlzLT5HZXRMaXN0VHlwZSgnQ29uZmlnJywgJHNxbCk7DQogICAgICAgICAgICBmb3JlYWNoICgkdGhpcy0+cHJ2Q29uZmlnTGlzdCBhcyAkYykgew0KICAgICAgICAgICAgICAgICRuID0gJGMtPkdldEl0ZW1OYW1lKCk7DQogICAgICAgICAgICAgICAgaWYgKCRuID09ICdzeXN0ZW0nKSB7DQogICAgICAgICAgICAgICAgICAgICR0aGlzLT5jb25maWdzWyRuXSA9ICRjOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIGZvcmVhY2ggKCR0aGlzLT5wcnZDb25maWdMaXN0IGFzICRjKSB7DQogICAgICAgICAgICAgICAgJG4gPSAkYy0+R2V0SXRlbU5hbWUoKTsNCiAgICAgICAgICAgICAgICBpZiAoJG4gIT0gJ3N5c3RlbScpIHsNCiAgICAgICAgICAgICAgICAgICAgJHRoaXMtPmNvbmZpZ3NbJG5dID0gJGM7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgJHRoaXMtPnBydkNvbmZpZ0xpc3QgPSBhcnJheSgpOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5L+d5a2YQ29uZmlnc+ihqC4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJG5hbWUgQ29uZmlnc+ihqOWQjQ0KICAgICAqDQogICAgICogQHJldHVybiBib29sDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFNhdmVDb25maWcoJG5hbWUpDQogICAgew0KICAgICAgICBpZiAoIWlzc2V0KCR0aGlzLT5jb25maWdzWyRuYW1lXSkpIHsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KDQogICAgICAgICR0aGlzLT5jb25maWdzWyRuYW1lXS0+U2F2ZSgpOw0KDQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOWIoOmZpENvbmZpZ3PooaguDQogICAgICoNCiAgICAgKiBAcGFyYW0gc3RyaW5nICRuYW1lIENvbmZpZ3PooajlkI0NCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBEZWxDb25maWcoJG5hbWUpDQogICAgew0KICAgICAgICBpZiAoIWlzc2V0KCR0aGlzLT5jb25maWdzWyRuYW1lXSkpIHsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KDQogICAgICAgICR0aGlzLT5jb25maWdzWyRuYW1lXS0+RGVsZXRlKCk7DQogICAgICAgIHVuc2V0KCR0aGlzLT5jb25maWdzWyRuYW1lXSk7DQoNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6I635Y+WQ29uZmlnc+ihqOWAvA0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAkbmFtZSBDb25maWdz6KGo5ZCNDQogICAgICoNCiAgICAgKiBAcmV0dXJuIG1peGVkDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIENvbmZpZygkbmFtZSkNCiAgICB7DQogICAgICAgIGlmICghaXNzZXQoJHRoaXMtPmNvbmZpZ3NbJG5hbWVdKSkgew0KICAgICAgICAgICAgJG5hbWUgPSBGaWx0ZXJDb3JyZWN0TmFtZSgkbmFtZSk7DQogICAgICAgICAgICBpZiAoISRuYW1lKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAkdGhpcy0+Y29uZmlnc1skbmFtZV0gPSBuZXcgQ29uZmlnKCRuYW1lKTsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiAkdGhpcy0+Y29uZmlnc1skbmFtZV07DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5p+l5p+QQ29uZmln5piv5ZCm5a2Y5ZyoLg0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAkbmFtZSBDb25maWdz6KGo5ZCNDQogICAgICoNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gSGFzQ29uZmlnKCRuYW1lKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuIGlzc2V0KCR0aGlzLT5jb25maWdzWyRuYW1lXSkgJiYgJHRoaXMtPmNvbmZpZ3NbJG5hbWVdLT5Db3VudEl0ZW0oKSA+IDA7DQogICAgfQ0KDQogICAgLy8jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCiAgICAvL0NhY2hl55u45YWzDQogICAgcHJpdmF0ZSAkY2FjaGVfaGFzaCA9IG51bGw7DQoNCiAgICAvKioNCiAgICAgKiDkv53lrZjnvJPlrZguDQogICAgICoNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gU2F2ZUNhY2hlKCkNCiAgICB7DQogICAgICAgIC8vJHM9JHRoaXMtPnVzZXJzZGlyIC4gJ2NhY2hlLycgLiAkdGhpcy0+Z3VpZCAuICcuY2FjaGUnOw0KICAgICAgICAvLyRjPXNlcmlhbGl6ZSgkdGhpcy0+Y2FjaGUpOw0KICAgICAgICAvL0BmaWxlX3B1dF9jb250ZW50cygkcywgJGMpOw0KICAgICAgICAvLyR0aGlzLT5jb25maWdzWydjYWNoZSddPSR0aGlzLT5jYWNoZTsNCiAgICAgICAgJG5ld19oYXNoID0gbWQ1KCR0aGlzLT5Db25maWcoJ2NhY2hlJykpOw0KICAgICAgICBpZiAoJHRoaXMtPmNhY2hlX2hhc2ggPT0gJG5ld19oYXNoKSB7DQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfQ0KDQogICAgICAgICR0aGlzLT5TYXZlQ29uZmlnKCdjYWNoZScpOw0KICAgICAgICAkdGhpcy0+Y2FjaGVfaGFzaCA9ICRuZXdfaGFzaDsNCg0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDliqDovb3nvJPlrZguDQogICAgICoNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gTG9hZENhY2hlKCkNCiAgICB7DQogICAgICAgICR0aGlzLT5jYWNoZSA9ICR0aGlzLT5Db25maWcoJ2NhY2hlJyk7DQogICAgICAgICR0aGlzLT5jYWNoZV9oYXNoID0gbWQ1KCR0aGlzLT5Db25maWcoJ2NhY2hlJykpOw0KDQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOS/neWtmOmFjee9ri4NCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBTYXZlT3B0aW9uKCkNCiAgICB7DQogICAgICAgICR0aGlzLT5vcHRpb25bJ1pDX0JMT0dfQ0xTSUQnXSA9ICR0aGlzLT5ndWlkOw0KDQogICAgICAgIGlmIChaQ19WRVJTSU9OX01BSk9SID09PSAnMScgJiYgWkNfVkVSU0lPTl9NSU5PUiA9PT0gJzUnKSB7DQogICAgICAgICAgICBpZiAoaXNfZGlyKCR0aGlzLT5wYXRoIC4gJ3piX3N5c3RlbS9hcGknKSkgew0KICAgICAgICAgICAgICAgIEBycm1kaXIoJHRoaXMtPnBhdGggLiAnemJfc3lzdGVtL2FwaScpOyAvLyBGaXggYnVnISEhDQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoc3RycG9zKCd8U0FFfEJBRTJ8QUNFfFRYWXwnLCAnfCcgLiAkdGhpcy0+b3B0aW9uWydaQ19ZVU5fU0lURSddIC4gJ3wnKSA9PT0gZmFsc2UgJiYgZmlsZV9leGlzdHMoJHRoaXMtPnVzZXJzZGlyIC4gJ2Nfb3B0aW9uLnBocCcpID09IGZhbHNlKSB7DQogICAgICAgICAgICAkcyA9ICI8IiAuICI/IiAuICJwaHBcclxuIjsNCiAgICAgICAgICAgICRzIC49ICJyZXR1cm4gIjsNCiAgICAgICAgICAgICRvcHRpb24gPSBhcnJheSgpOw0KICAgICAgICAgICAgZm9yZWFjaCAoJHRoaXMtPm9wdGlvbiBhcyAka2V5ID0+ICR2YWx1ZSkgew0KICAgICAgICAgICAgICAgIGlmICgoJGtleSA9PSAnWkNfWVVOX1NJVEUnKSB8fA0KICAgICAgICAgICAgICAgICAgICAoJGtleSA9PSAnWkNfREFUQUJBU0VfVFlQRScpIHx8DQogICAgICAgICAgICAgICAgICAgICgka2V5ID09ICdaQ19TUUxJVEVfTkFNRScpIHx8DQogICAgICAgICAgICAgICAgICAgICgka2V5ID09ICdaQ19TUUxJVEVfUFJFJykgfHwNCiAgICAgICAgICAgICAgICAgICAgKCRrZXkgPT0gJ1pDX01ZU1FMX1NFUlZFUicpIHx8DQogICAgICAgICAgICAgICAgICAgICgka2V5ID09ICdaQ19NWVNRTF9VU0VSTkFNRScpIHx8DQogICAgICAgICAgICAgICAgICAgICgka2V5ID09ICdaQ19NWVNRTF9QQVNTV09SRCcpIHx8DQogICAgICAgICAgICAgICAgICAgICgka2V5ID09ICdaQ19NWVNRTF9OQU1FJykgfHwNCiAgICAgICAgICAgICAgICAgICAgKCRrZXkgPT0gJ1pDX01ZU1FMX0NIQVJTRVQnKSB8fA0KICAgICAgICAgICAgICAgICAgICAoJGtleSA9PSAnWkNfTVlTUUxfUFJFJykgfHwNCiAgICAgICAgICAgICAgICAgICAgKCRrZXkgPT0gJ1pDX01ZU1FMX0VOR0lORScpIHx8DQogICAgICAgICAgICAgICAgICAgICgka2V5ID09ICdaQ19NWVNRTF9QT1JUJykgfHwNCiAgICAgICAgICAgICAgICAgICAgKCRrZXkgPT0gJ1pDX01ZU1FMX1BFUlNJU1RFTlQnKSB8fA0KICAgICAgICAgICAgICAgICAgICAoJGtleSA9PSAnWkNfUEdTUUxfU0VSVkVSJykgfHwNCiAgICAgICAgICAgICAgICAgICAgKCRrZXkgPT0gJ1pDX1BHU1FMX1VTRVJOQU1FJykgfHwNCiAgICAgICAgICAgICAgICAgICAgKCRrZXkgPT0gJ1pDX1BHU1FMX1BBU1NXT1JEJykgfHwNCiAgICAgICAgICAgICAgICAgICAgKCRrZXkgPT0gJ1pDX1BHU1FMX05BTUUnKSB8fA0KICAgICAgICAgICAgICAgICAgICAoJGtleSA9PSAnWkNfUEdTUUxfQ0hBUlNFVCcpIHx8DQogICAgICAgICAgICAgICAgICAgICgka2V5ID09ICdaQ19QR1NRTF9QUkUnKSB8fA0KICAgICAgICAgICAgICAgICAgICAoJGtleSA9PSAnWkNfUEdTUUxfUE9SVCcpIHx8DQogICAgICAgICAgICAgICAgICAgICgka2V5ID09ICdaQ19QR1NRTF9QRVJTSVNURU5UJykgfHwNCiAgICAgICAgICAgICAgICAgICAgKCRrZXkgPT0gJ1pDX0NMT1NFX1dIT0xFX1NJVEUnKQ0KICAgICAgICAgICAgICAgICkgew0KICAgICAgICAgICAgICAgICAgICAkb3B0aW9uWyRrZXldID0gJHZhbHVlOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgICRzIC49IHZhcl9leHBvcnQoJG9wdGlvbiwgdHJ1ZSk7DQogICAgICAgICAgICAkcyAuPSAiOyI7DQogICAgICAgICAgICBAZmlsZV9wdXRfY29udGVudHMoJHRoaXMtPnVzZXJzZGlyIC4gJ2Nfb3B0aW9uLnBocCcsICRzKTsNCiAgICAgICAgfQ0KDQogICAgICAgIGZvcmVhY2ggKCR0aGlzLT5vcHRpb24gYXMgJGtleSA9PiAkdmFsdWUpIHsNCiAgICAgICAgICAgICR0aGlzLT5Db25maWcoJ3N5c3RlbScpLT4ka2V5ID0gJHZhbHVlOw0KICAgICAgICB9DQoNCiAgICAgICAgJHRoaXMtPkNvbmZpZygnc3lzdGVtJyktPlpDX0JMT0dfSE9TVCA9IGNodW5rX3NwbGl0KCR0aGlzLT5Db25maWcoJ3N5c3RlbScpLT5aQ19CTE9HX0hPU1QsIDEsICJ8Iik7DQoNCiAgICAgICAgJHRoaXMtPlNhdmVDb25maWcoJ3N5c3RlbScpOw0KDQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOi9veWFpemFjee9ri4NCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBMb2FkT3B0aW9uKCkNCiAgICB7DQogICAgICAgICRhcnJheSA9ICR0aGlzLT5Db25maWcoJ3N5c3RlbScpLT5HZXREYXRhKCk7DQoNCiAgICAgICAgaWYgKGVtcHR5KCRhcnJheSkpIHsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KDQogICAgICAgIGlmICghaXNfYXJyYXkoJGFycmF5KSkgew0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQoNCiAgICAgICAgZm9yZWFjaCAoJGFycmF5IGFzICRrZXkgPT4gJHZhbHVlKSB7DQogICAgICAgICAgICAvL2lmKCRrZXk9PSdaQ19QRVJNQU5FTlRfRE9NQUlOX0VOQUJMRScpY29udGludWU7DQogICAgICAgICAgICAvL2lmKCRrZXk9PSdaQ19CTE9HX0hPU1QnKWNvbnRpbnVlOw0KICAgICAgICAgICAgLy9pZigka2V5PT0nWkNfQkxPR19DTFNJRCcpY29udGludWU7DQogICAgICAgICAgICAvL2lmKCRrZXk9PSdaQ19CTE9HX0xBTkdVQUdFUEFDSycpY29udGludWU7DQogICAgICAgICAgICBpZiAoJGtleSA9PSAnWkNfQkxPR19IT1NUJykgew0KICAgICAgICAgICAgICAgICR2YWx1ZSA9IHN0cl9yZXBsYWNlKCd8JywgJycsICR2YWx1ZSk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGlmICgoJGtleSA9PSAnWkNfWVVOX1NJVEUnKSB8fA0KICAgICAgICAgICAgICAgICgka2V5ID09ICdaQ19EQVRBQkFTRV9UWVBFJykgfHwNCiAgICAgICAgICAgICAgICAoJGtleSA9PSAnWkNfU1FMSVRFX05BTUUnKSB8fA0KICAgICAgICAgICAgICAgICgka2V5ID09ICdaQ19TUUxJVEVfUFJFJykgfHwNCiAgICAgICAgICAgICAgICAoJGtleSA9PSAnWkNfTVlTUUxfU0VSVkVSJykgfHwNCiAgICAgICAgICAgICAgICAoJGtleSA9PSAnWkNfTVlTUUxfVVNFUk5BTUUnKSB8fA0KICAgICAgICAgICAgICAgICgka2V5ID09ICdaQ19NWVNRTF9QQVNTV09SRCcpIHx8DQogICAgICAgICAgICAgICAgKCRrZXkgPT0gJ1pDX01ZU1FMX05BTUUnKSB8fA0KICAgICAgICAgICAgICAgICgka2V5ID09ICdaQ19NWVNRTF9DSEFSU0VUJykgfHwNCiAgICAgICAgICAgICAgICAoJGtleSA9PSAnWkNfTVlTUUxfUFJFJykgfHwNCiAgICAgICAgICAgICAgICAoJGtleSA9PSAnWkNfTVlTUUxfRU5HSU5FJykgfHwNCiAgICAgICAgICAgICAgICAoJGtleSA9PSAnWkNfTVlTUUxfUE9SVCcpIHx8DQogICAgICAgICAgICAgICAgKCRrZXkgPT0gJ1pDX01ZU1FMX1BFUlNJU1RFTlQnKSB8fA0KICAgICAgICAgICAgICAgICgka2V5ID09ICdaQ19QR1NRTF9TRVJWRVInKSB8fA0KICAgICAgICAgICAgICAgICgka2V5ID09ICdaQ19QR1NRTF9VU0VSTkFNRScpIHx8DQogICAgICAgICAgICAgICAgKCRrZXkgPT0gJ1pDX1BHU1FMX1BBU1NXT1JEJykgfHwNCiAgICAgICAgICAgICAgICAoJGtleSA9PSAnWkNfUEdTUUxfTkFNRScpIHx8DQogICAgICAgICAgICAgICAgKCRrZXkgPT0gJ1pDX1BHU1FMX0NIQVJTRVQnKSB8fA0KICAgICAgICAgICAgICAgICgka2V5ID09ICdaQ19QR1NRTF9QUkUnKSB8fA0KICAgICAgICAgICAgICAgICgka2V5ID09ICdaQ19QR1NRTF9QT1JUJykgfHwNCiAgICAgICAgICAgICAgICAoJGtleSA9PSAnWkNfUEdTUUxfUEVSU0lTVEVOVCcpIHx8DQogICAgICAgICAgICAgICAgKCRrZXkgPT0gJ1pDX0NMT1NFX1dIT0xFX1NJVEUnKQ0KICAgICAgICAgICAgKSB7DQogICAgICAgICAgICAgICAgY29udGludWU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICR0aGlzLT5vcHRpb25bJGtleV0gPSAkdmFsdWU7DQogICAgICAgIH0NCiAgICAgICAgaWYgKCFleHRlbnNpb25fbG9hZGVkKCdnZCcpKSB7DQogICAgICAgICAgICAkdGhpcy0+b3B0aW9uWydaQ19DT01NRU5UX1ZFUklGWV9FTkFCTEUnXSA9IGZhbHNlOw0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6aqM6K+B5pON5L2c5p2D6ZmQLg0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAgICAgJGFjdGlvbiDmk43kvZwNCiAgICAgKiBAcGFyYW0gaW50fHN0cmluZyAkbGV2ZWwNCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBDaGVja1JpZ2h0cygkYWN0aW9uLCAkbGV2ZWwgPSBudWxsKQ0KICAgIHsNCiAgICAgICAgaWYgKCRsZXZlbCA9PT0gbnVsbCkgew0KICAgICAgICAgICAgJGxldmVsID0gJHRoaXMtPnVzZXItPkxldmVsOw0KICAgICAgICB9DQoNCiAgICAgICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fWmJwX0NoZWNrUmlnaHRzJ10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICAgICAkZnByZXR1cm4gPSAkZnBuYW1lKCRhY3Rpb24sICRsZXZlbCk7DQogICAgICAgICAgICBpZiAoJGZwc2lnbmFsID09IFBMVUdJTl9FWElUU0lHTkFMX1JFVFVSTikgew0KICAgICAgICAgICAgICAgICRmcHNpZ25hbCA9IFBMVUdJTl9FWElUU0lHTkFMX05PTkU7DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gJGZwcmV0dXJuOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGlmICghaXNzZXQoJHRoaXMtPmFjdGlvbnNbJGFjdGlvbl0pKSB7DQogICAgICAgICAgICBpZiAoaXNfbnVtZXJpYygkYWN0aW9uKSkgew0KICAgICAgICAgICAgICAgIHJldHVybiAkbGV2ZWwgPD0gJGFjdGlvbjsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuICRsZXZlbCA8PSAkdGhpcy0+YWN0aW9uc1skYWN0aW9uXTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmoLnmja7nlKjmiLfnrYnnuqfpqozor4Hmk43kvZzmnYPpmZAgMS415byA5aeL5Y+C5pWw5o2i6aG65bqPLg0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAkYWN0aW9uIOaTjeS9nA0KICAgICAqIEBwYXJhbSBpbnQgICAgJGxldmVsICDnlKjmiLfnrYnnuqcNCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBDaGVja1JpZ2h0c0J5TGV2ZWwoJGFjdGlvbiwgJGxldmVsKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuICR0aGlzLT5DaGVja1JpZ2h0cygkYWN0aW9uLCAkbGV2ZWwpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOmqjOivgeeUqOaIt+eZu+W9lS4NCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBWZXJpZnkoKQ0KICAgIHsNCiAgICAgICAgJHVzZXJuYW1lID0gdHJpbShHZXRWYXJzKCd1c2VybmFtZScsICdDT09LSUUnKSk7DQogICAgICAgICR0b2tlbiA9IHRyaW0oR2V0VmFycygndG9rZW4nLCAnQ09PS0lFJykpOw0KICAgICAgICAkdXNlciA9ICR0aGlzLT5WZXJpZnlVc2VyVG9rZW4oJHRva2VuLCAkdXNlcm5hbWUpOw0KICAgICAgICBpZiAoIWlzX251bGwoJHVzZXIpKSB7DQogICAgICAgICAgICAkdGhpcy0+dXNlciA9ICR1c2VyOw0KDQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfQ0KICAgICAgICAkdGhpcy0+dXNlciA9IG5ldyBNZW1iZXIoKTsNCiAgICAgICAgJHRoaXMtPnVzZXItPkd1aWQgPSBHZXRHdWlkKCk7DQoNCiAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOi/lOWbnueZu+W9leaIkOWKn+WQjuW6lOS/neWtmOeahGNvb2tpZeS/oeaBry4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBNZW1iZXIgJG0g5bey6aqM6L+H5oiQ5Yqf55qEbWVtYmVyDQogICAgICoNCiAgICAgKiBAcmV0dXJuIHN0cmluZw0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBWZXJpZnlSZXN1bHQoJG0pDQogICAgew0KICAgICAgICByZXR1cm4gJHRoaXMtPkdlbmVyYXRlVXNlclRva2VuKCRtKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDnlJ/miJBVc2VyIFRva2Vu77yM55So5LqO55m75b2V6aqM6K+BDQogICAgICoNCiAgICAgKiBAcGFyYW0gTWVtYmVyICR1c2VyDQogICAgICogQHBhcmFtIGludCAgICAkdGltZQ0KICAgICAqDQogICAgICogQHJldHVybiBzdHJpbmcNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gR2VuZXJhdGVVc2VyVG9rZW4oJHVzZXIsICR0aW1lID0gMCkNCiAgICB7DQogICAgICAgIGlmICgkdGltZSA9PT0gMCkgew0KICAgICAgICAgICAgJHRpbWUgPSB0aW1lKCkgKyAzNjAwICogMjQ7DQogICAgICAgIH0NCg0KICAgICAgICByZXR1cm4gQ3JlYXRlV2ViVG9rZW4oJHVzZXItPklELCAkdGltZSwgJHVzZXItPkd1aWQsICR1c2VyLT5QYXNzV29yZF9NRDVQYXRoKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDpqozor4HnlKjmiLfnmbvlvZVUb2tlbi4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJHRva2VuDQogICAgICogQHBhcmFtIHN0cmluZyAkdXNlcm5hbWUNCiAgICAgKg0KICAgICAqIEByZXR1cm4gTWVtYmVyDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFZlcmlmeVVzZXJUb2tlbigkdG9rZW4sICR1c2VybmFtZSkNCiAgICB7DQogICAgICAgICR1c2VyID0gJHRoaXMtPkdldE1lbWJlckJ5TmFtZSgkdXNlcm5hbWUpOw0KICAgICAgICBpZiAoJHVzZXItPklEID4gMCkgew0KICAgICAgICAgICAgaWYgKFZlcmlmeVdlYlRva2VuKCR0b2tlbiwgJHVzZXItPklELCAkdXNlci0+R3VpZCwgJHVzZXItPlBhc3NXb3JkX01ENVBhdGgpKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuICR1c2VyOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6aqM6K+B55So5oi355m75b2V77yI5LiA5qyhTUQ15a+G56CB77yJLg0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAkbmFtZSAgIOeUqOaIt+WQjQ0KICAgICAqIEBwYXJhbSBzdHJpbmcgJG1kNXB3ICBtZDXliqDlr4blkI7nmoTlr4bnoIENCiAgICAgKiBAcGFyYW0gTWVtYmVyICRtZW1iZXIg6L+U5Zue6K+75Y+W5oiQ5Yqf55qEbWVtYmVy5a+56LGhDQogICAgICoNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gVmVyaWZ5X01ENSgkbmFtZSwgJG1kNXB3LCAmJG1lbWJlcikNCiAgICB7DQogICAgICAgIGlmICgkbmFtZSA9PSAnJyB8fCAkbWQ1cHcgPT0gJycpIHsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KICAgICAgICAkbWVtYmVyID0gJHRoaXMtPkdldE1lbWJlckJ5TmFtZSgkbmFtZSk7DQogICAgICAgIGlmICgkbWVtYmVyLT5JRCA+IDApIHsNCiAgICAgICAgICAgIHJldHVybiAkdGhpcy0+VmVyaWZ5X0ZpbmFsKCRuYW1lLCBtZDUoJG1kNXB3IC4gJG1lbWJlci0+R3VpZCksICRtZW1iZXIpOw0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOmqjOivgeeUqOaIt+eZu+W9le+8iOWOn+Wni+aYjuaWh+Wvhuegge+8iS4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJG5hbWUgICAgICAg55So5oi35ZCNDQogICAgICogQHBhcmFtIHN0cmluZyAkb3JpZ2luYWxwdyDlr4bnoIHmmI7mlocNCiAgICAgKiBAcGFyYW0gTWVtYmVyICRtZW1iZXIgICAgIOi/lOWbnuivu+WPluaIkOWKn+eahG1lbWJlcuWvueixoQ0KICAgICAqDQogICAgICogQHJldHVybiBib29sDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFZlcmlmeV9PcmlnaW5hbCgkbmFtZSwgJG9yaWdpbmFscHcsICYkbWVtYmVyID0gbnVsbCkNCiAgICB7DQogICAgICAgIGlmICgkbmFtZSA9PSAnJyB8fCAkb3JpZ2luYWxwdyA9PSAnJykgew0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQogICAgICAgICRtID0gJHRoaXMtPkdldE1lbWJlckJ5TmFtZSgkbmFtZSk7DQogICAgICAgIGlmICgkbS0+SUQgPiAwKSB7DQogICAgICAgICAgICByZXR1cm4gJHRoaXMtPlZlcmlmeV9NRDUoJG5hbWUsIG1kNSgkb3JpZ2luYWxwdyksICRtZW1iZXIpOw0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOmqjOivgeeUqOaIt+eZu+W9le+8iOaVsOaNruW6k+S/neWtmOeahOacgOe7iOi/kOeul+WQjuWvhuegge+8iS4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJG5hbWUgICAgIOeUqOaIt+WQjQ0KICAgICAqIEBwYXJhbSBzdHJpbmcgJHBhc3N3b3JkIOS6jOasoeWKoOWvhuWQjueahOWvhueggQ0KICAgICAqIEBwYXJhbSBvYmplY3QgJG1lbWJlciAgIOi/lOWbnuivu+WPluaIkOWKn+eahG1lbWJlcuWvueixoQ0KICAgICAqDQogICAgICogQHJldHVybiBib29sDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFZlcmlmeV9GaW5hbCgkbmFtZSwgJHBhc3N3b3JkLCAmJG1lbWJlciA9IG51bGwpDQogICAgew0KICAgICAgICBpZiAoJG5hbWUgPT0gJycgfHwgJHBhc3N3b3JkID09ICcnKSB7DQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0NCiAgICAgICAgJG0gPSAkdGhpcy0+R2V0TWVtYmVyQnlOYW1lKCRuYW1lKTsNCiAgICAgICAgaWYgKCRtLT5JRCA+IDApIHsNCiAgICAgICAgICAgIGlmIChzdHJjYXNlY21wKCRtLT5QYXNzd29yZCwgJHBhc3N3b3JkKSA9PSAwKSB7DQogICAgICAgICAgICAgICAgJG1lbWJlciA9ICRtOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6aqM6K+B55So5oi355m75b2V77yI5L2/55SoVG9rZW7vvIzmm7/ku6Plr4bnoIHkv53lrZjvvIkuDQogICAgICoNCiAgICAgKiBAcGFyYW0gc3RyaW5nICRuYW1lICAg55So5oi35ZCNDQogICAgICogQHBhcmFtIHN0cmluZyAkd3QgICAgIFdlYlRva2VuDQogICAgICogQHBhcmFtIHN0cmluZyAkd3RfaWQgIFdlYlRva2Vu55qESUTor4bliKvnrKYNCiAgICAgKiBAcGFyYW0gb2JqZWN0ICRtZW1iZXIg6L+U5Zue6K+75Y+W5oiQ5Yqf55qEbWVtYmVy5a+56LGhDQogICAgICoNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gVmVyaWZ5X1Rva2VuKCRuYW1lLCAkd3QsICR3dF9pZCwgJiRtZW1iZXIgPSBudWxsKQ0KICAgIHsNCiAgICAgICAgaWYgKCRuYW1lID09ICcnIHx8ICR3dCA9PSAnJykgew0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQogICAgICAgICRtID0gbnVsbDsNCiAgICAgICAgJG0gPSAkdGhpcy0+R2V0TWVtYmVyQnlOYW1lKCRuYW1lKTsNCiAgICAgICAgaWYgKCRtLT5JRCA+IDApIHsNCiAgICAgICAgICAgIGlmIChWZXJpZnlXZWJUb2tlbigkd3QsICR3dF9pZCwgJHRoaXMtPmd1aWQsICRtLT5JRCwgJG0tPlBhc3N3b3JkKSA9PT0gdHJ1ZSkgew0KICAgICAgICAgICAgICAgICRtZW1iZXIgPSAkbTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOi9veWFpeeUqOaIt+WIl+ihqC4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBpbnQgJGxldmVsIOeUqOaIt+etiee6pw0KICAgICAqDQogICAgICogQHJldHVybiBib29sDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIExvYWRNZW1iZXJzKCRsZXZlbCA9IDApDQogICAgew0KICAgICAgICBpZiAoJGxldmVsIDwgMCkgew0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQoNCiAgICAgICAgJHdoZXJlID0gbnVsbDsNCiAgICAgICAgaWYgKCRsZXZlbCA+IDApIHsNCiAgICAgICAgICAgICR3aGVyZSA9IGFycmF5KGFycmF5KCc8PScsICdtZW1fTGV2ZWwnLCAkbGV2ZWwpKTsNCiAgICAgICAgfQ0KICAgICAgICAkdGhpcy0+bWVtYmVycyA9IGFycmF5KCk7DQogICAgICAgICR0aGlzLT5tZW1iZXJzYnluYW1lID0gYXJyYXkoKTsNCiAgICAgICAgJGFycmF5ID0gJHRoaXMtPkdldE1lbWJlckxpc3QobnVsbCwgJHdoZXJlKTsNCiAgICAgICAgZm9yZWFjaCAoJGFycmF5IGFzICRtKSB7DQogICAgICAgICAgICAkdGhpcy0+bWVtYmVyc1skbS0+SURdID0gJG07DQogICAgICAgICAgICAkdGhpcy0+bWVtYmVyc2J5bmFtZVskbS0+TmFtZV0gPSAmJHRoaXMtPm1lbWJlcnNbJG0tPklEXTsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOi9veWFpeWIhuexu+WIl+ihqC4NCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBMb2FkQ2F0ZWdvcmllcygpDQogICAgew0KICAgICAgICAkdGhpcy0+Y2F0ZWdvcmllcyA9IGFycmF5KCk7DQogICAgICAgICR0aGlzLT5jYXRlZ29yaWVzYnlvcmRlciA9IGFycmF5KCk7DQogICAgICAgICRsdjAgPSBhcnJheSgpOw0KICAgICAgICAkbHYxID0gYXJyYXkoKTsNCiAgICAgICAgJGx2MiA9IGFycmF5KCk7DQogICAgICAgICRsdjMgPSBhcnJheSgpOw0KICAgICAgICAkYXJyYXkgPSAkdGhpcy0+R2V0Q2F0ZWdvcnlMaXN0KG51bGwsIG51bGwsIGFycmF5KCdjYXRlX09yZGVyJyA9PiAnQVNDJyksIG51bGwsIG51bGwpOw0KICAgICAgICBpZiAoY291bnQoJGFycmF5KSA9PSAwKSB7DQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0NCg0KICAgICAgICBmb3JlYWNoICgkYXJyYXkgYXMgJGMpIHsNCiAgICAgICAgICAgICR0aGlzLT5jYXRlZ29yaWVzWyRjLT5JRF0gPSAkYzsNCiAgICAgICAgfQ0KDQogICAgICAgIGZvcmVhY2ggKCR0aGlzLT5jYXRlZ29yaWVzIGFzICRpZCA9PiAkYykgew0KICAgICAgICAgICAgJGwgPSAnbHYnIC4gJGMtPkxldmVsOw0KICAgICAgICAgICAgJHskbH1bJGMtPlBhcmVudElEXVtdID0gJGlkOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKCFpc19hcnJheSgkbHYwWzBdKSkgew0KICAgICAgICAgICAgJGx2MFswXSA9IGFycmF5KCk7DQogICAgICAgIH0NCg0KICAgICAgICAvKg0KICAgICAgICAgKiDku6XkuIvlnoPlnL7ku6PnoIHvvIzlv4Xpobvph43mnoTvvIENCiAgICAgICAgICovDQogICAgICAgIGZvcmVhY2ggKCRsdjBbMF0gYXMgJGlkMCkgew0KICAgICAgICAgICAgJHRoaXMtPmNhdGVnb3JpZXNieW9yZGVyWyRpZDBdID0gJiR0aGlzLT5jYXRlZ29yaWVzWyRpZDBdOw0KICAgICAgICAgICAgaWYgKCFpc3NldCgkbHYxWyRpZDBdKSkgew0KICAgICAgICAgICAgICAgIGNvbnRpbnVlOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZm9yZWFjaCAoJGx2MVskaWQwXSBhcyAkaWQxKSB7DQogICAgICAgICAgICAgICAgaWYgKCR0aGlzLT5jYXRlZ29yaWVzWyRpZDFdLT5QYXJlbnRJRCA9PSAkaWQwKSB7DQogICAgICAgICAgICAgICAgICAgICR0aGlzLT5jYXRlZ29yaWVzWyRpZDFdLT5Sb290SUQgPSAkaWQwOw0KICAgICAgICAgICAgICAgICAgICAkdGhpcy0+Y2F0ZWdvcmllc1skaWQwXS0+U3ViQ2F0ZWdvcmllc1tdID0gJHRoaXMtPmNhdGVnb3JpZXNbJGlkMV07DQogICAgICAgICAgICAgICAgICAgICR0aGlzLT5jYXRlZ29yaWVzWyRpZDBdLT5DaGlsZHJlbkNhdGVnb3JpZXNbXSA9ICR0aGlzLT5jYXRlZ29yaWVzWyRpZDFdOw0KICAgICAgICAgICAgICAgICAgICAkdGhpcy0+Y2F0ZWdvcmllc2J5b3JkZXJbJGlkMV0gPSAmJHRoaXMtPmNhdGVnb3JpZXNbJGlkMV07DQogICAgICAgICAgICAgICAgICAgIGlmICghaXNzZXQoJGx2MlskaWQxXSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRsdjJbJGlkMV0gYXMgJGlkMikgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCR0aGlzLT5jYXRlZ29yaWVzWyRpZDJdLT5QYXJlbnRJRCA9PSAkaWQxKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMtPmNhdGVnb3JpZXNbJGlkMl0tPlJvb3RJRCA9ICRpZDA7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMtPmNhdGVnb3JpZXNbJGlkMF0tPkNoaWxkcmVuQ2F0ZWdvcmllc1tdID0gJHRoaXMtPmNhdGVnb3JpZXNbJGlkMl07DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMtPmNhdGVnb3JpZXNbJGlkMV0tPlN1YkNhdGVnb3JpZXNbXSA9ICR0aGlzLT5jYXRlZ29yaWVzWyRpZDJdOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLT5jYXRlZ29yaWVzWyRpZDFdLT5DaGlsZHJlbkNhdGVnb3JpZXNbXSA9ICR0aGlzLT5jYXRlZ29yaWVzWyRpZDJdOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLT5jYXRlZ29yaWVzYnlvcmRlclskaWQyXSA9ICYkdGhpcy0+Y2F0ZWdvcmllc1skaWQyXTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWlzc2V0KCRsdjNbJGlkMl0pKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkbHYzWyRpZDJdIGFzICRpZDMpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCR0aGlzLT5jYXRlZ29yaWVzWyRpZDNdLT5QYXJlbnRJRCA9PSAkaWQyKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy0+Y2F0ZWdvcmllc1skaWQzXS0+Um9vdElEID0gJGlkMDsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLT5jYXRlZ29yaWVzWyRpZDBdLT5DaGlsZHJlbkNhdGVnb3JpZXNbXSA9ICR0aGlzLT5jYXRlZ29yaWVzWyRpZDNdOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMtPmNhdGVnb3JpZXNbJGlkMV0tPkNoaWxkcmVuQ2F0ZWdvcmllc1tdID0gJHRoaXMtPmNhdGVnb3JpZXNbJGlkM107DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy0+Y2F0ZWdvcmllc1skaWQyXS0+U3ViQ2F0ZWdvcmllc1tdID0gJHRoaXMtPmNhdGVnb3JpZXNbJGlkM107DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy0+Y2F0ZWdvcmllc1skaWQyXS0+Q2hpbGRyZW5DYXRlZ29yaWVzW10gPSAkdGhpcy0+Y2F0ZWdvcmllc1skaWQzXTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLT5jYXRlZ29yaWVzYnlvcmRlclskaWQzXSA9ICYkdGhpcy0+Y2F0ZWdvcmllc1skaWQzXTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOi9veWFpeagh+etvuWIl+ihqC4NCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBMb2FkVGFncygpDQogICAgew0KICAgICAgICAkdGhpcy0+dGFncyA9IGFycmF5KCk7DQogICAgICAgICR0aGlzLT50YWdzYnluYW1lID0gYXJyYXkoKTsNCiAgICAgICAgJGFycmF5ID0gJHRoaXMtPkdldFRhZ0xpc3QoKTsNCiAgICAgICAgZm9yZWFjaCAoJGFycmF5IGFzICR0KSB7DQogICAgICAgICAgICAkdGhpcy0+dGFnc1skdC0+SURdID0gJHQ7DQogICAgICAgICAgICAkdGhpcy0+dGFnc2J5bmFtZVskdC0+TmFtZV0gPSAmJHRoaXMtPnRhZ3NbJHQtPklEXTsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOi9veWFpeaooeWdl+WIl+ihqC4NCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBMb2FkTW9kdWxlcygpDQogICAgew0KICAgICAgICAkdGhpcy0+bW9kdWxlcyA9IGFycmF5KCk7DQogICAgICAgICR0aGlzLT5tb2R1bGVzYnlmaWxlbmFtZSA9IGFycmF5KCk7DQogICAgICAgICRhcnJheSA9ICR0aGlzLT5HZXRNb2R1bGVMaXN0KCk7DQogICAgICAgIGZvcmVhY2ggKCRhcnJheSBhcyAkbSkgew0KICAgICAgICAgICAgJHRoaXMtPm1vZHVsZXNbXSA9ICRtOw0KICAgICAgICAgICAgJHRoaXMtPm1vZHVsZXNieWZpbGVuYW1lWyRtLT5GaWxlTmFtZV0gPSAkbTsNCiAgICAgICAgfQ0KDQogICAgICAgICRkaXIgPSAkdGhpcy0+dXNlcnNkaXIgLiAndGhlbWUvJyAuICR0aGlzLT50aGVtZSAuICcvaW5jbHVkZS8nOw0KICAgICAgICBpZiAoZmlsZV9leGlzdHMoJGRpcikpIHsNCiAgICAgICAgICAgICRmaWxlcyA9IEdldEZpbGVzSW5EaXIoJGRpciwgJ3BocCcpOw0KICAgICAgICAgICAgZm9yZWFjaCAoJGZpbGVzIGFzICRzb3J0bmFtZSA9PiAkZnVsbG5hbWUpIHsNCiAgICAgICAgICAgICAgICAkbSA9IG5ldyBNb2R1bGUoKTsNCiAgICAgICAgICAgICAgICAkbS0+RmlsZU5hbWUgPSAkc29ydG5hbWU7DQogICAgICAgICAgICAgICAgJG0tPkNvbnRlbnQgPSBmaWxlX2dldF9jb250ZW50cygkZnVsbG5hbWUpOw0KICAgICAgICAgICAgICAgICRtLT5UeXBlID0gJ2Rpdic7DQogICAgICAgICAgICAgICAgJG0tPlNvdXJjZSA9ICd0aGVtZSc7DQogICAgICAgICAgICAgICAgJHRoaXMtPm1vZHVsZXNbXSA9ICRtOw0KICAgICAgICAgICAgICAgICR0aGlzLT5tb2R1bGVzYnlmaWxlbmFtZVskbS0+RmlsZU5hbWVdID0gJG07DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDovb3lhaXkuLvpopjliJfooaguDQogICAgICoNCiAgICAgKiBAcmV0dXJuIEFwcFtdDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIExvYWRUaGVtZXMoKQ0KICAgIHsNCiAgICAgICAgJGFsbFRoZW1lcyA9IGFycmF5KCk7DQogICAgICAgICRkaXJzID0gR2V0RGlyc0luRGlyKCR0aGlzLT51c2Vyc2RpciAuICd0aGVtZS8nKTsNCiAgICAgICAgbmF0Y2FzZXNvcnQoJGRpcnMpOw0KICAgICAgICBhcnJheV91bnNoaWZ0KCRkaXJzLCAkdGhpcy0+dGhlbWUpOw0KICAgICAgICAkZGlycyA9IGFycmF5X3VuaXF1ZSgkZGlycyk7DQogICAgICAgIGZvcmVhY2ggKCRkaXJzIGFzICRpZCkgew0KICAgICAgICAgICAgJGFwcCA9IG5ldyBBcHAoKTsNCiAgICAgICAgICAgIGlmICgkYXBwLT5Mb2FkSW5mb0J5WG1sKCd0aGVtZScsICRpZCkgPT0gdHJ1ZSkgew0KICAgICAgICAgICAgICAgICRhbGxUaGVtZXNbXSA9ICRhcHA7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICByZXR1cm4gJGFsbFRoZW1lczsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDovb3lhaXmj5Lku7bliJfooaguDQogICAgICoNCiAgICAgKiBAcmV0dXJuIEFwcFtdDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIExvYWRQbHVnaW5zKCkNCiAgICB7DQogICAgICAgICRhbGxQbHVnaW5zID0gYXJyYXkoKTsNCiAgICAgICAgJGRpcnMgPSBHZXREaXJzSW5EaXIoJHRoaXMtPnVzZXJzZGlyIC4gJ3BsdWdpbi8nKTsNCiAgICAgICAgbmF0Y2FzZXNvcnQoJGRpcnMpOw0KDQogICAgICAgIGZvcmVhY2ggKCRkaXJzIGFzICRpZCkgew0KICAgICAgICAgICAgJGFwcCA9IG5ldyBBcHAoKTsNCiAgICAgICAgICAgIGlmICgkYXBwLT5Mb2FkSW5mb0J5WG1sKCdwbHVnaW4nLCAkaWQpID09IHRydWUpIHsNCiAgICAgICAgICAgICAgICAkYWxsUGx1Z2luc1tdID0gJGFwcDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiAkYWxsUGx1Z2luczsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDovb3lhaXmjIflrprlupTnlKguDQogICAgICoNCiAgICAgKiBAcGFyYW0gc3RyaW5nICR0eXBlIOW6lOeUqOexu+Weiyh0aGVtZXxwbHVnaW4pDQogICAgICogQHBhcmFtIHN0cmluZyAkaWQgICDlupTnlKhJRA0KICAgICAqDQogICAgICogQHJldHVybiBBcHANCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gTG9hZEFwcCgkdHlwZSwgJGlkKQ0KICAgIHsNCiAgICAgICAgJGFwcCA9IG5ldyBBcHAoKTsNCiAgICAgICAgJGFwcC0+TG9hZEluZm9CeVhtbCgkdHlwZSwgJGlkKTsNCg0KICAgICAgICByZXR1cm4gJGFwcDsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmo4Dmn6XlupTnlKjmmK/lkKblronoo4XlubblkK/nlKguDQogICAgICoNCiAgICAgKiBAcGFyYW0gc3RyaW5nICRuYW1lIOW6lOeUqO+8iOaPkuS7tuaIluS4u+mimO+8ieeahElEDQogICAgICoNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gQ2hlY2tQbHVnaW4oJG5hbWUpDQogICAgew0KICAgICAgICByZXR1cm4gaW5fYXJyYXkoJG5hbWUsICR0aGlzLT5hY3RpdmVkYXBwcyk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5qOA5p+l5bqU55So5piv5ZCm5a6J6KOF5bm25ZCv55SoLg0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAkbmFtZSDlupTnlKhJRO+8iOaPkuS7tuaIluS4u+mimO+8iQ0KICAgICAqDQogICAgICogQHJldHVybiBib29sDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIENoZWNrQXBwKCRuYW1lKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuICR0aGlzLT5DaGVja1BsdWdpbigkbmFtZSk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6I635Y+W6aKE5r+A5rS75o+S5Lu25ZCN5pWw57uELg0KICAgICAqDQogICAgICogQHJldHVybiBzdHJpbmdbXQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBHZXRQcmVBY3RpdmVQbHVnaW4oKQ0KICAgIHsNCiAgICAgICAgJGFwID0gZXhwbG9kZSgifCIsICR0aGlzLT5vcHRpb25bJ1pDX1VTSU5HX1BMVUdJTl9MSVNUJ10pOw0KICAgICAgICAkYXAgPSBhcnJheV91bmlxdWUoJGFwKTsNCg0KICAgICAgICByZXR1cm4gJGFwOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOi9veWFpeaMh+WumuW6lOeUqOivreiogOWMhS4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJHR5cGUgICAg5bqU55So57G75Z6LKHN5c3RlbXx0aGVtZXxwbHVnaW4pDQogICAgICogQHBhcmFtIHN0cmluZyAkaWQgICAgICDlupTnlKhJRA0KICAgICAqIEBwYXJhbSBzdHJpbmcgJGRlZmF1bHQg6buY6K6k6K+t6KiADQogICAgICoNCiAgICAgKiBAdGhyb3dzIEV4Y2VwdGlvbg0KICAgICAqDQogICAgICogQHJldHVybiBudWxsDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIExvYWRMYW5ndWFnZSgkdHlwZSwgJGlkLCAkZGVmYXVsdCA9ICcnKQ0KICAgIHsNCiAgICAgICAgJGxhbmd1YWdlUGF0aCA9ICR0aGlzLT5wYXRoOw0KICAgICAgICAkbGFuZ3VhZ2VSZWdFeCA9ICcvXihbMC05QS1aXC1fXSopXC5waHAkL3VpJzsNCiAgICAgICAgJGxhbmd1YWdlTGlzdCA9IGFycmF5KCk7DQogICAgICAgICRsYW5ndWFnZSA9ICcnOw0KICAgICAgICAkZGVmYXVsdCA9IHN0cl9yZXBsYWNlKGFycmF5KCcvJywgJ1xcJyksICcnLCAkZGVmYXVsdCk7DQogICAgICAgICRsYW5ndWFnZVB0ciA9ICYkdGhpcy0+bGFuZzsNCg0KICAgICAgICBpZiAoJGRlZmF1bHQgPT09ICcnKSB7DQogICAgICAgICAgICAkZGVmYXVsdCA9ICR0aGlzLT5vcHRpb25bJ1pDX0JMT0dfTEFOR1VBR0VQQUNLJ107DQogICAgICAgIH0NCg0KICAgICAgICAkZGVmYXVsdExhbmd1YWdlTGlzdCA9IGFycmF5KCRkZWZhdWx0LCAnemgtY24nLCAnemgtdHcnLCAnZW4nKTsNCg0KICAgICAgICBzd2l0Y2ggKCR0eXBlKSB7DQogICAgICAgICAgICBjYXNlICdzeXN0ZW0nOg0KICAgICAgICAgICAgICAgICRsYW5ndWFnZVBhdGggLj0gJ3piX3VzZXJzL2xhbmd1YWdlLyc7DQogICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICBjYXNlICdwbHVnaW4nOg0KICAgICAgICAgICAgY2FzZSAndGhlbWUnOg0KICAgICAgICAgICAgICAgICRsYW5ndWFnZVBhdGggLj0gJ3piX3VzZXJzLycgLiAkdHlwZSAuICcvJyAuICRpZCAuICcvbGFuZ3VhZ2UvJzsNCiAgICAgICAgICAgICAgICAkbGFuZ3VhZ2VQdHIgPSAmJHRoaXMtPmxhbmdbJGlkXTsNCiAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgIGRlZmF1bHQ6DQogICAgICAgICAgICAgICAgJGxhbmd1YWdlUGF0aCAuPSAkdHlwZSAuICcvbGFuZ3VhZ2UvJzsNCiAgICAgICAgICAgICAgICAkbGFuZ3VhZ2VQdHIgPSAmJHRoaXMtPmxhbmdbJGlkXTsNCiAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgfQ0KDQogICAgICAgICRoYW5kbGUgPSBAb3BlbmRpcigkbGFuZ3VhZ2VQYXRoKTsNCiAgICAgICAgJG1hdGNoID0gbnVsbDsNCiAgICAgICAgaWYgKCRoYW5kbGUpIHsNCiAgICAgICAgICAgIHdoaWxlIChmYWxzZSAhPT0gKCRmaWxlID0gcmVhZGRpcigkaGFuZGxlKSkpIHsNCiAgICAgICAgICAgICAgICBpZiAocHJlZ19tYXRjaCgkbGFuZ3VhZ2VSZWdFeCwgJGZpbGUsICRtYXRjaCkpIHsNCiAgICAgICAgICAgICAgICAgICAgJGxhbmd1YWdlTGlzdFtdID0gJG1hdGNoWzFdOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGNsb3NlZGlyKCRoYW5kbGUpOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgLy8g6L+Z6YeM5LiN5Lya5omn6KGM5Yiw77yM5Zyob3BlbmRpcuaXtuWwseW3sue7j+aKm+WHukVfV0FSTklORw0KICAgICAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbignQ2Fubm90IG9wZW5kaXIoJyAuICRsYW5ndWFnZVBhdGggLiAnKScpOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKGNvdW50KCRsYW5ndWFnZUxpc3QpID09PSAwKSB7DQogICAgICAgICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCdObyBsYW5ndWFnZSBpbiAnIC4gJGxhbmd1YWdlUGF0aCk7DQogICAgICAgIH0NCg0KICAgICAgICBmb3IgKCRpID0gMDsgJGkgPCBjb3VudCgkZGVmYXVsdExhbmd1YWdlTGlzdCk7ICRpKyspIHsNCiAgICAgICAgICAgIC8vIOWcqOaViOeOh+S4iu+8jGFycmF5X3NlYXJjaOWSjOWRveWQjeaVsOe7hOayoeacieacrOi0qOWMuuWIq++8jOiHs+WwkeWcqOi/memHjOWmguatpOOAgg0KICAgICAgICAgICAgaWYgKGZhbHNlICE9PSBhcnJheV9zZWFyY2goJGRlZmF1bHRMYW5ndWFnZUxpc3RbJGldLCAkbGFuZ3VhZ2VMaXN0KSkgew0KICAgICAgICAgICAgICAgICRsYW5ndWFnZSA9ICRkZWZhdWx0TGFuZ3VhZ2VMaXN0WyRpXTsNCiAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICBpZiAoJGxhbmd1YWdlID09PSAnJykgew0KICAgICAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbignTGFuZ3VhZ2UgJyAuICRkZWZhdWx0IC4gJyBpcyBub3QgZm91bmQgaW4gJyAuICRsYW5ndWFnZVBhdGgpOw0KICAgICAgICB9DQoNCiAgICAgICAgJGxhbmd1YWdlUGF0aCAuPSAkbGFuZ3VhZ2UgLiAnLnBocCc7DQogICAgICAgICRsYW5ndWFnZVB0ciA9IHJlcXVpcmUgJGxhbmd1YWdlUGF0aDsNCiAgICAgICAgJHRoaXMtPmxhbmdwYWNrbGlzdFtdID0gYXJyYXkoJHR5cGUsICRpZCwgJGxhbmd1YWdlKTsNCg0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDph43mlrDor7vlj5bor63oqIDljIUuDQogICAgICoNCiAgICAgKiBAdGhyb3dzIEV4Y2VwdGlvbg0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBSZWxvYWRMYW5ndWFnZXMoKQ0KICAgIHsNCiAgICAgICAgJGFycmF5ID0gJHRoaXMtPmxhbmdwYWNrbGlzdDsNCiAgICAgICAgJHRoaXMtPmxhbmcgPSAkdGhpcy0+bGFuZ3BhY2tsaXN0ID0gYXJyYXkoKTsNCiAgICAgICAgZm9yZWFjaCAoJGFycmF5IGFzICR2KSB7DQogICAgICAgICAgICAkdGhpcy0+TG9hZExhbmd1YWdlKCR2WzBdLCAkdlsxXSwgJHZbMl0pOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5Yib5bu65qih5p2/5a+56LGh77yM6aKE5Yqg6L295bey57yW6K+R5qih5p2/DQogICAgICoNCiAgICAgKiBAcGFyYW0gc3RyaW5nICR0aGVtZSDmjIflrprkuLvpopjlkI0NCiAgICAgKg0KICAgICAqIEByZXR1cm4gVGVtcGxhdGUNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gUHJlcGFyZVRlbXBsYXRlKCR0aGVtZSA9IG51bGwpDQogICAgew0KICAgICAgICBpZiAoaXNfbnVsbCgkdGhlbWUpKSB7DQogICAgICAgICAgICAkdGhlbWUgPSAmJHRoaXMtPnRoZW1lOw0KICAgICAgICB9DQoNCiAgICAgICAgJHRlbXBsYXRlID0gbmV3IFRlbXBsYXRlKCk7DQogICAgICAgICR0ZW1wbGF0ZS0+TWFrZVRlbXBsYXRlVGFncygpOw0KDQogICAgICAgIGZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX1picF9NYWtlVGVtcGxhdGV0YWdzJ10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICAgICAkZnBuYW1lKCR0ZW1wbGF0ZS0+dGVtcGxhdGVUYWdzKTsNCiAgICAgICAgfQ0KDQogICAgICAgICR0ZW1wbGF0ZS0+U2V0UGF0aCgkdGhpcy0+dXNlcnNkaXIgLiAnY2FjaGUvY29tcGlsZWQvJyAuICR0aGVtZSAuICcvJyk7DQogICAgICAgICR0ZW1wbGF0ZS0+dGhlbWUgPSAkdGhlbWU7DQoNCiAgICAgICAgcmV0dXJuICR0ZW1wbGF0ZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmqKHmnb/op6PmnpAuDQogICAgICoNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gQnVpbGRUZW1wbGF0ZSgpDQogICAgew0KICAgICAgICAkdGhpcy0+dGVtcGxhdGUtPkxvYWRUZW1wbGF0ZXMoKTsNCg0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9aYnBfQnVpbGRUZW1wbGF0ZSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgJGZwbmFtZSgkdGhpcy0+dGVtcGxhdGUtPnRlbXBsYXRlcyk7DQogICAgICAgIH0NCg0KICAgICAgICByZXR1cm4gJHRoaXMtPnRlbXBsYXRlLT5CdWlsZFRlbXBsYXRlKCk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5pu05paw5qih5p2/57yT5a2YLg0KICAgICAqDQogICAgICogQHBhcmFtIGJvb2wgJG9ubHljaGVjayAg5Li655yf55qE6K+d77yM5Y+q5Yik5pat5piv5ZCm6ZyA6KaB6ICM5LiNQnVpbGQNCiAgICAgKiBAcGFyYW0gYm9vbCAkZm9yY2VidWlsZA0KICAgICAqDQogICAgICogQHJldHVybiB0cnVlIG9yIGZhbHNlDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIENoZWNrVGVtcGxhdGUoJG9ubHljaGVjayA9IGZhbHNlLCAkZm9yY2VidWlsZCA9IGZhbHNlKQ0KICAgIHsNCiAgICAgICAgJHRoaXMtPnRlbXBsYXRlLT5Mb2FkVGVtcGxhdGVzKCk7DQogICAgICAgICRzID0gaW1wbG9kZSgkdGhpcy0+dGVtcGxhdGUtPnRlbXBsYXRlcyk7DQogICAgICAgICRtZDUgPSBtZDUoJHMpOw0KDQogICAgICAgIGlmICgkbWQ1ICE9ICR0aGlzLT5jYWNoZS0+dGVtcGxhdGVzX21kNSkgew0KICAgICAgICAgICAgaWYgKCRvbmx5Y2hlY2sgPT0gdHJ1ZSAmJiAkZm9yY2VidWlsZCA9PSBmYWxzZSkgew0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgICR0aGlzLT5CdWlsZFRlbXBsYXRlKCk7DQogICAgICAgICAgICAkdGhpcy0+Y2FjaGUtPnRlbXBsYXRlc19tZDUgPSAkbWQ1Ow0KICAgICAgICAgICAgJHRoaXMtPlNhdmVDYWNoZSgpOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgaWYgKCRmb3JjZWJ1aWxkID09IHRydWUpIHsNCiAgICAgICAgICAgICAgICAkdGhpcy0+QnVpbGRUZW1wbGF0ZSgpOw0KICAgICAgICAgICAgICAgICR0aGlzLT5jYWNoZS0+dGVtcGxhdGVzX21kNSA9ICRtZDU7DQogICAgICAgICAgICAgICAgJHRoaXMtPlNhdmVDYWNoZSgpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog55Sf5oiQ5qih5Z2XLg0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBCdWlsZE1vZHVsZSgpDQogICAgew0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9aYnBfQnVpbGRNb2R1bGUnXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAgICAgICAgICRmcG5hbWUoKTsNCiAgICAgICAgfQ0KICAgICAgICBNb2R1bGVCdWlsZGVyOjpCdWlsZCgpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOmHjeW7uuaooeWdly4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJG1vZHVsZUZpbGVOYW1lIOaooeWdl+WQjQ0KICAgICAqIEBwYXJhbSBzdHJpbmcgJG1vZHVsZUZ1bmN0aW9uIOeUqOaIt+WHveaVsA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBSZWdCdWlsZE1vZHVsZSgkbW9kdWxlRmlsZU5hbWUsICRtb2R1bGVGdW5jdGlvbikNCiAgICB7DQogICAgICAgIE1vZHVsZUJ1aWxkZXI6OlJlZygkbW9kdWxlRmlsZU5hbWUsICRtb2R1bGVGdW5jdGlvbik7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5re75Yqg5qih5Z2XLg0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAkbW9kdWxlRmlsZU5hbWUg5qih5Z2X5ZCNDQogICAgICogQHBhcmFtIG51bGwgICAkcGFyYW1ldGVycyAgICAg5qih5Z2X5Y+C5pWwDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEFkZEJ1aWxkTW9kdWxlKCRtb2R1bGVGaWxlTmFtZSwgJHBhcmFtZXRlcnMgPSBudWxsKQ0KICAgIHsNCiAgICAgICAgTW9kdWxlQnVpbGRlcjo6QWRkKCRtb2R1bGVGaWxlTmFtZSwgJHBhcmFtZXRlcnMpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOWIoOmZpOaooeWdly4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJG1vZHVsZUZpbGVOYW1lIOaooeWdl+WQjQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBEZWxCdWlsZE1vZHVsZSgkbW9kdWxlRmlsZU5hbWUpDQogICAgew0KICAgICAgICBNb2R1bGVCdWlsZGVyOjpEZWwoJG1vZHVsZUZpbGVOYW1lKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmn6Xor6LmjIflrprmlbDmja7nu5PmnoTnmoRzcWzlubbov5Tlm55CYXNl5a+56LGh5YiX6KGoLg0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZ3xhcnJheSAkdGFibGUgICAg5pWw5o2u6KGoDQogICAgICogQHBhcmFtIGFycmF5ICAgICAgICAkZGF0YWluZm8g5pWw5o2u5a2X5q61DQogICAgICogQHBhcmFtIHN0cmluZyAgICAgICAkc3FsICAgICAgU1FM5pON5L2c6K+t5Y+lDQogICAgICoNCiAgICAgKiBAcmV0dXJuIGFycmF5DQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEdldExpc3RDdXN0b20oJHRhYmxlLCAkZGF0YWluZm8sICRzcWwpDQogICAgew0KICAgICAgICAkYXJyYXkgPSBudWxsOw0KICAgICAgICAkbGlzdCA9IGFycmF5KCk7DQogICAgICAgICRhcnJheSA9ICR0aGlzLT5kYi0+UXVlcnkoJHNxbCk7DQogICAgICAgIGlmICghaXNzZXQoJGFycmF5KSkgew0KICAgICAgICAgICAgcmV0dXJuIGFycmF5KCk7DQogICAgICAgIH0NCiAgICAgICAgZm9yZWFjaCAoJGFycmF5IGFzICRhKSB7DQogICAgICAgICAgICAkbCA9IG5ldyBCYXNlKCR0YWJsZSwgJGRhdGFpbmZvKTsNCiAgICAgICAgICAgICRsLT5Mb2FkSW5mb0J5QXNzb2MoJGEpOw0KICAgICAgICAgICAgJGxpc3RbXSA9ICRsOw0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuICRsaXN0Ow0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOafpeivoklE5pWw5o2u55qE5oyH5a6a5pWw5o2u57uT5p6E55qEc3Fs5bm26L+U5ZueQmFzZeWvueixoeWIl+ihqC4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmd8YXJyYXkgJHRhYmxlICAgIOaVsOaNruihqA0KICAgICAqIEBwYXJhbSBhcnJheSAgICAgICAgJGRhdGFpbmZvIOaVsOaNruWtl+autQ0KICAgICAqIEBwYXJhbSBhcnJheSAgICAgICAgJGFycmF5ICAgIElE5pWw57uEDQogICAgICoNCiAgICAgKiBAcmV0dXJuIEJhc2VbXQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBHZXRMaXN0Q3VzdG9tQnlBcnJheSgkdGFibGUsICRkYXRhaW5mbywgJGFycmF5KQ0KICAgIHsNCiAgICAgICAgaWYgKCFpc19hcnJheSgkYXJyYXkpKSB7DQogICAgICAgICAgICByZXR1cm4gYXJyYXkoKTsNCiAgICAgICAgfQ0KDQogICAgICAgIGlmIChjb3VudCgkYXJyYXkpID09IDApIHsNCiAgICAgICAgICAgIHJldHVybiBhcnJheSgpOw0KICAgICAgICB9DQoNCiAgICAgICAgJHdoZXJlID0gYXJyYXkoKTsNCiAgICAgICAgJHdoZXJlW10gPSBhcnJheSgnSU4nLCAkZGF0YWluZm9bJ0lEJ11bMF0sIGltcGxvZGUoJywnLCAkYXJyYXkpKTsNCiAgICAgICAgJHNxbCA9ICR0aGlzLT5kYi0+c3FsLT5TZWxlY3QoJHRhYmxlLCAnKicsICR3aGVyZSk7DQogICAgICAgICRhcnJheSA9IG51bGw7DQogICAgICAgICRsaXN0ID0gYXJyYXkoKTsNCiAgICAgICAgJGFycmF5ID0gJHRoaXMtPmRiLT5RdWVyeSgkc3FsKTsNCiAgICAgICAgaWYgKCFpc3NldCgkYXJyYXkpKSB7DQogICAgICAgICAgICByZXR1cm4gYXJyYXkoKTsNCiAgICAgICAgfQ0KICAgICAgICBmb3JlYWNoICgkYXJyYXkgYXMgJGEpIHsNCiAgICAgICAgICAgICRsID0gbmV3IEJhc2UoJHRhYmxlLCAkZGF0YWluZm8pOw0KICAgICAgICAgICAgJGwtPkxvYWRJbmZvQnlBc3NvYygkYSk7DQogICAgICAgICAgICAkbGlzdFtdID0gJGw7DQogICAgICAgIH0NCg0KICAgICAgICByZXR1cm4gJGxpc3Q7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5bey5pS55ZCNR2V0TGlzdFR5cGUsMS4154mI5Lit5omU5o6J5pyJ5q2n5LmJ55qER2V0TGlzdC4NCiAgICAgKg0KICAgICAqIEBwYXJhbSAkdHlwZQ0KICAgICAqIEBwYXJhbSAkc3FsDQogICAgICoNCiAgICAgKiBAcmV0dXJuIEJhc2VbXQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBHZXRMaXN0VHlwZSgkdHlwZSwgJHNxbCkNCiAgICB7DQogICAgICAgICRhcnJheSA9IG51bGw7DQogICAgICAgICRsaXN0ID0gYXJyYXkoKTsNCiAgICAgICAgJGFycmF5ID0gJHRoaXMtPmRiLT5RdWVyeSgkc3FsKTsNCiAgICAgICAgaWYgKCFpc3NldCgkYXJyYXkpKSB7DQogICAgICAgICAgICByZXR1cm4gYXJyYXkoKTsNCiAgICAgICAgfQ0KICAgICAgICBmb3JlYWNoICgkYXJyYXkgYXMgJGEpIHsNCiAgICAgICAgICAgIC8qKiBAdmFyIEJhc2UgJGwgKi8NCiAgICAgICAgICAgICRsID0gbmV3ICR0eXBlKCk7DQogICAgICAgICAgICAkbC0+TG9hZEluZm9CeUFzc29jKCRhKTsNCiAgICAgICAgICAgICRsaXN0W10gPSAkbDsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiAkbGlzdDsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmn6Xor6JJROaVsOaNrueahOaMh+Wumuexu+Wei+eahHNxbOW5tui/lOWbnuaMh+Wumuexu+Wei+WvueixoeWIl+ihqC4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJHR5cGUgIOexu+Weiw0KICAgICAqIEBwYXJhbSBtaXhlZCAgJGFycmF5IElE5pWw57uEDQogICAgICoNCiAgICAgKiBAcmV0dXJuIEJhc2VbXQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBHZXRMaXN0VHlwZUJ5QXJyYXkoJHR5cGUsICRhcnJheSkNCiAgICB7DQogICAgICAgIGlmICghaXNfYXJyYXkoJGFycmF5KSkgew0KICAgICAgICAgICAgcmV0dXJuIGFycmF5KCk7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoY291bnQoJGFycmF5KSA9PSAwKSB7DQogICAgICAgICAgICByZXR1cm4gYXJyYXkoKTsNCiAgICAgICAgfQ0KDQogICAgICAgICR3aGVyZSA9IGFycmF5KCk7DQogICAgICAgICR3aGVyZVtdID0gYXJyYXkoJ0lOJywgJHRoaXMtPmRhdGFpbmZvWyR0eXBlXVsnSUQnXVswXSwgaW1wbG9kZSgnLCcsICRhcnJheSkpOw0KICAgICAgICAkc3FsID0gJHRoaXMtPmRiLT5zcWwtPlNlbGVjdCgkdGhpcy0+dGFibGVbJHR5cGVdLCAnKicsICR3aGVyZSk7DQogICAgICAgICRhcnJheSA9IG51bGw7DQogICAgICAgICRsaXN0ID0gYXJyYXkoKTsNCiAgICAgICAgJGFycmF5ID0gJHRoaXMtPmRiLT5RdWVyeSgkc3FsKTsNCiAgICAgICAgaWYgKCFpc3NldCgkYXJyYXkpKSB7DQogICAgICAgICAgICByZXR1cm4gYXJyYXkoKTsNCiAgICAgICAgfQ0KICAgICAgICBmb3JlYWNoICgkYXJyYXkgYXMgJGEpIHsNCiAgICAgICAgICAgIC8qKiBAdmFyIEJhc2UgJGwgKi8NCiAgICAgICAgICAgICRsID0gbmV3ICR0eXBlKCk7DQogICAgICAgICAgICAkbC0+TG9hZEluZm9CeUFzc29jKCRhKTsNCiAgICAgICAgICAgICRsaXN0W10gPSAkbDsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiAkbGlzdDsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gbWl4ZWQgJHNlbGVjdA0KICAgICAqIEBwYXJhbSBtaXhlZCAkd2hlcmUNCiAgICAgKiBAcGFyYW0gbWl4ZWQgJG9yZGVyDQogICAgICogQHBhcmFtIG1peGVkICRsaW1pdA0KICAgICAqIEBwYXJhbSBtaXhlZCAkb3B0aW9uDQogICAgICoNCiAgICAgKiBAcmV0dXJuIFBvc3RbXQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBHZXRQb3N0TGlzdCgkc2VsZWN0ID0gbnVsbCwgJHdoZXJlID0gbnVsbCwgJG9yZGVyID0gbnVsbCwgJGxpbWl0ID0gbnVsbCwgJG9wdGlvbiA9IG51bGwpDQogICAgew0KICAgICAgICBpZiAoZW1wdHkoJHNlbGVjdCkpIHsNCiAgICAgICAgICAgICRzZWxlY3QgPSBhcnJheSgnKicpOw0KICAgICAgICB9DQogICAgICAgIGlmIChlbXB0eSgkd2hlcmUpKSB7DQogICAgICAgICAgICAkd2hlcmUgPSBhcnJheSgpOw0KICAgICAgICB9DQogICAgICAgICRzcWwgPSAkdGhpcy0+ZGItPnNxbC0+U2VsZWN0KCR0aGlzLT50YWJsZVsnUG9zdCddLCAkc2VsZWN0LCAkd2hlcmUsICRvcmRlciwgJGxpbWl0LCAkb3B0aW9uKTsNCg0KICAgICAgICAvKiogQHZhciBQb3N0W10gJGFycmF5ICovDQogICAgICAgICRhcnJheSA9ICR0aGlzLT5HZXRMaXN0VHlwZSgnUG9zdCcsICRzcWwpOw0KICAgICAgICBmb3JlYWNoICgkYXJyYXkgYXMgJGEpIHsNCiAgICAgICAgICAgICR0aGlzLT5wb3N0c1skYS0+SURdID0gJGE7DQogICAgICAgIH0NCg0KICAgICAgICByZXR1cm4gJGFycmF5Ow0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOmAmui/h0lE5pWw57uE6I635Y+W5paH56ug5a6e5L6LLg0KICAgICAqDQogICAgICogQHBhcmFtIG1peGVkW10gJGFycmF5DQogICAgICoNCiAgICAgKiBAcmV0dXJuIFBvc3RbXXxCYXNlW10gUG9zdHMNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gR2V0UG9zdEJ5QXJyYXkoJGFycmF5KQ0KICAgIHsNCiAgICAgICAgcmV0dXJuICR0aGlzLT5HZXRMaXN0VHlwZUJ5QXJyYXkoJ1Bvc3QnLCAkYXJyYXkpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSBtaXhlZCAkc2VsZWN0DQogICAgICogQHBhcmFtIG1peGVkICR3aGVyZQ0KICAgICAqIEBwYXJhbSBtaXhlZCAkb3JkZXINCiAgICAgKiBAcGFyYW0gbWl4ZWQgJGxpbWl0DQogICAgICogQHBhcmFtIG1peGVkICRvcHRpb24NCiAgICAgKiBAcGFyYW0gbWl4ZWQgJHJlYWR0YWdzDQogICAgICoNCiAgICAgKiBAcmV0dXJuIFBvc3RbXQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBHZXRBcnRpY2xlTGlzdCgkc2VsZWN0ID0gbnVsbCwgJHdoZXJlID0gbnVsbCwgJG9yZGVyID0gbnVsbCwgJGxpbWl0ID0gbnVsbCwgJG9wdGlvbiA9IG51bGwsICRyZWFkdGFncyA9IHRydWUpDQogICAgew0KICAgICAgICBpZiAoZW1wdHkoJHNlbGVjdCkpIHsNCiAgICAgICAgICAgICRzZWxlY3QgPSBhcnJheSgnKicpOw0KICAgICAgICB9DQogICAgICAgIGlmIChlbXB0eSgkd2hlcmUpKSB7DQogICAgICAgICAgICAkd2hlcmUgPSBhcnJheSgpOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKGlzX2FycmF5KCR3aGVyZSkpIHsNCiAgICAgICAgICAgICRoYXNUeXBlID0gZmFsc2U7DQogICAgICAgICAgICBmb3JlYWNoICgkd2hlcmUgYXMgJGtleSA9PiAkdmFsdWUpIHsNCiAgICAgICAgICAgICAgICBpZiAoaXNfYXJyYXkoJHZhbHVlKSkgew0KICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkdmFsdWUgYXMgJGtleTIgPT4gJHZhbHVlMikgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRrZXkyID09IDEgJiYgJHZhbHVlMiA9PSAnbG9nX1R5cGUnKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGhhc1R5cGUgPSB0cnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgaWYgKCEkaGFzVHlwZSkgew0KICAgICAgICAgICAgICAgIGFycmF5X3Vuc2hpZnQoJHdoZXJlLCBhcnJheSgnPScsICdsb2dfVHlwZScsICcwJykpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgJHNxbCA9ICR0aGlzLT5kYi0+c3FsLT5TZWxlY3QoJHRoaXMtPnRhYmxlWydQb3N0J10sICRzZWxlY3QsICR3aGVyZSwgJG9yZGVyLCAkbGltaXQsICRvcHRpb24pOw0KDQogICAgICAgIC8qKiBAdmFyIFBvc3RbXSAkYXJyYXkgKi8NCiAgICAgICAgJGFycmF5ID0gJHRoaXMtPkdldExpc3RUeXBlKCdQb3N0JywgJHNxbCk7DQoNCiAgICAgICAgZm9yZWFjaCAoJGFycmF5IGFzICRhKSB7DQogICAgICAgICAgICAkdGhpcy0+cG9zdHNbJGEtPklEXSA9ICRhOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKCRyZWFkdGFncykgew0KICAgICAgICAgICAgJHRhZ3N0cmluZyA9ICcnOw0KICAgICAgICAgICAgZm9yZWFjaCAoJGFycmF5IGFzICRhKSB7DQogICAgICAgICAgICAgICAgJHRhZ3N0cmluZyAuPSAkYS0+VGFnOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgJHRoaXMtPkxvYWRUYWdzQnlJRFN0cmluZygkdGFnc3RyaW5nKTsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiAkYXJyYXk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtIG1peGVkICRzZWxlY3QNCiAgICAgKiBAcGFyYW0gbWl4ZWQgJHdoZXJlDQogICAgICogQHBhcmFtIG1peGVkICRvcmRlcg0KICAgICAqIEBwYXJhbSBtaXhlZCAkbGltaXQNCiAgICAgKiBAcGFyYW0gbWl4ZWQgJG9wdGlvbg0KICAgICAqDQogICAgICogQHJldHVybiBQb3N0W10NCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gR2V0UGFnZUxpc3QoJHNlbGVjdCA9IG51bGwsICR3aGVyZSA9IG51bGwsICRvcmRlciA9IG51bGwsICRsaW1pdCA9IG51bGwsICRvcHRpb24gPSBudWxsKQ0KICAgIHsNCiAgICAgICAgaWYgKGVtcHR5KCRzZWxlY3QpKSB7DQogICAgICAgICAgICAkc2VsZWN0ID0gYXJyYXkoJyonKTsNCiAgICAgICAgfQ0KICAgICAgICBpZiAoZW1wdHkoJHdoZXJlKSkgew0KICAgICAgICAgICAgJHdoZXJlID0gYXJyYXkoKTsNCiAgICAgICAgfQ0KICAgICAgICBpZiAoaXNfYXJyYXkoJHdoZXJlKSkgew0KICAgICAgICAgICAgYXJyYXlfdW5zaGlmdCgkd2hlcmUsIGFycmF5KCc9JywgJ2xvZ19UeXBlJywgJzEnKSk7DQogICAgICAgIH0NCg0KICAgICAgICAkc3FsID0gJHRoaXMtPmRiLT5zcWwtPlNlbGVjdCgkdGhpcy0+dGFibGVbJ1Bvc3QnXSwgJHNlbGVjdCwgJHdoZXJlLCAkb3JkZXIsICRsaW1pdCwgJG9wdGlvbik7DQogICAgICAgIC8qKiBAdmFyIFBvc3RbXSAkYXJyYXkgKi8NCiAgICAgICAgJGFycmF5ID0gJHRoaXMtPkdldExpc3RUeXBlKCdQb3N0JywgJHNxbCk7DQogICAgICAgIGZvcmVhY2ggKCRhcnJheSBhcyAkYSkgew0KICAgICAgICAgICAgJHRoaXMtPnBvc3RzWyRhLT5JRF0gPSAkYTsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiAkYXJyYXk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtIG1peGVkICRzZWxlY3QNCiAgICAgKiBAcGFyYW0gbWl4ZWQgJHdoZXJlDQogICAgICogQHBhcmFtIG1peGVkICRvcmRlcg0KICAgICAqIEBwYXJhbSBtaXhlZCAkbGltaXQNCiAgICAgKiBAcGFyYW0gbWl4ZWQgJG9wdGlvbg0KICAgICAqDQogICAgICogQHJldHVybiBDb21tZW50W10NCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gR2V0Q29tbWVudExpc3QoJHNlbGVjdCA9IG51bGwsICR3aGVyZSA9IG51bGwsICRvcmRlciA9IG51bGwsICRsaW1pdCA9IG51bGwsICRvcHRpb24gPSBudWxsKQ0KICAgIHsNCiAgICAgICAgaWYgKGVtcHR5KCRzZWxlY3QpKSB7DQogICAgICAgICAgICAkc2VsZWN0ID0gYXJyYXkoJyonKTsNCiAgICAgICAgfQ0KICAgICAgICAkc3FsID0gJHRoaXMtPmRiLT5zcWwtPlNlbGVjdCgkdGhpcy0+dGFibGVbJ0NvbW1lbnQnXSwgJHNlbGVjdCwgJHdoZXJlLCAkb3JkZXIsICRsaW1pdCwgJG9wdGlvbik7DQogICAgICAgIC8qKiBAdmFyIENvbW1lbnRbXSAkYXJyYXkgKi8NCiAgICAgICAgJGFycmF5ID0gJHRoaXMtPkdldExpc3RUeXBlKCdDb21tZW50JywgJHNxbCk7DQogICAgICAgIGZvcmVhY2ggKCRhcnJheSBhcyAkY29tbWVudCkgew0KICAgICAgICAgICAgJHRoaXMtPmNvbW1lbnRzWyRjb21tZW50LT5JRF0gPSAkY29tbWVudDsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiAkYXJyYXk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtIG1peGVkICRzZWxlY3QNCiAgICAgKiBAcGFyYW0gbWl4ZWQgJHdoZXJlDQogICAgICogQHBhcmFtIG1peGVkICRvcmRlcg0KICAgICAqIEBwYXJhbSBtaXhlZCAkbGltaXQNCiAgICAgKiBAcGFyYW0gbWl4ZWQgJG9wdGlvbg0KICAgICAqDQogICAgICogQHJldHVybiBNZW1iZXJbXXxCYXNlW10NCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gR2V0TWVtYmVyTGlzdCgkc2VsZWN0ID0gbnVsbCwgJHdoZXJlID0gbnVsbCwgJG9yZGVyID0gbnVsbCwgJGxpbWl0ID0gbnVsbCwgJG9wdGlvbiA9IG51bGwpDQogICAgew0KICAgICAgICBpZiAoZW1wdHkoJHNlbGVjdCkpIHsNCiAgICAgICAgICAgICRzZWxlY3QgPSBhcnJheSgnKicpOw0KICAgICAgICB9DQogICAgICAgICRzcWwgPSAkdGhpcy0+ZGItPnNxbC0+U2VsZWN0KCR0aGlzLT50YWJsZVsnTWVtYmVyJ10sICRzZWxlY3QsICR3aGVyZSwgJG9yZGVyLCAkbGltaXQsICRvcHRpb24pOw0KDQogICAgICAgIHJldHVybiAkdGhpcy0+R2V0TGlzdFR5cGUoJ01lbWJlcicsICRzcWwpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSBtaXhlZCAkc2VsZWN0DQogICAgICogQHBhcmFtIG1peGVkICR3aGVyZQ0KICAgICAqIEBwYXJhbSBtaXhlZCAkb3JkZXINCiAgICAgKiBAcGFyYW0gbWl4ZWQgJGxpbWl0DQogICAgICogQHBhcmFtIG1peGVkICRvcHRpb24NCiAgICAgKg0KICAgICAqIEByZXR1cm4gVGFnW118QmFzZVtdDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEdldFRhZ0xpc3QoJHNlbGVjdCA9IG51bGwsICR3aGVyZSA9IG51bGwsICRvcmRlciA9IG51bGwsICRsaW1pdCA9IG51bGwsICRvcHRpb24gPSBudWxsKQ0KICAgIHsNCiAgICAgICAgaWYgKGVtcHR5KCRzZWxlY3QpKSB7DQogICAgICAgICAgICAkc2VsZWN0ID0gYXJyYXkoJyonKTsNCiAgICAgICAgfQ0KICAgICAgICAkc3FsID0gJHRoaXMtPmRiLT5zcWwtPlNlbGVjdCgkdGhpcy0+dGFibGVbJ1RhZyddLCAkc2VsZWN0LCAkd2hlcmUsICRvcmRlciwgJGxpbWl0LCAkb3B0aW9uKTsNCg0KICAgICAgICByZXR1cm4gJHRoaXMtPkdldExpc3RUeXBlKCdUYWcnLCAkc3FsKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gbWl4ZWQgJHNlbGVjdA0KICAgICAqIEBwYXJhbSBtaXhlZCAkd2hlcmUNCiAgICAgKiBAcGFyYW0gbWl4ZWQgJG9yZGVyDQogICAgICogQHBhcmFtIG1peGVkICRsaW1pdA0KICAgICAqIEBwYXJhbSBtaXhlZCAkb3B0aW9uDQogICAgICoNCiAgICAgKiBAcmV0dXJuIENhdGVnb3J5W118QmFzZVtdDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEdldENhdGVnb3J5TGlzdCgkc2VsZWN0ID0gbnVsbCwgJHdoZXJlID0gbnVsbCwgJG9yZGVyID0gbnVsbCwgJGxpbWl0ID0gbnVsbCwgJG9wdGlvbiA9IG51bGwpDQogICAgew0KICAgICAgICBpZiAoZW1wdHkoJHNlbGVjdCkpIHsNCiAgICAgICAgICAgICRzZWxlY3QgPSBhcnJheSgnKicpOw0KICAgICAgICB9DQogICAgICAgICRzcWwgPSAkdGhpcy0+ZGItPnNxbC0+U2VsZWN0KCR0aGlzLT50YWJsZVsnQ2F0ZWdvcnknXSwgJHNlbGVjdCwgJHdoZXJlLCAkb3JkZXIsICRsaW1pdCwgJG9wdGlvbik7DQoNCiAgICAgICAgcmV0dXJuICR0aGlzLT5HZXRMaXN0VHlwZSgnQ2F0ZWdvcnknLCAkc3FsKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gbWl4ZWQgJHNlbGVjdA0KICAgICAqIEBwYXJhbSBtaXhlZCAkd2hlcmUNCiAgICAgKiBAcGFyYW0gbWl4ZWQgJG9yZGVyDQogICAgICogQHBhcmFtIG1peGVkICRsaW1pdA0KICAgICAqIEBwYXJhbSBtaXhlZCAkb3B0aW9uDQogICAgICoNCiAgICAgKiBAcmV0dXJuIE1vZHVsZVtdfEJhc2VbXQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBHZXRNb2R1bGVMaXN0KCRzZWxlY3QgPSBudWxsLCAkd2hlcmUgPSBudWxsLCAkb3JkZXIgPSBudWxsLCAkbGltaXQgPSBudWxsLCAkb3B0aW9uID0gbnVsbCkNCiAgICB7DQogICAgICAgIGlmIChlbXB0eSgkc2VsZWN0KSkgew0KICAgICAgICAgICAgJHNlbGVjdCA9IGFycmF5KCcqJyk7DQogICAgICAgIH0NCiAgICAgICAgJHNxbCA9ICR0aGlzLT5kYi0+c3FsLT5TZWxlY3QoJHRoaXMtPnRhYmxlWydNb2R1bGUnXSwgJHNlbGVjdCwgJHdoZXJlLCAkb3JkZXIsICRsaW1pdCwgJG9wdGlvbik7DQoNCiAgICAgICAgcmV0dXJuICR0aGlzLT5HZXRMaXN0VHlwZSgnTW9kdWxlJywgJHNxbCk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtIG1peGVkICRzZWxlY3QNCiAgICAgKiBAcGFyYW0gbWl4ZWQgJHdoZXJlDQogICAgICogQHBhcmFtIG1peGVkICRvcmRlcg0KICAgICAqIEBwYXJhbSBtaXhlZCAkbGltaXQNCiAgICAgKiBAcGFyYW0gbWl4ZWQgJG9wdGlvbg0KICAgICAqDQogICAgICogQHJldHVybiBVcGxvYWRbXXxCYXNlW10NCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gR2V0VXBsb2FkTGlzdCgkc2VsZWN0ID0gbnVsbCwgJHdoZXJlID0gbnVsbCwgJG9yZGVyID0gbnVsbCwgJGxpbWl0ID0gbnVsbCwgJG9wdGlvbiA9IG51bGwpDQogICAgew0KICAgICAgICBpZiAoZW1wdHkoJHNlbGVjdCkpIHsNCiAgICAgICAgICAgICRzZWxlY3QgPSBhcnJheSgnKicpOw0KICAgICAgICB9DQogICAgICAgICRzcWwgPSAkdGhpcy0+ZGItPnNxbC0+U2VsZWN0KCR0aGlzLT50YWJsZVsnVXBsb2FkJ10sICRzZWxlY3QsICR3aGVyZSwgJG9yZGVyLCAkbGltaXQsICRvcHRpb24pOw0KDQogICAgICAgIHJldHVybiAkdGhpcy0+R2V0TGlzdFR5cGUoJ1VwbG9hZCcsICRzcWwpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkc3FsDQogICAgICoNCiAgICAgKiBAcmV0dXJuIG1peGVkDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIGdldF9yZXN1bHRzKCRzcWwpDQogICAgew0KICAgICAgICByZXR1cm4gJHRoaXMtPmRiLT5RdWVyeSgkc3FsKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmoLnmja7liKvlkI3lvpfliLDnm7jlupTmlbDmja4uDQogICAgICoNCiAgICAgKiBAcGFyYW0gQmFzZVtdfHN0cmluZyAmJG9iamVjdCAgIOe8k+WtmOWvueixoQ0KICAgICAqIEBwYXJhbSBzdHJpbmcgICAgICAgICR2YWwNCiAgICAgKiBAcGFyYW0gc3RyaW5nICAgICAgICAkYmFja0F0dHINCiAgICAgKiBAcGFyYW0gc3RyaW5nICAgICAgICAkY2xhc3NOYW1lDQogICAgICoNCiAgICAgKiBAcmV0dXJuIEJhc2V8bnVsbA0KICAgICAqLw0KICAgIHByaXZhdGUgZnVuY3Rpb24gR2V0U29tZVRoaW5nQnlBbGlhcygkb2JqZWN0LCAkdmFsLCAkYmFja0F0dHIgPSBudWxsLCAkY2xhc3NOYW1lID0gbnVsbCkNCiAgICB7DQogICAgICAgICRyZXQgPSAkdGhpcy0+R2V0U29tZVRoaW5nKCRvYmplY3QsICdBbGlhcycsICR2YWwpOw0KDQogICAgICAgIGlmICghaXNfbnVsbCgkcmV0KSkgew0KICAgICAgICAgICAgcmV0dXJuICRyZXQ7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICBpZiAoaXNfbnVsbCgkYmFja0F0dHIpKSB7DQogICAgICAgICAgICAgICAgJGJhY2tBdHRyID0gJHRoaXMtPm9wdGlvblsnWkNfQUxJQVNfQkFDS19BVFRSJ107DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiAkdGhpcy0+R2V0U29tZVRoaW5nKCRvYmplY3QsICRiYWNrQXR0ciwgJHZhbCwgJGNsYXNzTmFtZSk7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmoLnmja5JROW+l+WIsOebuOW6lOaVsOaNri4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBCYXNlW10gICAgICYkb2JqZWN0ICAg57yT5a2Y5a+56LGhDQogICAgICogQHBhcmFtIHN0cmluZyAgICAgJGNsYXNzTmFtZSDmib7kuI3liLBJROaXtuWIneWni+WMluWvueixoeeahOexu+WQjQ0KICAgICAqIEBwYXJhbSBpbnR8c3RyaW5nICRpZCAgICAgICAg5LiO5q2k57G755u45YWz55qESUQNCiAgICAgKg0KICAgICAqIEByZXR1cm4gQmFzZXxudWxsDQogICAgICovDQogICAgcHJpdmF0ZSBmdW5jdGlvbiBHZXRTb21lVGhpbmdCeUlkKCYkb2JqZWN0LCAkY2xhc3NOYW1lLCAkaWQpDQogICAgew0KICAgICAgICBpZiAoJGlkID09IDApIHsNCiAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgfQ0KICAgICAgICBpZiAoJG9iamVjdCAhPSBudWxsKSB7DQogICAgICAgICAgICAvLyRtb2R1bGVz6Z2eSUTkuLprZXkNCiAgICAgICAgICAgIGlmICgkY2xhc3NOYW1lID09ICJNb2R1bGUiKSB7DQogICAgICAgICAgICAgICAgaWYgKCRpZCA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJG9iamVjdCBhcyAka2V5ID0+ICR2YWx1ZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCR2YWx1ZS0+SUQgPT0gJGlkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICR2YWx1ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAkbSA9IG5ldyBNb2R1bGUoKTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiAkbTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgaWYgKGlzc2V0KCRvYmplY3RbJGlkXSkpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gJG9iamVjdFskaWRdOw0KICAgICAgICAgICAgfSBlbHNlaWYgKCRjbGFzc05hbWUgPT0gIlBvc3QiIHx8ICRjbGFzc05hbWUgPT0gIkNvbW1lbnQiIHx8ICRjbGFzc05hbWUgPT0gIlRhZyIpIHsNCiAgICAgICAgICAgICAgICAvLyDmlofnq6DpnIDopoHor7vlj5bvvIzlhbbku5bnmoTnm7TmjqXov5Tlm57nqbrlr7nosaHljbPlj68NCiAgICAgICAgICAgICAgICAvKiogQHZhciBCYXNlICRwICovDQogICAgICAgICAgICAgICAgJHAgPSBuZXcgJGNsYXNzTmFtZSgpOw0KICAgICAgICAgICAgICAgICRwLT5Mb2FkSW5mb0J5SUQoJGlkKTsNCiAgICAgICAgICAgICAgICAkb2JqZWN0WyRpZF0gPSAkcDsNCg0KICAgICAgICAgICAgICAgIHJldHVybiAkcDsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgcmV0dXJuICR0aGlzLT5HZXRTb21lVGhpbmdCeUF0dHIoJG9iamVjdCwgJ0lEJywgJGlkKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIC8qKiBAdmFyIEJhc2UgJHAgKi8NCiAgICAgICAgICAgICRwID0gbmV3ICRjbGFzc05hbWUoKTsNCiAgICAgICAgICAgICRwLT5Mb2FkSW5mb0J5SUQoJGlkKTsNCg0KICAgICAgICAgICAgcmV0dXJuICRwOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5qC55o2u5bGe5oCn5YC85b6X5Yiw55u45bqU5pWw5o2uLg0KICAgICAqDQogICAgICogQHBhcmFtIEJhc2VbXSAmJG9iamVjdCDnvJPlrZjlr7nosaENCiAgICAgKiBAcGFyYW0gc3RyaW5nICRhdHRyICAgIOWxnuaAp+WQjQ0KICAgICAqIEBwYXJhbSBtaXhlZCAgJHZhbCAgICAg6KaB5p+l5om+55qE5YC8DQogICAgICoNCiAgICAgKiBAcmV0dXJuIG51bGwNCiAgICAgKi8NCiAgICBwcml2YXRlIGZ1bmN0aW9uIEdldFNvbWVUaGluZ0J5QXR0cigmJG9iamVjdCwgJGF0dHIsICR2YWwpDQogICAgew0KICAgICAgICAkdmFsID0gdHJpbSgkdmFsKTsNCiAgICAgICAgZm9yZWFjaCAoJG9iamVjdCBhcyAka2V5ID0+ICYkdmFsdWUpIHsNCiAgICAgICAgICAgIGlmIChpc19udWxsKCR2YWx1ZSkpIHsNCiAgICAgICAgICAgICAgICBjb250aW51ZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGlmICgkdmFsdWUtPiRhdHRyID09ICR2YWwpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gJHZhbHVlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6I635Y+W5pWw5o2u6YCa55So5Ye95pWwLg0KICAgICAqDQogICAgICogQHBhcmFtIEJhc2VbXXxzdHJpbmcgJG9iamVjdCAgICDnvJPlrZjlr7nosaHvvIhzdHJpbmcgLyBvYmplY3TvvIkNCiAgICAgKiBAcGFyYW0gc3RyaW5nICAgICAgICAkYXR0ciAgICAgIOassuafpeaJvueahOWxnuaApw0KICAgICAqIEBwYXJhbSBtaXhlZCAgICAgICAgICR2YWwgICAgICAg6KaB5p+l5om+5YaF5a65DQogICAgICogQHBhcmFtIHN0cmluZyAgICAgICAgJGNsYXNzTmFtZSDlr7nosaHmnKrmib7liLDml7bvvIzliJ3lp4vljJbnsbvlkI0NCiAgICAgKg0KICAgICAqIEByZXR1cm4gQmFzZXxudWxsDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEdldFNvbWVUaGluZygkb2JqZWN0LCAkYXR0ciwgJHZhbCwgJGNsYXNzTmFtZSA9IG51bGwpDQogICAgew0KICAgICAgICAkY2FjaGVPYmplY3QgPSBudWxsOw0KICAgICAgICBpZiAoaXNfb2JqZWN0KCRvYmplY3QpKSB7DQogICAgICAgICAgICAkY2FjaGVPYmplY3QgPSAkb2JqZWN0Ow0KICAgICAgICB9IGVsc2VpZiAoJG9iamVjdCAhPSAiIikgew0KICAgICAgICAgICAgJGNhY2hlT2JqZWN0ID0gJiR0aGlzLT4kb2JqZWN0Ow0KICAgICAgICB9DQogICAgICAgIGlmICgkYXR0ciA9PSAiSUQiKSB7DQogICAgICAgICAgICAkcmV0ID0gJHRoaXMtPkdldFNvbWVUaGluZ0J5SWQoJGNhY2hlT2JqZWN0LCAkY2xhc3NOYW1lLCAkdmFsKTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICRyZXQgPSAkdGhpcy0+R2V0U29tZVRoaW5nQnlBdHRyKCRjYWNoZU9iamVjdCwgJGF0dHIsICR2YWwpOw0KICAgICAgICB9DQogICAgICAgIGlmICgkcmV0ID09PSBudWxsICYmICFpc19udWxsKCRjbGFzc05hbWUpKSB7DQogICAgICAgICAgICAvKiogQHZhciBCYXNlICRyZXQgKi8NCiAgICAgICAgICAgICRyZXQgPSBuZXcgJGNsYXNzTmFtZSgpOw0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuICRyZXQ7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6YCa6L+HSUTojrflj5bmlofnq6Dlrp7kvosuDQogICAgICoNCiAgICAgKiBAcGFyYW0gaW50ICRpZA0KICAgICAqDQogICAgICogQHJldHVybiBQb3N0fEJhc2UNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gR2V0UG9zdEJ5SUQoJGlkKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuICR0aGlzLT5HZXRTb21lVGhpbmcoJ3Bvc3RzJywgJ0lEJywgJGlkLCAnUG9zdCcpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOmAmui/h0lE6I635Y+W5YiG57G75a6e5L6LLg0KICAgICAqDQogICAgICogQHBhcmFtIGludCAkaWQNCiAgICAgKg0KICAgICAqIEByZXR1cm4gQ2F0ZWdvcnl8QmFzZQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBHZXRDYXRlZ29yeUJ5SUQoJGlkKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuICR0aGlzLT5HZXRTb21lVGhpbmcoJ2NhdGVnb3JpZXMnLCAnSUQnLCAkaWQsICdDYXRlZ29yeScpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOmAmui/h+WIhuexu+WQjeiOt+WPluWIhuexu+WunuS+iy4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJG5hbWUNCiAgICAgKg0KICAgICAqIEByZXR1cm4gQ2F0ZWdvcnl8QmFzZQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBHZXRDYXRlZ29yeUJ5TmFtZSgkbmFtZSkNCiAgICB7DQogICAgICAgIHJldHVybiAkdGhpcy0+R2V0U29tZVRoaW5nKCdjYXRlZ29yaWVzJywgJ05hbWUnLCAkbmFtZSwgJ0NhdGVnb3J5Jyk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6YCa6L+H5YiG57G75Yir5ZCN6I635Y+W5YiG57G75a6e5L6LLg0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAkbmFtZQ0KICAgICAqIEBwYXJhbSBudWxsICAgJGJhY2tLZXkNCiAgICAgKg0KICAgICAqIEByZXR1cm4gQ2F0ZWdvcnl8QmFzZQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBHZXRDYXRlZ29yeUJ5QWxpYXMoJG5hbWUsICRiYWNrS2V5ID0gbnVsbCkNCiAgICB7DQogICAgICAgIHJldHVybiAkdGhpcy0+R2V0U29tZVRoaW5nQnlBbGlhcygnY2F0ZWdvcmllcycsICRuYW1lLCAkYmFja0tleSwgJ0NhdGVnb3J5Jyk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5LiO6ICB54mI5pys5L+d5oyB5YW85a655Ye95pWwLg0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAkbmFtZQ0KICAgICAqDQogICAgICogQHJldHVybiBDYXRlZ29yeQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBHZXRDYXRlZ29yeUJ5QWxpYXNPck5hbWUoJG5hbWUpDQogICAgew0KICAgICAgICByZXR1cm4gJHRoaXMtPkdldENhdGVnb3J5QnlBbGlhcygkbmFtZSwgJ05hbWUnKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDpgJrov4dJROiOt+WPluaooeWdl+WunuS+iy4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBpbnQgJGlkDQogICAgICoNCiAgICAgKiBAcmV0dXJuIE1vZHVsZXxCYXNlDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEdldE1vZHVsZUJ5SUQoJGlkKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuICR0aGlzLT5HZXRTb21lVGhpbmcoJ21vZHVsZXMnLCAnSUQnLCAkaWQsICdNb2R1bGUnKTsgLy8gV2hhdCB0aGUgZnVjaz8NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDpgJrov4dGaWxlTmFtZeiOt+WPluaooeWdl+WunuS+iy4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJGZuDQogICAgICoNCiAgICAgKiBAcmV0dXJuIE1vZHVsZXxCYXNlDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEdldE1vZHVsZUJ5RmlsZU5hbWUoJGZuKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuICR0aGlzLT5HZXRTb21lVGhpbmcoJ21vZHVsZXNieWZpbGVuYW1lJywgJ0ZpbGVOYW1lJywgJGZuLCAnTW9kdWxlJyk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6YCa6L+HSUTojrflj5bnlKjmiLflrp7kvosuDQogICAgICoNCiAgICAgKiBAcGFyYW0gaW50ICRpZA0KICAgICAqDQogICAgICogQHJldHVybiBNZW1iZXJ8QmFzZQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBHZXRNZW1iZXJCeUlEKCRpZCkNCiAgICB7DQogICAgICAgIC8qKiBAdmFyIE1lbWJlciAkcmV0ICovDQogICAgICAgICRyZXQgPSAkdGhpcy0+R2V0U29tZVRoaW5nKCdtZW1iZXJzJywgJ0lEJywgJGlkLCAnTWVtYmVyJyk7DQogICAgICAgIGlmICgkcmV0LT5JRCA9PSAwKSB7DQogICAgICAgICAgICAkcmV0LT5HdWlkID0gR2V0R3VpZCgpOw0KICAgICAgICAgICAgLy/lpoLmnpzmmK/pg6jku73liqDovb3nlKjmiLcNCiAgICAgICAgICAgIGlmICgkdGhpcy0+b3B0aW9uWydaQ19MT0FETUVNQkVSU19MRVZFTCddICE9IDApIHsNCiAgICAgICAgICAgICAgICBpZiAoJHJldC0+TG9hZEluZm9CeUlEKCRpZCkgPT0gdHJ1ZSkgew0KICAgICAgICAgICAgICAgICAgICAkdGhpcy0+bWVtYmVyc1skcmV0LT5JRF0gPSAkcmV0Ow0KICAgICAgICAgICAgICAgICAgICAkdGhpcy0+bWVtYmVyc2J5bmFtZVskcmV0LT5OYW1lXSA9ICYkdGhpcy0+bWVtYmVyc1skcmV0LT5JRF07DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuICRyZXQ7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6YCa6L+H55So5oi35ZCN6I635Y+W55So5oi35a6e5L6LKOS4jeWMuuWIhuWkp+Wwj+WGmSkuDQogICAgICoNCiAgICAgKiBAcGFyYW0gc3RyaW5nICRuYW1lDQogICAgICoNCiAgICAgKiBAcmV0dXJuIE1lbWJlcnxCYXNlDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEdldE1lbWJlckJ5TmFtZSgkbmFtZSkNCiAgICB7DQogICAgICAgICRuYW1lID0gdHJpbSgkbmFtZSk7DQogICAgICAgIGlmICghJG5hbWUgfHwgIUNoZWNrUmVnRXhwKCRuYW1lLCAnW3VzZXJuYW1lXScpKSB7DQogICAgICAgICAgICByZXR1cm4gbmV3IE1lbWJlcigpOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKGlzc2V0KCR0aGlzLT5tZW1iZXJzYnluYW1lWyRuYW1lXSkpIHsNCiAgICAgICAgICAgIHJldHVybiAkdGhpcy0+bWVtYmVyc2J5bmFtZVskbmFtZV07DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAkYXJyYXkgPSBhcnJheV9rZXlzKCR0aGlzLT5tZW1iZXJzYnluYW1lKTsNCiAgICAgICAgICAgIGZvcmVhY2ggKCRhcnJheSBhcyAkayA9PiAkdikgew0KICAgICAgICAgICAgICAgIGlmIChzdHJjYXNlY21wKCRuYW1lLCAkdikgPT0gMCkgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gJHRoaXMtPm1lbWJlcnNieW5hbWVbJHZdOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgICRsaWtlID0gKCR0aGlzLT5kYi0+dHlwZSA9PSAncGdzcWwnKSA/ICdJTElLRScgOiAnTElLRSc7DQogICAgICAgICRzcWwgPSAkdGhpcy0+ZGItPnNxbC0+U2VsZWN0KCR0aGlzLT50YWJsZVsnTWVtYmVyJ10sICcqJywgYXJyYXkoYXJyYXkoJGxpa2UsICdtZW1fTmFtZScsICRuYW1lKSksIG51bGwsIDEsIG51bGwpOw0KDQogICAgICAgIC8qKiBAdmFyIE1lbWJlcltdICRhbSAqLw0KICAgICAgICAkYW0gPSAkdGhpcy0+R2V0TGlzdFR5cGUoJ01lbWJlcicsICRzcWwpOw0KICAgICAgICBpZiAoY291bnQoJGFtKSA+IDApIHsNCiAgICAgICAgICAgICRtID0gJGFtWzBdOw0KICAgICAgICAgICAgaWYgKCFpc3NldCgkdGhpcy0+bWVtYmVyc1skbS0+SURdKSkgew0KICAgICAgICAgICAgICAgICR0aGlzLT5tZW1iZXJzWyRtLT5JRF0gPSAkbTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGlmICghaXNzZXQoJHRoaXMtPm1lbWJlcnNieW5hbWVbJG0tPk5hbWVdKSkgew0KICAgICAgICAgICAgICAgICR0aGlzLT5tZW1iZXJzYnluYW1lWyRtLT5OYW1lXSA9ICYkdGhpcy0+bWVtYmVyc1skbS0+SURdOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICByZXR1cm4gJG07DQogICAgICAgIH0NCg0KICAgICAgICByZXR1cm4gbmV3IE1lbWJlcigpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOmAmui/h+iOt+WPlueUqOaIt+WQjeaIluWIq+WQjeWunuS+iyjkuI3ljLrliIblpKflsI/lhpkpLg0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAkbmFtZQ0KICAgICAqDQogICAgICogQHJldHVybiBNZW1iZXJ8QmFzZQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBHZXRNZW1iZXJCeU5hbWVPckFsaWFzKCRuYW1lKQ0KICAgIHsNCiAgICAgICAgJG5hbWUgPSB0cmltKCRuYW1lKTsNCiAgICAgICAgaWYgKCEkbmFtZSB8fCAhKENoZWNrUmVnRXhwKCRuYW1lLCAnW3VzZXJuYW1lXScpIHx8IENoZWNrUmVnRXhwKCRuYW1lLCAnW25pY2tuYW1lXScpKSkgew0KICAgICAgICAgICAgcmV0dXJuIG5ldyBNZW1iZXIoKTsNCiAgICAgICAgfQ0KDQogICAgICAgIGZvcmVhY2ggKCR0aGlzLT5tZW1iZXJzIGFzICRrZXkgPT4gJiR2YWx1ZSkgew0KICAgICAgICAgICAgaWYgKHN0cmNhc2VjbXAoJHZhbHVlLT5OYW1lLCAkbmFtZSkgPT0gMCB8fCBzdHJjYXNlY21wKCR2YWx1ZS0+QWxpYXMsICRuYW1lKSA9PSAwKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuICR2YWx1ZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgICRsaWtlID0gKCR0aGlzLT5kYi0+dHlwZSA9PSAncGdzcWwnKSA/ICdJTElLRScgOiAnTElLRSc7DQoNCiAgICAgICAgJHNxbCA9ICR0aGlzLT5kYi0+c3FsLT5nZXQoKS0+c2VsZWN0KCR0aGlzLT50YWJsZVsnTWVtYmVyJ10pLT53aGVyZShhcnJheSgiJGxpa2UgYXJyYXkiLCBhcnJheSgNCiAgICAgICAgICAgICAgICBhcnJheSgnbWVtX05hbWUnLCAkbmFtZSksDQogICAgICAgICAgICAgICAgYXJyYXkoJ21lbV9BbGlhcycsICRuYW1lKSwNCiAgICAgICAgICAgICkpKS0+bGltaXQoMSktPnNxbDsNCg0KICAgICAgICAvKiogQHZhciBNZW1iZXJbXSAkYW0gKi8NCiAgICAgICAgJGFtID0gJHRoaXMtPkdldExpc3RUeXBlKCdNZW1iZXInLCAkc3FsKTsNCiAgICAgICAgaWYgKGNvdW50KCRhbSkgPiAwKSB7DQogICAgICAgICAgICAkbSA9ICRhbVswXTsNCiAgICAgICAgICAgIGlmICghaXNzZXQoJHRoaXMtPm1lbWJlcnNbJG0tPklEXSkpIHsNCiAgICAgICAgICAgICAgICAkdGhpcy0+bWVtYmVyc1skbS0+SURdID0gJG07DQogICAgICAgICAgICB9DQogICAgICAgICAgICBpZiAoIWlzc2V0KCR0aGlzLT5tZW1iZXJzYnluYW1lWyRtLT5OYW1lXSkpIHsNCiAgICAgICAgICAgICAgICAkdGhpcy0+bWVtYmVyc2J5bmFtZVskbS0+TmFtZV0gPSAmJHRoaXMtPm1lbWJlcnNbJG0tPklEXTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuICRtOw0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuIG5ldyBNZW1iZXIoKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDpgJrov4fpgq7nrrHlkI3ojrflj5bnlKjmiLflrp7kvoso5LiN5Yy65YiG5aSn5bCP5YaZKS4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJGVtYWlsDQogICAgICoNCiAgICAgKiBAcmV0dXJuIE1lbWJlcg0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBHZXRNZW1iZXJCeUVtYWlsKCRlbWFpbCkNCiAgICB7DQogICAgICAgICRlbWFpbCA9IHN0cnRvbG93ZXIodHJpbSgkZW1haWwpKTsNCiAgICAgICAgaWYgKCEkZW1haWwgfHwgIUNoZWNrUmVnRXhwKCRlbWFpbCwgJ1tlbWFpbF0nKSkgew0KICAgICAgICAgICAgcmV0dXJuIG5ldyBNZW1iZXIoKTsNCiAgICAgICAgfQ0KDQogICAgICAgICRzcWwgPSAkdGhpcy0+ZGItPnNxbC0+U2VsZWN0KCR0aGlzLT50YWJsZVsnTWVtYmVyJ10sICcqJywgYXJyYXkoYXJyYXkoJ0xJS0UnLCAnbWVtX0VtYWlsJywgJGVtYWlsKSksIG51bGwsIDEsIG51bGwpOw0KICAgICAgICAvKiogQHZhciBNZW1iZXJbXSAkYW0gKi8NCiAgICAgICAgJGFtID0gJHRoaXMtPkdldExpc3RUeXBlKCdNZW1iZXInLCAkc3FsKTsNCiAgICAgICAgaWYgKGNvdW50KCRhbSkgPiAwKSB7DQogICAgICAgICAgICAkbSA9ICRhbVswXTsNCiAgICAgICAgICAgIGlmICghaXNzZXQoJHRoaXMtPm1lbWJlcnNbJG0tPklEXSkpIHsNCiAgICAgICAgICAgICAgICAkdGhpcy0+bWVtYmVyc1skbS0+SURdID0gJG07DQogICAgICAgICAgICB9DQogICAgICAgICAgICBpZiAoIWlzc2V0KCR0aGlzLT5tZW1iZXJzYnluYW1lWyRtLT5OYW1lXSkpIHsNCiAgICAgICAgICAgICAgICAkdGhpcy0+bWVtYmVyc2J5bmFtZVskbS0+TmFtZV0gPSAmJHRoaXMtPm1lbWJlcnNbJG0tPklEXTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuICRtOw0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuIG5ldyBNZW1iZXIoKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmo4Dmn6XmjIflrprlkI3np7DnmoTnlKjmiLfmmK/lkKblrZjlnKgo5LiN5Yy65YiG5aSn5bCP5YaZKS4NCiAgICAgKg0KICAgICAqIEBwYXJhbSAkbmFtZQ0KICAgICAqDQogICAgICogQHJldHVybiBib29sDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIENoZWNrTWVtYmVyTmFtZUV4aXN0KCRuYW1lKQ0KICAgIHsNCiAgICAgICAgJG0gPSAkdGhpcy0+R2V0TWVtYmVyQnlOYW1lKCRuYW1lKTsNCg0KICAgICAgICByZXR1cm4gJG0tPklEID4gMDsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmo4Dmn6XmjIflrprlkI3np7DmiJbliKvlkI3nmoTnlKjmiLfmmK/lkKblrZjlnKgo5LiN5Yy65YiG5aSn5bCP5YaZKS4NCiAgICAgKg0KICAgICAqIEBwYXJhbSAkbmFtZQ0KICAgICAqDQogICAgICogQHJldHVybiBib29sDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIENoZWNrTWVtYmVyQnlOYW1lT3JBbGlhc0V4aXN0KCRuYW1lKQ0KICAgIHsNCiAgICAgICAgJG0gPSAkdGhpcy0+R2V0TWVtYmVyQnlOYW1lT3JBbGlhcygkbmFtZSk7DQoNCiAgICAgICAgcmV0dXJuICRtLT5JRCA+IDA7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5qOA5p+l5oyH5a6a6YKu566x55qE55So5oi35piv5ZCm5a2Y5ZyoKOS4jeWMuuWIhuWkp+Wwj+WGmSkuDQogICAgICoNCiAgICAgKiBAcGFyYW0gJGVtYWlsDQogICAgICoNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gQ2hlY2tNZW1iZXJCeUVtYWlsRXhpc3QoJGVtYWlsKQ0KICAgIHsNCiAgICAgICAgJG0gPSAkdGhpcy0+R2V0TWVtYmVyQnlFbWFpbCgkZW1haWwpOw0KDQogICAgICAgIHJldHVybiAkbS0+SUQgPiAwOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOmAmui/h0lE6I635Y+W6K+E6K665a6e5L6LLg0KICAgICAqDQogICAgICogQHBhcmFtIGludCAkaWQNCiAgICAgKg0KICAgICAqIEByZXR1cm4gQ29tbWVudHxCYXNlDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEdldENvbW1lbnRCeUlEKCRpZCkNCiAgICB7DQogICAgICAgIHJldHVybiAkdGhpcy0+R2V0U29tZVRoaW5nKCdjb21tZW50cycsICdJRCcsICRpZCwgJ0NvbW1lbnQnKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDpgJrov4dJROiOt+WPlumZhOS7tuWunuS+iy4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBpbnQgJGlkDQogICAgICoNCiAgICAgKiBAcmV0dXJuIFVwbG9hZHxCYXNlDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEdldFVwbG9hZEJ5SUQoJGlkKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuICR0aGlzLT5HZXRTb21lVGhpbmcoJycsICdJRCcsICRpZCwgJ1VwbG9hZCcpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOmAmui/h3RhZ+WQjeiOt+WPlnRhZ+WunuS+iy4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJG5hbWUNCiAgICAgKiBAcGFyYW0gbnVsbCAgICRiYWNrS2V5DQogICAgICoNCiAgICAgKiBAcmV0dXJuIFRhZ3xCYXNlDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEdldFRhZ0J5QWxpYXMoJG5hbWUsICRiYWNrS2V5ID0gbnVsbCkNCiAgICB7DQogICAgICAgICRyZXQgPSAkdGhpcy0+R2V0U29tZVRoaW5nQnlBbGlhcygndGFncycsICRuYW1lLCAkYmFja0tleSwgJ1RhZycpOw0KICAgICAgICBpZiAoJHJldC0+SUQgPj0gMCkgew0KICAgICAgICAgICAgJHRoaXMtPnRhZ3NieW5hbWVbJHJldC0+SURdID0gJiR0aGlzLT50YWdzWyRyZXQtPklEXTsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiAkcmV0Ow0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOmAmui/h3RhZ+WQjeiOt+WPlnRhZ+WunuS+iy4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJG5hbWUNCiAgICAgKg0KICAgICAqIEByZXR1cm4gVGFnfEJhc2UNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gR2V0VGFnQnlBbGlhc09yTmFtZSgkbmFtZSkNCiAgICB7DQogICAgICAgIC8vcmV0dXJuICR0aGlzLT5HZXRUYWdCeUFsaWFzKCRuYW1lLCAnTmFtZScpOw0KICAgICAgICAkYSA9IGFycmF5KCk7DQogICAgICAgICRhW10gPSBhcnJheSgndGFnX0FsaWFzJywgJG5hbWUpOw0KICAgICAgICAkYVtdID0gYXJyYXkoJ3RhZ19OYW1lJywgJG5hbWUpOw0KICAgICAgICAkYXJyYXkgPSAkdGhpcy0+R2V0VGFnTGlzdCgnKicsIGFycmF5KGFycmF5KCdhcnJheScsICRhKSksICcnLCAxLCAnJyk7DQogICAgICAgIGlmIChjb3VudCgkYXJyYXkpID09IDApIHsNCiAgICAgICAgICAgIHJldHVybiBuZXcgVGFnKCk7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAkdGhpcy0+dGFnc1skYXJyYXlbMF0tPklEXSA9ICRhcnJheVswXTsNCiAgICAgICAgICAgICR0aGlzLT50YWdzYnluYW1lWyRhcnJheVswXS0+SURdID0gJiR0aGlzLT50YWdzWyRhcnJheVswXS0+SURdOw0KDQogICAgICAgICAgICByZXR1cm4gJHRoaXMtPnRhZ3NbJGFycmF5WzBdLT5JRF07DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDpgJrov4dJROiOt+WPlnRhZ+WunuS+iy4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBpbnQgJGlkDQogICAgICoNCiAgICAgKiBAcmV0dXJuIFRhZ3xCYXNlDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEdldFRhZ0J5SUQoJGlkKQ0KICAgIHsNCiAgICAgICAgJHJldCA9ICR0aGlzLT5HZXRTb21lVGhpbmcoJ3RhZ3MnLCAnSUQnLCAkaWQsICdUYWcnKTsNCiAgICAgICAgaWYgKCRyZXQtPklEID4gMCkgew0KICAgICAgICAgICAgJHRoaXMtPnRhZ3NieW5hbWVbJHJldC0+SURdID0gJiR0aGlzLT50YWdzWyRyZXQtPklEXTsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiAkcmV0Ow0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOmAmui/h+exu+S8vCd7MX17Mn17M317NH0n6L295YWldGFncy4NCiAgICAgKg0KICAgICAqIEBwYXJhbSAkcw0KICAgICAqDQogICAgICogQHJldHVybiBhcnJheQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBMb2FkVGFnc0J5SURTdHJpbmcoJHMpDQogICAgew0KICAgICAgICAkcyA9IHRyaW0oJHMpOw0KICAgICAgICBpZiAoJHMgPT0gJycpIHsNCiAgICAgICAgICAgIHJldHVybiBhcnJheSgpOw0KICAgICAgICB9DQoNCiAgICAgICAgJHMgPSBzdHJfcmVwbGFjZSgnfXsnLCAnfCcsICRzKTsNCiAgICAgICAgJHMgPSBzdHJfcmVwbGFjZSgneycsICcnLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoJ30nLCAnJywgJHMpOw0KICAgICAgICAkYSA9IGV4cGxvZGUoJ3wnLCAkcyk7DQogICAgICAgICRiID0gYXJyYXkoKTsNCiAgICAgICAgZm9yZWFjaCAoJGEgYXMgJiR2YWx1ZSkgew0KICAgICAgICAgICAgJHZhbHVlID0gdHJpbSgkdmFsdWUpOw0KICAgICAgICAgICAgaWYgKCR2YWx1ZSkgew0KICAgICAgICAgICAgICAgICRiW10gPSAkdmFsdWU7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgJHQgPSBhcnJheV91bmlxdWUoJGIpOw0KDQogICAgICAgIGlmIChjb3VudCgkdCkgPT0gMCkgew0KICAgICAgICAgICAgcmV0dXJuIGFycmF5KCk7DQogICAgICAgIH0NCg0KICAgICAgICAkYSA9IGFycmF5KCk7DQogICAgICAgICRiID0gYXJyYXkoKTsNCiAgICAgICAgJGMgPSBhcnJheSgpOw0KICAgICAgICBmb3JlYWNoICgkdCBhcyAkdikgew0KICAgICAgICAgICAgaWYgKGlzc2V0KCR0aGlzLT50YWdzWyR2XSkgPT0gZmFsc2UpIHsNCiAgICAgICAgICAgICAgICAkYVtdID0gYXJyYXkoJ3RhZ19JRCcsICR2KTsNCiAgICAgICAgICAgICAgICAkY1tdID0gJHY7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICRiWyR2XSA9ICYkdGhpcy0+dGFnc1skdl07DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoY291bnQoJGEpID09IDApIHsNCiAgICAgICAgICAgIHJldHVybiAkYjsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICR0ID0gYXJyYXkoKTsNCiAgICAgICAgICAgIC8vJGFycmF5PSR0aGlzLT5HZXRUYWdMaXN0KCcnLGFycmF5KGFycmF5KCdhcnJheScsJGEpKSwnJywnJywnJyk7DQogICAgICAgICAgICAkYXJyYXkgPSAkdGhpcy0+R2V0VGFnTGlzdCgnJywgYXJyYXkoYXJyYXkoJ0lOJywgJ3RhZ19JRCcsICRjKSksICcnLCAnJywgJycpOw0KICAgICAgICAgICAgZm9yZWFjaCAoJGFycmF5IGFzICR2KSB7DQogICAgICAgICAgICAgICAgJHRoaXMtPnRhZ3NbJHYtPklEXSA9ICR2Ow0KICAgICAgICAgICAgICAgICR0aGlzLT50YWdzYnluYW1lWyR2LT5OYW1lXSA9ICYkdGhpcy0+dGFnc1skdi0+SURdOw0KICAgICAgICAgICAgICAgICR0WyR2LT5JRF0gPSAmJHRoaXMtPnRhZ3NbJHYtPklEXTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuICRiICsgJHQ7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDpgJrov4fnsbvkvLwnYWFhLGJiYixjY2MsZGRkJ+i9veWFpXRhZ3MuDQogICAgICoNCiAgICAgKiBAcGFyYW0gc3RyaW5nICRzIOagh+etvuWQjeWtl+espuS4su+8jOWmgidhYWEsYmJiLGNjYyxkZGQNCiAgICAgKg0KICAgICAqIEByZXR1cm4gYXJyYXkNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gTG9hZFRhZ3NCeU5hbWVTdHJpbmcoJHMpDQogICAgew0KICAgICAgICAkcyA9IHRyaW0oJHMpOw0KICAgICAgICAkcyA9IHN0cl9yZXBsYWNlKCc7JywgJywnLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoJ++8jCcsICcsJywgJHMpOw0KICAgICAgICAkcyA9IHN0cl9yZXBsYWNlKCfjgIEnLCAnLCcsICRzKTsNCiAgICAgICAgJHMgPSB0cmltKCRzKTsNCiAgICAgICAgJHMgPSBzdHJpcF90YWdzKCRzKTsNCiAgICAgICAgaWYgKCRzID09ICcnKSB7DQogICAgICAgICAgICByZXR1cm4gYXJyYXkoKTsNCiAgICAgICAgfQ0KDQogICAgICAgIGlmICgkcyA9PSAnLCcpIHsNCiAgICAgICAgICAgIHJldHVybiBhcnJheSgpOw0KICAgICAgICB9DQoNCiAgICAgICAgJGEgPSBleHBsb2RlKCcsJywgJHMpOw0KICAgICAgICAkdCA9IGFycmF5X3VuaXF1ZSgkYSk7DQoNCiAgICAgICAgaWYgKGNvdW50KCR0KSA9PSAwKSB7DQogICAgICAgICAgICByZXR1cm4gYXJyYXkoKTsNCiAgICAgICAgfQ0KDQogICAgICAgICRhID0gYXJyYXkoKTsNCiAgICAgICAgJGIgPSBhcnJheSgpOw0KICAgICAgICBmb3JlYWNoICgkdCBhcyAkdikgew0KICAgICAgICAgICAgaWYgKGlzc2V0KCR0aGlzLT50YWdzYnluYW1lWyR2XSkgPT0gZmFsc2UpIHsNCiAgICAgICAgICAgICAgICAkYVtdID0gYXJyYXkoJ3RhZ19OYW1lJywgJHYpOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAkYlskdl0gPSAmJHRoaXMtPnRhZ3NieW5hbWVbJHZdOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKGNvdW50KCRhKSA9PSAwKSB7DQogICAgICAgICAgICByZXR1cm4gJGI7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAkdCA9IGFycmF5KCk7DQogICAgICAgICAgICAkYXJyYXkgPSAkdGhpcy0+R2V0VGFnTGlzdCgnJywgYXJyYXkoYXJyYXkoJ2FycmF5JywgJGEpKSwgJycsICcnLCAnJyk7DQogICAgICAgICAgICBmb3JlYWNoICgkYXJyYXkgYXMgJHYpIHsNCiAgICAgICAgICAgICAgICAkdGhpcy0+dGFnc1skdi0+SURdID0gJHY7DQogICAgICAgICAgICAgICAgJHRoaXMtPnRhZ3NieW5hbWVbJHYtPk5hbWVdID0gJiR0aGlzLT50YWdzWyR2LT5JRF07DQogICAgICAgICAgICAgICAgJHRbJHYtPk5hbWVdID0gJiR0aGlzLT50YWdzWyR2LT5JRF07DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiAkYiArICR0Ow0KICAgICAgICB9DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6YCa6L+H5pWw57uEYXJyYXlbMTExLDMzMyw0NDQsNTU1LDY2Nl3ovazmjaLmiJDlrZjlgqjkuLIuDQogICAgICoNCiAgICAgKiBAcGFyYW0gYXJyYXkgJGFycmF5IOagh+etvklE5pWw57uEDQogICAgICoNCiAgICAgKiBAcmV0dXJuIHN0cmluZw0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBDb252ZXJ0VGFnSUR0b1N0cmluZygkYXJyYXkpDQogICAgew0KICAgICAgICAkcyA9ICcnOw0KICAgICAgICBmb3JlYWNoICgkYXJyYXkgYXMgJGEpIHsNCiAgICAgICAgICAgICRzIC49ICd7JyAuICRhIC4gJ30nOw0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuICRzOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOiOt+WPluWFqOmDqOe9rumhtuaWh+eroO+8iOS8mOWFiOS7jmNhY2hl6YeM6K+75pWw57uE77yJLg0KICAgICAqDQogICAgICogQHBhcmFtIGludCAkdHlwZQ0KICAgICAqDQogICAgICogQHJldHVybiBhcnJheQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBHZXRUb3BBcnRpY2xlKCR0eXBlID0gMCkNCiAgICB7DQogICAgICAgICR2YXJuYW1lID0gJ3RvcF9wb3N0X2FycmF5XycgLiAkdHlwZTsNCiAgICAgICAgaWYgKCR0aGlzLT5jYWNoZS0+SGFzS2V5KCR2YXJuYW1lKSA9PSBmYWxzZSkgew0KICAgICAgICAgICAgcmV0dXJuIGFycmF5KCk7DQogICAgICAgIH0NCg0KICAgICAgICAkYXJ0aWNsZXNfdG9wX25vdG9yZGVyX2lkYXJyYXkgPSB1bnNlcmlhbGl6ZSgkdGhpcy0+Y2FjaGUtPiR2YXJuYW1lKTsNCiAgICAgICAgaWYgKCFpc19hcnJheSgkYXJ0aWNsZXNfdG9wX25vdG9yZGVyX2lkYXJyYXkpKSB7DQogICAgICAgICAgICBDb3VudFRvcEFydGljbGUoJHR5cGUsIG51bGwsIG51bGwpOw0KICAgICAgICAgICAgJGFydGljbGVzX3RvcF9ub3RvcmRlcl9pZGFycmF5ID0gdW5zZXJpYWxpemUoJHRoaXMtPmNhY2hlLT4kdmFybmFtZSk7DQogICAgICAgIH0NCiAgICAgICAgJGFydGljbGVzX3RvcF9ub3RvcmRlciA9ICR0aGlzLT5HZXRQb3N0QnlBcnJheSgkYXJ0aWNsZXNfdG9wX25vdG9yZGVyX2lkYXJyYXkpOw0KDQogICAgICAgIHJldHVybiAkYXJ0aWNsZXNfdG9wX25vdG9yZGVyOw0KICAgIH0NCg0KICAgIC8vIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQogICAgLy/pqozor4Hnm7jlhbMNCg0KICAgIC8qKg0KICAgICAqIOiOt+WPluivhOiuumtleS4NCiAgICAgKg0KICAgICAqIEBwYXJhbSAkaWQNCiAgICAgKg0KICAgICAqIEByZXR1cm4gc3RyaW5nDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEdldENtdEtleSgkaWQpDQogICAgew0KICAgICAgICByZXR1cm4gbWQ1KCR0aGlzLT5ndWlkIC4gJGlkIC4gZGF0ZSgnWW1kaCcpKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDpqozor4Hor4TorrprZXkuDQogICAgICoNCiAgICAgKiBAcGFyYW0gJGlkDQogICAgICogQHBhcmFtICRrZXkNCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBWYWxpZENtdEtleSgkaWQsICRrZXkpDQogICAgew0KICAgICAgICAkbm93a2V5ID0gbWQ1KCR0aGlzLT5ndWlkIC4gJGlkIC4gZGF0ZSgnWW1kaCcpKTsNCiAgICAgICAgJG5vd2tleTIgPSBtZDUoJHRoaXMtPmd1aWQgLiAkaWQgLiBkYXRlKCdZbWRoJywgdGltZSgpIC0gKDM2MDAgKiAxKSkpOw0KDQogICAgICAgIHJldHVybiAka2V5ID09ICRub3drZXkgfHwgJGtleSA9PSAkbm93a2V5MjsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDojrflj5ZDU1JGIFRva2VuLg0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAkaWQg5bqU55SoSUTvvIzlj6/ku6Xkv53or4Hmr4/kuKrlupTnlKjojrflj5bkuI3lkIznmoRUb2tlbg0KICAgICAqDQogICAgICogQHJldHVybiBzdHJpbmcNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gR2V0Q1NSRlRva2VuKCRpZCA9ICcnKQ0KICAgIHsNCiAgICAgICAgJHMgPSAkdGhpcy0+dXNlci0+SUQgLiAkdGhpcy0+dXNlci0+UGFzc3dvcmQgLiAkdGhpcy0+dXNlci0+U3RhdHVzOw0KDQogICAgICAgIHJldHVybiBtZDUoJHRoaXMtPmd1aWQgLiAkcyAuICRpZCAuIGRhdGUoJ1ltZGgnKSk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6aqM6K+BQ1NSRiBUb2tlbi4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJHRva2VuDQogICAgICogQHBhcmFtIHN0cmluZyAkaWQgICAg5bqU55SoSUTvvIzlj6/kuLrmr4/kuKrlupTnlKjnlJ/miJDkuIDkuKrkuJPlsZ50b2tlbg0KICAgICAqDQogICAgICogQHJldHVybiBib29sDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFZlcmlmeUNTUkZUb2tlbigkdG9rZW4sICRpZCA9ICcnKQ0KICAgIHsNCiAgICAgICAgJHVzZXJTdHJpbmcgPSAkdGhpcy0+dXNlci0+SUQgLiAkdGhpcy0+dXNlci0+UGFzc3dvcmQgLiAkdGhpcy0+dXNlci0+U3RhdHVzOw0KICAgICAgICAkdG9rZW5TdHJpbmcgPSAkdGhpcy0+Z3VpZCAuICR1c2VyU3RyaW5nIC4gJGlkOw0KDQogICAgICAgIGZvciAoJGkgPSAwOyAkaSA8PSAkdGhpcy0+Y3NyZkV4cGlyYXRpb247ICRpKyspIHsNCiAgICAgICAgICAgIGlmICgkdG9rZW4gPT09IG1kNSgkdG9rZW5TdHJpbmcgLiBkYXRlKCdZbWRoJywgdGltZSgpIC0gKDM2MDAgKiAkaSkpKSkgew0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOaYvuekuumqjOivgeeggQ0KICAgICAqDQogICAgICogQGFwaSBGaWx0ZXJfUGx1Z2luX1picF9TaG93VmFsaWRDb2RlIOWmguivpeaOpeWPo+acquiiq+aMgui9veWImeaYvuekuum7mOiupOmqjOivgeWbvueJhw0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAkaWQg5ZG95ZCN5LqL5Lu2DQogICAgICoNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gU2hvd1ZhbGlkQ29kZSgkaWQgPSAnJykNCiAgICB7DQogICAgICAgIGZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX1picF9TaG93VmFsaWRDb2RlJ10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICAgICByZXR1cm4gJGZwbmFtZSgkaWQpOyAvLyoNCiAgICAgICAgfQ0KDQogICAgICAgICRfdmMgPSBuZXcgVmFsaWRhdGVDb2RlKCk7DQogICAgICAgICRfdmMtPkdldEltZygpOw0KICAgICAgICBzZXRjb29raWUoJ2NhcHRjaGFfJyAuIGNyYzMyKCR0aGlzLT5ndWlkIC4gJGlkKSwgbWQ1KCR0aGlzLT5ndWlkIC4gZGF0ZSgiWW1kaCIpIC4gJF92Yy0+R2V0Q29kZSgpKSwgbnVsbCwgJHRoaXMtPmNvb2tpZXNwYXRoKTsNCg0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmr5Tlr7npqozor4HnoIENCiAgICAgKg0KICAgICAqIEBhcGkgRmlsdGVyX1BsdWdpbl9aYnBfQ2hlY2tWYWxpZENvZGUg5aaC6K+l5o6l5Y+j5pyq6KKr5oyC6L295YiZ5q+U5a+56buY6K6k6aqM6K+B56CBDQogICAgICoNCiAgICAgKiBAcGFyYW0gc3RyaW5nICR2ZXJpZnlDb2RlIOmqjOivgeeggeaVsOWAvA0KICAgICAqIEBwYXJhbSBzdHJpbmcgJGlkICAgICAgICAg5ZG95ZCN5LqL5Lu2DQogICAgICoNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gQ2hlY2tWYWxpZENvZGUoJHZlcmlmeUNvZGUsICRpZCA9ICcnKQ0KICAgIHsNCiAgICAgICAgJHZlcmlmeUNvZGUgPSBzdHJ0b2xvd2VyKCR2ZXJpZnlDb2RlKTsNCiAgICAgICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fWmJwX0NoZWNrVmFsaWRDb2RlJ10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICAgICByZXR1cm4gJGZwbmFtZSgkdmVyaWZ5Q29kZSwgJGlkKTsgLy8qDQogICAgICAgIH0NCg0KICAgICAgICAkb3JpZ2luYWwgPSBHZXRWYXJzKCdjYXB0Y2hhXycgLiBjcmMzMigkdGhpcy0+Z3VpZCAuICRpZCksICdDT09LSUUnKTsNCiAgICAgICAgc2V0Y29va2llKCdjYXB0Y2hhXycgLiBjcmMzMigkdGhpcy0+Z3VpZCAuICRpZCksICcnLCB0aW1lKCkgLSAzNjAwLCAkdGhpcy0+Y29va2llc3BhdGgpOw0KDQogICAgICAgIHJldHVybiBtZDUoJHRoaXMtPmd1aWQgLiBkYXRlKCJZbWRoIikgLiBzdHJ0b2xvd2VyKCR2ZXJpZnlDb2RlKSkgPT0gJG9yaWdpbmFsDQogICAgICAgICAgICAgICAgfHwNCiAgICAgICAgICAgICAgICBtZDUoJHRoaXMtPmd1aWQgLiBkYXRlKCJZbWRoIiwgdGltZSgpIC0gKDM2MDAgKiAxKSkgLiBzdHJ0b2xvd2VyKCR2ZXJpZnlDb2RlKSkgPT0gJG9yaWdpbmFsOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOWQkeWvvOiIquiPnOWNlea3u+WKoOebuOW6lOadoeebri4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJHR5cGUgJHR5cGU9Y2F0ZWdvcnksdGFnLHBhZ2UsaXRlbQ0KICAgICAqIEBwYXJhbSBzdHJpbmcgJGlkDQogICAgICogQHBhcmFtIHN0cmluZyAkbmFtZQ0KICAgICAqIEBwYXJhbSBzdHJpbmcgJHVybA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBBZGRJdGVtVG9OYXZiYXIoJHR5cGUsICRpZCwgJG5hbWUsICR1cmwpDQogICAgew0KICAgICAgICBpZiAoISR0eXBlKSB7DQogICAgICAgICAgICAkdHlwZSA9ICdpdGVtJzsNCiAgICAgICAgfQ0KDQogICAgICAgICRtID0gJHRoaXMtPm1vZHVsZXNieWZpbGVuYW1lWyduYXZiYXInXTsNCiAgICAgICAgJHMgPSAkbS0+Q29udGVudDsNCg0KICAgICAgICAkYSA9ICc8bGkgaWQ9Im5hdmJhci0nIC4gJHR5cGUgLiAnLScgLiAkaWQgLiAnIj48YSBocmVmPSInIC4gJHVybCAuICciPicgLiAkbmFtZSAuICc8L2E+PC9saT4nOw0KDQogICAgICAgIGlmICgkdGhpcy0+Q2hlY2tJdGVtVG9OYXZiYXIoJHR5cGUsICRpZCkpIHsNCiAgICAgICAgICAgICRzID0gcHJlZ19yZXBsYWNlKCcvPGxpIGlkPSJuYXZiYXItJyAuICR0eXBlIC4gJy0nIC4gJGlkIC4gJyI+Lio/PFwvbGk+LycsICRhLCAkcyk7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAkcyAuPSAnPGxpIGlkPSJuYXZiYXItJyAuICR0eXBlIC4gJy0nIC4gJGlkIC4gJyI+PGEgaHJlZj0iJyAuICR1cmwgLiAnIj4nIC4gJG5hbWUgLiAnPC9hPjwvbGk+JzsNCiAgICAgICAgfQ0KDQogICAgICAgICRtLT5Db250ZW50ID0gJHM7DQogICAgICAgICRtLT5TYXZlKCk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5Yig6Zmk5a+86Iiq6I+c5Y2V5Lit55u45bqU5p2h55uuLg0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAkdHlwZQ0KICAgICAqIEBwYXJhbSAkaWQNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gRGVsSXRlbVRvTmF2YmFyKCR0eXBlLCAkaWQpDQogICAgew0KICAgICAgICBpZiAoISR0eXBlKSB7DQogICAgICAgICAgICAkdHlwZSA9ICdpdGVtJzsNCiAgICAgICAgfQ0KDQogICAgICAgICRtID0gJHRoaXMtPm1vZHVsZXNieWZpbGVuYW1lWyduYXZiYXInXTsNCiAgICAgICAgJHMgPSAkbS0+Q29udGVudDsNCg0KICAgICAgICAkcyA9IHByZWdfcmVwbGFjZSgnLzxsaSBpZD0ibmF2YmFyLScgLiAkdHlwZSAuICctJyAuICRpZCAuICciPi4qPzxcL2xpPi8nLCAnJywgJHMpOw0KDQogICAgICAgICRtLT5Db250ZW50ID0gJHM7DQogICAgICAgICRtLT5TYXZlKCk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5qOA5p+l5p2h55uu5piv5ZCm5Zyo5a+86Iiq6I+c5Y2V5LitLg0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAkdHlwZQ0KICAgICAqIEBwYXJhbSAkaWQNCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBDaGVja0l0ZW1Ub05hdmJhcigkdHlwZSwgJGlkKQ0KICAgIHsNCiAgICAgICAgaWYgKCEkdHlwZSkgew0KICAgICAgICAgICAgJHR5cGUgPSAnaXRlbSc7DQogICAgICAgIH0NCg0KICAgICAgICAkbSA9ICR0aGlzLT5tb2R1bGVzYnlmaWxlbmFtZVsnbmF2YmFyJ107DQogICAgICAgICRzID0gJG0tPkNvbnRlbnQ7DQoNCiAgICAgICAgcmV0dXJuIChib29sKSBzdHJwb3MoJHMsICdpZD0ibmF2YmFyLScgLiAkdHlwZSAuICctJyAuICRpZCAuICciJyk7DQogICAgfQ0KDQogICAgLy8kc2lnbmFsID0gZ29vZCxiYWQsdGlwcw0KICAgIHByaXZhdGUgJGhpbnQxID0gbnVsbDsNCiAgICBwcml2YXRlICRoaW50MiA9IG51bGw7DQogICAgcHJpdmF0ZSAkaGludDMgPSBudWxsOw0KICAgIHByaXZhdGUgJGhpbnQ0ID0gbnVsbDsNCiAgICBwcml2YXRlICRoaW50NSA9IG51bGw7DQoNCiAgICAvKioNCiAgICAgKiDorr7nva7mj5DnpLrmtojmga/lubblrZjlhaVDb29raWUuDQogICAgICoNCiAgICAgKiBAcGFyYW0gc3RyaW5nICRzaWduYWwgIOaPkOekuuexu+Wei++8iGdvb2R8YmFkfHRpcHPvvIkNCiAgICAgKiBAcGFyYW0gc3RyaW5nICRjb250ZW50IOaPkOekuuWGheWuuQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBTZXRIaW50KCRzaWduYWwsICRjb250ZW50ID0gJycpDQogICAgew0KICAgICAgICBpZiAoJGNvbnRlbnQgPT0gJycpIHsNCiAgICAgICAgICAgIGlmICgkc2lnbmFsID09ICdnb29kJykgew0KICAgICAgICAgICAgICAgICRjb250ZW50ID0gJHRoaXMtPmxhbmdbJ21zZyddWydvcGVyYXRpb25fc3VjY2VlZCddOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBpZiAoJHNpZ25hbCA9PSAnYmFkJykgew0KICAgICAgICAgICAgICAgICRjb250ZW50ID0gJHRoaXMtPmxhbmdbJ21zZyddWydvcGVyYXRpb25fZmFpbGVkJ107DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgJGNvbnRlbnQgPSBzdWJzdHIoJGNvbnRlbnQsIDAsIDI1NSk7DQogICAgICAgIGlmICgkdGhpcy0+aGludDEgPT0gbnVsbCkgew0KICAgICAgICAgICAgJHRoaXMtPmhpbnQxID0gJHNpZ25hbCAuICd8JyAuICRjb250ZW50Ow0KICAgICAgICAgICAgc2V0Y29va2llKCJoaW50X3NpZ25hbDEiLCAkc2lnbmFsIC4gJ3wnIC4gJGNvbnRlbnQsIDAsICR0aGlzLT5jb29raWVzcGF0aCk7DQogICAgICAgIH0gZWxzZWlmICgkdGhpcy0+aGludDIgPT0gbnVsbCkgew0KICAgICAgICAgICAgJHRoaXMtPmhpbnQyID0gJHNpZ25hbCAuICd8JyAuICRjb250ZW50Ow0KICAgICAgICAgICAgc2V0Y29va2llKCJoaW50X3NpZ25hbDIiLCAkc2lnbmFsIC4gJ3wnIC4gJGNvbnRlbnQsIDAsICR0aGlzLT5jb29raWVzcGF0aCk7DQogICAgICAgIH0gZWxzZWlmICgkdGhpcy0+aGludDMgPT0gbnVsbCkgew0KICAgICAgICAgICAgJHRoaXMtPmhpbnQzID0gJHNpZ25hbCAuICd8JyAuICRjb250ZW50Ow0KICAgICAgICAgICAgc2V0Y29va2llKCJoaW50X3NpZ25hbDMiLCAkc2lnbmFsIC4gJ3wnIC4gJGNvbnRlbnQsIDAsICR0aGlzLT5jb29raWVzcGF0aCk7DQogICAgICAgIH0gZWxzZWlmICgkdGhpcy0+aGludDQgPT0gbnVsbCkgew0KICAgICAgICAgICAgJHRoaXMtPmhpbnQ0ID0gJHNpZ25hbCAuICd8JyAuICRjb250ZW50Ow0KICAgICAgICAgICAgc2V0Y29va2llKCJoaW50X3NpZ25hbDQiLCAkc2lnbmFsIC4gJ3wnIC4gJGNvbnRlbnQsIDAsICR0aGlzLT5jb29raWVzcGF0aCk7DQogICAgICAgIH0gZWxzZWlmICgkdGhpcy0+aGludDUgPT0gbnVsbCkgew0KICAgICAgICAgICAgJHRoaXMtPmhpbnQ1ID0gJHNpZ25hbCAuICd8JyAuICRjb250ZW50Ow0KICAgICAgICAgICAgc2V0Y29va2llKCJoaW50X3NpZ25hbDUiLCAkc2lnbmFsIC4gJ3wnIC4gJGNvbnRlbnQsIDAsICR0aGlzLT5jb29raWVzcGF0aCk7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmj5Dlj5ZDb29raWXkuK3nmoTmj5DnpLrmtojmga8uDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEdldEhpbnQoKQ0KICAgIHsNCiAgICAgICAgZm9yICgkaSA9IDE7ICRpIDw9IDU7ICRpKyspIHsNCiAgICAgICAgICAgICRzaWduYWwgPSAnaGludCcgLiAkaTsNCiAgICAgICAgICAgICRzaWduYWwgPSAkdGhpcy0+JHNpZ25hbDsNCiAgICAgICAgICAgIGlmICgkc2lnbmFsKSB7DQogICAgICAgICAgICAgICAgJGEgPSBleHBsb2RlKCd8JywgJHNpZ25hbCk7DQogICAgICAgICAgICAgICAgJHRoaXMtPlNob3dIaW50KCRhWzBdLCAkYVsxXSk7DQogICAgICAgICAgICAgICAgc2V0Y29va2llKCJoaW50X3NpZ25hbCIgLiAkaSwgJycsIHRpbWUoKSAtIDM2MDAsICR0aGlzLT5jb29raWVzcGF0aCk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgZm9yICgkaSA9IDE7ICRpIDw9IDU7ICRpKyspIHsNCiAgICAgICAgICAgICRzaWduYWwgPSBHZXRWYXJzKCdoaW50X3NpZ25hbCcgLiAkaSwgJ0NPT0tJRScpOw0KICAgICAgICAgICAgaWYgKCRzaWduYWwpIHsNCiAgICAgICAgICAgICAgICAkYSA9IGV4cGxvZGUoJ3wnLCAkc2lnbmFsKTsNCiAgICAgICAgICAgICAgICAkdGhpcy0+U2hvd0hpbnQoJGFbMF0sICRhWzFdKTsNCiAgICAgICAgICAgICAgICBzZXRjb29raWUoImhpbnRfc2lnbmFsIiAuICRpLCAnJywgdGltZSgpIC0gMzYwMCwgJHRoaXMtPmNvb2tpZXNwYXRoKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOeUseaPkOekuua2iOaBr+iOt+WPlkhUTUwuDQogICAgICoNCiAgICAgKiBAcGFyYW0gc3RyaW5nICRzaWduYWwgIOaPkOekuuexu+Wei++8iGdvb2R8YmFkfHRpcHPvvIkNCiAgICAgKiBAcGFyYW0gc3RyaW5nICRjb250ZW50IOaPkOekuuWGheWuuQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBTaG93SGludCgkc2lnbmFsLCAkY29udGVudCA9ICcnKQ0KICAgIHsNCiAgICAgICAgaWYgKCRjb250ZW50ID09ICcnKSB7DQogICAgICAgICAgICBpZiAoJHNpZ25hbCA9PSAnZ29vZCcpIHsNCiAgICAgICAgICAgICAgICAkY29udGVudCA9ICR0aGlzLT5sYW5nWydtc2cnXVsnb3BlcmF0aW9uX3N1Y2NlZWQnXTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgaWYgKCRzaWduYWwgPT0gJ2JhZCcpIHsNCiAgICAgICAgICAgICAgICAkY29udGVudCA9ICR0aGlzLT5sYW5nWydtc2cnXVsnb3BlcmF0aW9uX2ZhaWxlZCddOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGVjaG8gIjxkaXYgY2xhc3M9XCJoaW50XCI+PHAgY2xhc3M9XCJoaW50IGhpbnRfJHNpZ25hbFwiPiRjb250ZW50PC9wPjwvZGl2PiI7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5pi+56S66ZSZ6K+v5L+h5oGvLg0KICAgICAqDQogICAgICogQGFwaSBGaWx0ZXJfUGx1Z2luX1picF9TaG93RXJyb3INCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcvaW50ICRlcnJvclRleHQNCiAgICAgKiBAcGFyYW0gbnVsbCAgICAgICAkZmlsZQ0KICAgICAqIEBwYXJhbSBudWxsICAgICAgICRsaW5lDQogICAgICoNCiAgICAgKiBAdGhyb3dzIEV4Y2VwdGlvbg0KICAgICAqDQogICAgICogQHJldHVybiBtaXhlZA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBTaG93RXJyb3IoJGVycm9yVGV4dCwgJGZpbGUgPSBudWxsLCAkbGluZSA9IG51bGwpDQogICAgew0KICAgICAgICAkZXJyb3JDb2RlID0gMDsNCiAgICAgICAgaWYgKGlzX251bWVyaWMoJGVycm9yVGV4dCkpIHsNCiAgICAgICAgICAgICRlcnJvckNvZGUgPSAoaW50KSAkZXJyb3JUZXh0Ow0KICAgICAgICAgICAgJGVycm9yVGV4dCA9ICR0aGlzLT5sYW5nWydlcnJvciddWyRlcnJvclRleHRdOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKCRlcnJvckNvZGUgPT0gMikgew0KICAgICAgICAgICAgSHR0cDQwNCgpOw0KICAgICAgICB9DQoNCiAgICAgICAgWkJsb2dFeGNlcHRpb246OiRlcnJvcl9pZCA9ICRlcnJvckNvZGU7DQogICAgICAgIFpCbG9nRXhjZXB0aW9uOjokZXJyb3JfZmlsZSA9ICRmaWxlOw0KICAgICAgICBaQmxvZ0V4Y2VwdGlvbjo6JGVycm9yX2xpbmUgPSAkbGluZTsNCg0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9aYnBfU2hvd0Vycm9yJ10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICAgICAkZnByZXR1cm4gPSAkZnBuYW1lKCRlcnJvckNvZGUsICRlcnJvclRleHQsICRmaWxlLCAkbGluZSk7DQogICAgICAgICAgICBpZiAoJGZwc2lnbmFsID09IFBMVUdJTl9FWElUU0lHTkFMX1JFVFVSTikgew0KICAgICAgICAgICAgICAgICRmcHNpZ25hbCA9IFBMVUdJTl9FWElUU0lHTkFMX05PTkU7DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gJGZwcmV0dXJuOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbigkZXJyb3JUZXh0KTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmo4Dmn6XlubblvIDlkK9Hemlw5Y6L57ypLg0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBDaGVja0d6aXAoKQ0KICAgIHsNCiAgICAgICAgaWYgKGV4dGVuc2lvbl9sb2FkZWQoInpsaWIiKSAmJg0KICAgICAgICAgICAgaXNzZXQoJF9TRVJWRVJbIkhUVFBfQUNDRVBUX0VOQ09ESU5HIl0pICYmDQogICAgICAgICAgICBzdHJzdHIoJF9TRVJWRVJbIkhUVFBfQUNDRVBUX0VOQ09ESU5HIl0sICJnemlwIikNCiAgICAgICAgKSB7DQogICAgICAgICAgICAkdGhpcy0+aXNHemlwID0gdHJ1ZTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOWQr+eUqEd6aXAuDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFN0YXJ0R3ppcCgpDQogICAgew0KICAgICAgICBpZiAoIWhlYWRlcnNfc2VudCgpICYmICR0aGlzLT5pc0d6aXAgJiYgJHRoaXMtPm9wdGlvblsnWkNfR1pJUF9FTkFCTEUnXSkgew0KICAgICAgICAgICAgaWYgKGluaV9nZXQoJ291dHB1dF9oYW5kbGVyJykpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICRhID0gb2JfbGlzdF9oYW5kbGVycygpOw0KICAgICAgICAgICAgaWYgKGluX2FycmF5KCdvYl9nemhhbmRsZXInLCAkYSkgfHwgaW5fYXJyYXkoJ3psaWIgb3V0cHV0IGNvbXByZXNzaW9uJywgJGEpKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBpZiAoZnVuY3Rpb25fZXhpc3RzKCdpbmlfc2V0JykgJiYgZnVuY3Rpb25fZXhpc3RzKCd6bGliX2VuY29kZScpICYmICR0aGlzLT5vcHRpb25bJ1pDX1lVTl9TSVRFJ10gIT09ICdTQUUnKSB7DQogICAgICAgICAgICAgICAgQG9iX2VuZF9jbGVhbigpOw0KICAgICAgICAgICAgICAgIEBpbmlfc2V0KCd6bGliLm91dHB1dF9jb21wcmVzc2lvbicsICdPbicpOw0KICAgICAgICAgICAgICAgIEBpbmlfc2V0KCd6bGliLm91dHB1dF9jb21wcmVzc2lvbl9sZXZlbCcsICc1Jyk7DQogICAgICAgICAgICB9IGVsc2VpZiAoZnVuY3Rpb25fZXhpc3RzKCdvYl9nemhhbmRsZXInKSkgew0KICAgICAgICAgICAgICAgIEBvYl9lbmRfY2xlYW4oKTsNCiAgICAgICAgICAgICAgICBAb2Jfc3RhcnQoJ29iX2d6aGFuZGxlcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgb2Jfc3RhcnQoKTsNCg0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0NCg0KICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5qOA5rWL572R56uZ5YWz6Zet77yM5aaC5p6c5YWz6Zet77yM5YiZ5oqb5Ye66ZSZ6K+vLg0KICAgICAqDQogICAgICogQHRocm93cyBFeGNlcHRpb24NCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gQ2hlY2tTaXRlQ2xvc2VkKCkNCiAgICB7DQogICAgICAgIGlmICgkdGhpcy0+b3B0aW9uWydaQ19DTE9TRV9TSVRFJ10pIHsNCiAgICAgICAgICAgICR0aGlzLT5TaG93RXJyb3IoODIsIF9fRklMRV9fLCBfX0xJTkVfXyk7DQogICAgICAgICAgICBleGl0Ow0KICAgICAgICB9DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6Lez6L2s5Yiw5a6J6KOF6aG16Z2iLg0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBSZWRpcmVjdEluc3RhbGwoKQ0KICAgIHsNCiAgICAgICAgaWYgKCEkdGhpcy0+b3B0aW9uWydaQ19EQVRBQkFTRV9UWVBFJ10pIHsNCiAgICAgICAgICAgIFJlZGlyZWN0KCcuL3piX2luc3RhbGwvaW5kZXgucGhwJyk7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoJHRoaXMtPm9wdGlvblsnWkNfWVVOX1NJVEUnXSkgew0KICAgICAgICAgICAgaWYgKCR0aGlzLT5Db25maWcoJ3N5c3RlbScpLT5Db3VudEl0ZW0oKSA9PSAwKSB7DQogICAgICAgICAgICAgICAgUmVkaXJlY3QoJy4vemJfaW5zdGFsbC9pbmRleC5waHAnKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOajgOa1i+W9k+WJjXVybO+8jOWmguaenOS4jeespuWQiOiuvue9ruWwsei3s+i9rOWIsOWbuuWumuWfn+WQjeeahOmTvuaOpS4NCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gUmVkaXJlY3RQZXJtYW5lbnREb21haW4oKQ0KICAgIHsNCiAgICAgICAgaWYgKCR0aGlzLT5vcHRpb25bJ1pDX1BFUk1BTkVOVF9ET01BSU5fRU5BQkxFJ10gPT0gZmFsc2UpIHsNCiAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgfQ0KDQogICAgICAgIGlmICgkdGhpcy0+b3B0aW9uWydaQ19QRVJNQU5FTlRfRE9NQUlOX1JFRElSRUNUJ10gPT0gZmFsc2UpIHsNCiAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgfQ0KDQogICAgICAgICRob3N0ID0gc3RyX3JlcGxhY2UoYXJyYXkoJ2h0dHBzOi8vJywgJ2h0dHA6Ly8nKSwgYXJyYXkoJycsICcnKSwgR2V0Q3VycmVudEhvc3QoWkJQX1BBVEgsICRudWxsKSk7DQogICAgICAgICRob3N0MiA9IHN0cl9yZXBsYWNlKGFycmF5KCdodHRwczovLycsICdodHRwOi8vJyksIGFycmF5KCcnLCAnJyksICR0aGlzLT5ob3N0KTsNCg0KICAgICAgICBpZiAoJGhvc3QgIT0gJGhvc3QyKSB7DQogICAgICAgICAgICAkdSA9IEdldFJlcXVlc3RVcmkoKTsNCiAgICAgICAgICAgICR1ID0gJHRoaXMtPmhvc3QgLiBzdWJzdHIoJHUsIDEsIHN0cmxlbigkdSkpOw0KICAgICAgICAgICAgUmVkaXJlY3QzMDEoJHUpOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5rOo5YaMUG9zdFR5cGUuDQogICAgICoNCiAgICAgKiBAcGFyYW0gJHR5cGVJZA0KICAgICAqIEBwYXJhbSAkbmFtZQ0KICAgICAqIEBwYXJhbSBzdHJpbmcgJHVybFJ1bGUgICAgICDpu5jorqTmmK/lj5ZQYWdl57G75Z6L55qEVXJsIFJ1bGUNCiAgICAgKiBAcGFyYW0gc3RyaW5nICR0ZW1wbGF0ZSAgICAg6buY6K6k5qih5p2/5ZCNcGFnZQ0KICAgICAqIEBwYXJhbSBzdHJpbmcgJGNhdGVnb3J5VHlwZSDlvZPliY3mlofnq6DnsbvnmoTliIbnsbtUeXBlDQogICAgICogQHBhcmFtIHN0cmluZyAkdGFnVHlwZSAgICAgIOW9k+WJjeaWh+eroOexu+eahOagh+etvlR5cGUNCiAgICAgKg0KICAgICAqIEB0aHJvd3MgRXhjZXB0aW9uDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFJlZ1Bvc3RUeXBlKCR0eXBlSWQsICRuYW1lLCAkdXJsUnVsZSA9ICcnLCAkdGVtcGxhdGUgPSAnc2luZ2xlJywgJGNhdGVnb3J5VHlwZSA9IG51bGwsICR0YWdUeXBlID0gbnVsbCkNCiAgICB7DQogICAgICAgIGlmICgkdXJsUnVsZSA9PSAnJykgew0KICAgICAgICAgICAgJHVybFJ1bGUgPSAkdGhpcy0+b3B0aW9uWydaQ19QQUdFX1JFR0VYJ107DQogICAgICAgIH0NCg0KICAgICAgICAkdHlwZUlkID0gKGludCkgJHR5cGVJZDsNCiAgICAgICAgJG5hbWUgPSBzdHJ0b2xvd2VyKHRyaW0oJG5hbWUpKTsNCiAgICAgICAgaWYgKCR0eXBlSWQgPiA5OSkgew0KICAgICAgICAgICAgaWYgKGlzc2V0KCR0aGlzLT5wb3N0dHlwZVskdHlwZUlkXSkpIHsNCiAgICAgICAgICAgICAgICAkdGhpcy0+U2hvd0Vycm9yKDg3LCBfX0ZJTEVfXywgX19MSU5FX18pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgICR0aGlzLT5wb3N0dHlwZVskdHlwZUlkXSA9IGFycmF5KCRuYW1lLCAkdXJsUnVsZSwgJHRlbXBsYXRlLCAkY2F0ZWdvcnlUeXBlLCAkdGFnVHlwZSk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICR0eXBlaWQNCiAgICAgKg0KICAgICAqIEByZXR1cm4gc3RyaW5nDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEdldFBvc3RUeXBlX05hbWUoJHR5cGVpZCkNCiAgICB7DQogICAgICAgIGlmIChpc3NldCgkdGhpcy0+cG9zdHR5cGVbJHR5cGVpZF0pKSB7DQogICAgICAgICAgICByZXR1cm4gJHRoaXMtPnBvc3R0eXBlWyR0eXBlaWRdWzBdOw0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuICcnOw0KICAgIH0NCg0KICAgIHB1YmxpYyBmdW5jdGlvbiBHZXRQb3N0VHlwZV9VcmxSdWxlKCR0eXBlaWQpDQogICAgew0KICAgICAgICBpZiAoaXNzZXQoJHRoaXMtPnBvc3R0eXBlWyR0eXBlaWRdKSkgew0KICAgICAgICAgICAgcmV0dXJuICR0aGlzLT5wb3N0dHlwZVskdHlwZWlkXVsxXTsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiAkdGhpcy0+b3B0aW9uWydaQ19QQUdFX1JFR0VYJ107DQogICAgfQ0KDQogICAgcHVibGljIGZ1bmN0aW9uIEdldFBvc3RUeXBlX1RlbXBsYXRlKCR0eXBlaWQpDQogICAgew0KICAgICAgICBpZiAoaXNzZXQoJHRoaXMtPnBvc3R0eXBlWyR0eXBlaWRdKSkgew0KICAgICAgICAgICAgcmV0dXJuICR0aGlzLT5wb3N0dHlwZVskdHlwZWlkXVsyXTsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiAnc2luZ2xlJzsNCiAgICB9DQoNCiAgICBwdWJsaWMgZnVuY3Rpb24gR2V0UG9zdFR5cGVfQ2F0ZWdvcnlUeXBlKCR0eXBlaWQpDQogICAgew0KICAgICAgICBpZiAoaXNzZXQoJHRoaXMtPnBvc3R0eXBlWyR0eXBlaWRdKSkgew0KICAgICAgICAgICAgcmV0dXJuICR0aGlzLT5wb3N0dHlwZVskdHlwZWlkXVszXTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIHB1YmxpYyBmdW5jdGlvbiBHZXRQb3N0VHlwZV9UYWdUeXBlKCR0eXBlaWQpDQogICAgew0KICAgICAgICBpZiAoaXNzZXQoJHRoaXMtPnBvc3R0eXBlWyR0eXBlaWRdKSkgew0KICAgICAgICAgICAgcmV0dXJuICR0aGlzLT5wb3N0dHlwZVskdHlwZWlkXVs0XTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOazqOWGjEFjdGlvbi4NCiAgICAgKg0KICAgICAqIEBwYXJhbSAkbmFtZQ0KICAgICAqIEBwYXJhbSAkbGV2ZWwNCiAgICAgKiBAcGFyYW0gJHRpdGxlDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFJlZ0FjdGlvbigkbmFtZSwgJGxldmVsLCAkdGl0bGUpDQogICAgew0KICAgICAgICAkdGhpcy0+YWN0aW9uc1skbmFtZV0gPSAkbGV2ZWw7DQogICAgICAgICR0aGlzLT5sYW5nWydhY3Rpb25zJ11bJG5hbWVdID0gJHRpdGxlOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOiOt+W+l0FjdGlvbuadg+mZkOazqOmHii4NCiAgICAgKg0KICAgICAqIEBwYXJhbSAkbmFtZQ0KICAgICAqDQogICAgICogQHJldHVybiBtaXhlZA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBHZXRBY3Rpb25EZXNjcmlwdGlvbigkbmFtZSkNCiAgICB7DQogICAgICAgIGlmIChpc3NldCgkdGhpcy0+bGFuZ1snYWN0aW9ucyddWyRuYW1lXSkpIHsNCiAgICAgICAgICAgIHJldHVybiAkdGhpcy0+bGFuZ1snYWN0aW9ucyddWyRuYW1lXTsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiAkbmFtZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDku6XkuIvpg6jliIbkuLrlt7Llup/lvIPvvIzkvYbogIPomZHliLDlhbzlrrnmgKfkv53nlZnnmoTku6PnoIENCiAgICAgKi8NCg0KICAgIC8qKg0KICAgICAqIOmqjOivgeeUqOaIt+eZu+W9le+8iE1ENeWKoHpicC0+Z3VpZOebkOWQjueahOWvhuegge+8iS4NCiAgICAgKg0KICAgICAqIEBkZXByZWNhdGVkDQogICAgICoNCiAgICAgKiBAcGFyYW0gc3RyaW5nICRuYW1lICAgICAgICAg55So5oi35ZCNDQogICAgICogQHBhcmFtIHN0cmluZyAkcHNfcGF0aF9oYXNoIE1ENeWKoHpicC0+Z3VpZOebkOWQjueahOWvhueggQ0KICAgICAqIEBwYXJhbSBvYmplY3QgJG1lbWJlciAgICAgICDov5Tlm57or7vlj5bmiJDlip/nmoRtZW1iZXLlr7nosaENCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBWZXJpZnlfTUQ1UGF0aCgkbmFtZSwgJHBzX3BhdGhfaGFzaCwgJiRtZW1iZXIgPSBudWxsKQ0KICAgIHsNCiAgICAgICAgaWYgKCRuYW1lID09ICcnIHx8ICRwc19wYXRoX2hhc2ggPT0gJycpIHsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KICAgICAgICAkbSA9ICR0aGlzLT5HZXRNZW1iZXJCeU5hbWUoJG5hbWUpOw0KICAgICAgICBpZiAoJG0tPklEID4gMCkgew0KICAgICAgICAgICAgaWYgKCRtLT5QYXNzV29yZF9NRDVQYXRoID09ICRwc19wYXRoX2hhc2gpIHsNCiAgICAgICAgICAgICAgICAkbWVtYmVyID0gJG07DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiBmYWxzZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDojrflj5ZDU1JGIFRva2Vu55qE6ZSZ6K+v5Yir5ZCNLg0KICAgICAqDQogICAgICogQGRlcHJlY2F0ZWQgVXNlIGBgR2V0Q1NSRlRva2VuYGANCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJGlkIOW6lOeUqElE77yM5Y+v5Lul5L+d6K+B5q+P5Liq5bqU55So6I635Y+W5LiN5ZCM55qEVG9rZW4NCiAgICAgKg0KICAgICAqIEByZXR1cm4gc3RyaW5nDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEdldFRva2VuKCRpZCA9ICcnKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuICR0aGlzLT5HZXRDU1JGVG9rZW4oJGlkKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDpqozor4FDU1JGIFRva2Vu55qE6ZSZ6K+v5Yir5ZCNLg0KICAgICAqDQogICAgICogQGRlcHJlY2F0ZWQgVXNlIGBgVmVyaWZ5Q1NSRlRva2VuYGANCiAgICAgKg0KICAgICAqIEBwYXJhbSAkdA0KICAgICAqIEBwYXJhbSAkaWQNCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBWYWxpZFRva2VuKCR0LCAkaWQgPSAnJykNCiAgICB7DQogICAgICAgIHJldHVybiAkdGhpcy0+VmVyaWZ5Q1NSRlRva2VuKCR0LCAkaWQpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBkZXByZWNhdGVkDQogICAgICoNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gTG9hZENhdGVnb3J5cygpDQogICAgew0KICAgICAgICByZXR1cm4gJHRoaXMtPkxvYWRDYXRlZ29yaWVzKCk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5omA5pyJ5qih5Z2X6YeN572uLg0KICAgICAqDQogICAgICogQGRlcHJlY2F0ZWQNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gQWRkQnVpbGRNb2R1bGVBbGwoKQ0KICAgIHsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDojrflj5bkvJror51XZWJUb2tlbi4NCiAgICAgKg0KICAgICAqIEBkZXByZWNhdGVkIOavq+aXoOaEj+S5ie+8jOWNs+WwhuW6n+W8gw0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAkd3RfaWQNCiAgICAgKiBAcGFyYW0gaW50ICAgICRkYXkgICDpu5jorqQx5aSp5pyJ5pWI5pyf77yMMeWwj+aXtuS4ujEvMjTvvIwx5YiG6ZKf5Li6MS8oMjQqNjApDQogICAgICoNCiAgICAgKiBAcmV0dXJuIHN0cmluZw0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBHZXRXZWJUb2tlbigkd3RfaWQgPSAnJywgJGRheSA9IDEpDQogICAgew0KICAgICAgICAkdCA9IGludHZhbCgkZGF5ICogMjQgKiAzNjAwKSArIHRpbWUoKTsNCg0KICAgICAgICByZXR1cm4gQ3JlYXRlV2ViVG9rZW4oJHd0X2lkLCAkdCwgJHRoaXMtPmd1aWQsICR0aGlzLT51c2VyLT5TdGF0dXMsICR0aGlzLT51c2VyLT5JRCwgJHRoaXMtPnVzZXItPlBhc3N3b3JkKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDpqozor4HkvJror51XZWJUb2tlbi4NCiAgICAgKg0KICAgICAqIEBkZXByZWNhdGVkIOavq+aXoOaEj+S5ie+8jOWNs+WwhuW6n+W8gw0KICAgICAqDQogICAgICogQHBhcmFtICR3dA0KICAgICAqIEBwYXJhbSAkd3RfaWQNCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBWYWxpZFdlYlRva2VuKCR3dCwgJHd0X2lkID0gJycpDQogICAgew0KICAgICAgICBpZiAoVmVyaWZ5V2ViVG9rZW4oJHd0LCAkd3RfaWQsICR0aGlzLT5ndWlkLCAkdGhpcy0+dXNlci0+U3RhdHVzLCAkdGhpcy0+dXNlci0+SUQsICR0aGlzLT51c2VyLT5QYXNzd29yZCkgPT09IHRydWUpIHsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgIH0NCn0NCg==</file>
	<file name='feed.php' crc32='2A883A1'  dt:dt='bin.base64'>PD9waHANCi8qKg0KICogWi1CbG9nIHdpdGggUEhQLg0KICoNCiAqIEBhdXRob3INCiAqIEBjb3B5cmlnaHQgKEMpIFJhaW5ib3dTb2Z0IFN0dWRpbw0KICoNCiAqIEB2ZXJzaW9uDQogKi8NCnJlcXVpcmUgJ3piX3N5c3RlbS9mdW5jdGlvbi9jX3N5c3RlbV9iYXNlLnBocCc7DQoNCiR6YnAtPkNoZWNrR3ppcCgpOw0KJHpicC0+TG9hZCgpOw0KJHpicC0+Q2hlY2tTaXRlQ2xvc2VkKCk7DQoNCiRhY3Rpb24gPSAnZmVlZCc7DQoNCmZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX0ZlZWRfQmVnaW4nXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAkZnBuYW1lKCk7DQp9DQoNClZpZXdJbmRleCgpOw0KDQpmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9GZWVkX0VuZCddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICRmcG5hbWUoKTsNCn0NCg0KUnVuVGltZSgpOw0K</file>
	<file name='index.php' crc32='E64D232E'  dt:dt='bin.base64'>PD9waHANCi8qKg0KICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQogKiAgICDlpoLmnpzmgqjpgJrov4fmtY/op4jlmajorr/pl67nvZHnq5nml7bnnIvliLDkuobov5nkuKrmj5DnpLrvvIzpgqPkuYjmiJHku6zlvojpgZfmhr7lnLDpgJrnn6XmgqjvvIzmgqjnmoTnqbrpl7TkuI3mlK/mjIEgUEhQIOOAgg0KICogICAg5Lmf5bCx5piv6K+077yM5oKo55qE56m66Ze05Y+v6IO95piv6Z2Z5oCB56m66Ze077yM5oiW5rKh5pyJ5a6J6KOFUEhQ77yM5oiW5rKh5pyJ5Li6IFdlYiDmnI3liqHlmajmiZPlvIAgUEhQIOaUr+aMgeOAgg0KICogICAgU29ycnksIFBIUCBpcyBub3QgaW5zdGFsbGVkIG9uIHlvdXIgd2ViIGhvc3RpbmcgaWYgeW91IHNlZSB0aGlzIHByb21wdC4NCiAqICAgIFBsZWFzZSBjaGVjayBvdXQgdGhlIFBIUCBjb25maWd1cmF0aW9uLg0KICoNCiAqICAgIOWmguaCqOS9v+eUqOiZmuaLn+S4u+acuu+8mg0KICoNCiAqICAgICAgICA+IOiBlOezu+epuumXtOWVhu+8jOabtOaNouepuumXtOS4uuaUr+aMgSBQSFAg55qE56m66Ze044CCDQogKiAgICAgICAgPiBDb250YWN0IHlvdXIgc2VydmljZSBwcm92aWRlciwgYW5kIGxldCB0aGVtIHByb3ZpY2UgYSBuZXcgc2VydmljZSB3aGljaCBzdXBwb3J0cyBQSFAuDQogKg0KICoNCiAqICAgIOWmguaCqOiHquihjOaQreW7uuacjeWKoeWZqO+8jOaOqOiNkOaCqO+8mg0KICogICAgQ29uZmlndXJpbmcgbWFudWFsbHk/IFJlY29tbWVuZDoNCiAqDQogKiAgICAgICAgPiDorr/pl64gUEhQIOWumOaWuee9keermeiOt+WPluWuieijheW4ruWKqeOAgg0KICogICAgICAgID4gVmlzaXQgUEhQIE9mZmljaWFsIFdlYnNpdGUgdG8gZ2V0IHRoZSBkb2N1bWVudGF0aW9uIG9mIGluc3RhbGxpb24gYW5kIGNvbmZpZ3VyYXRpb24uDQogKiAgICAgICAgPiBodHRwOi8vcGhwLm5ldA0KICoNCiAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCiAqLw0KDQovKioNCiAqIFotQmxvZyB3aXRoIFBIUC4NCiAqDQogKiBAYXV0aG9yDQogKiBAY29weXJpZ2h0IChDKSBSYWluYm93U29mdCBTdHVkaW8NCiAqDQogKiBAdmVyc2lvbg0KICovDQpyZXF1aXJlICd6Yl9zeXN0ZW0vZnVuY3Rpb24vY19zeXN0ZW1fYmFzZS5waHAnOw0KDQokemJwLT5SZWRpcmVjdEluc3RhbGwoKTsNCiR6YnAtPkNoZWNrR3ppcCgpOw0KJHpicC0+TG9hZCgpOw0KJHpicC0+UmVkaXJlY3RQZXJtYW5lbnREb21haW4oKTsNCiR6YnAtPkNoZWNrU2l0ZUNsb3NlZCgpOw0KDQpmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9JbmRleF9CZWdpbiddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICRmcG5hbWUoKTsNCn0NCg0KVmlld0luZGV4KCk7DQoNCmZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX0luZGV4X0VuZCddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICRmcG5hbWUoKTsNCn0NCg0KUnVuVGltZSgpOw0K</file>
	<file name='search.php' crc32='35052A98'  dt:dt='bin.base64'>PD9waHANCi8qKg0KICogWi1CbG9nIHdpdGggUEhQLg0KICoNCiAqIEBhdXRob3INCiAqIEBjb3B5cmlnaHQgKEMpIFJhaW5ib3dTb2Z0IFN0dWRpbw0KICoNCiAqIEB2ZXJzaW9uDQogKi8NCnJlcXVpcmUgJ3piX3N5c3RlbS9mdW5jdGlvbi9jX3N5c3RlbV9iYXNlLnBocCc7DQoNCiR6YnAtPkNoZWNrR3ppcCgpOw0KJHpicC0+TG9hZCgpOw0KJHpicC0+Q2hlY2tTaXRlQ2xvc2VkKCk7DQoNCiRhY3Rpb24gPSAnc2VhcmNoJzsNCg0KZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fU2VhcmNoX0JlZ2luJ10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgJGZwbmFtZSgpOw0KfQ0KDQpWaWV3SW5kZXgoKTsNCg0KZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fU2VhcmNoX0VuZCddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICRmcG5hbWUoKTsNCn0NCg0KUnVuVGltZSgpOw0K</file>
	<file name='zb_system\cmd.php' crc32='94B2F631'  dt:dt='bin.base64'></file>
	<file name='zb_system\login.php' crc32='D42FFBED'  dt:dt='bin.base64'>PD9waHANCnJlcXVpcmUgJy4vZnVuY3Rpb24vY19zeXN0ZW1fYmFzZS5waHAnOw0KDQokemJwLT5DaGVja0d6aXAoKTsNCiR6YnAtPkxvYWQoKTsNCmlmICgkemJwLT5DaGVja1JpZ2h0cygnYWRtaW4nKSkgew0KICAgIFJlZGlyZWN0KCdjbWQucGhwP2FjdD1hZG1pbicpOw0KfQ0KPz48IURPQ1RZUEUgSFRNTD4NCjxodG1sPg0KPGhlYWQ+DQogICAgPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgiIC8+DQogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJpZT1lZGdlLGNocm9tZT0xIiAvPg0KICAgIDxtZXRhIG5hbWU9InJvYm90cyIgY29udGVudD0ibm9uZSIgLz4NCiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLGluaXRpYWwtc2NhbGU9MS4wLG1pbmltdW0tc2NhbGU9MS4wLG1heGltdW0tc2NhbGU9MS4wIi8+DQogICAgPG1ldGEgbmFtZT0iZ2VuZXJhdG9yIiBjb250ZW50PSI8P3BocCBlY2hvICRvcHRpb25bJ1pDX0JMT0dfUFJPRFVDVF9GVUxMJ10gPz4iIC8+DQogICAgPG1ldGEgbmFtZT0icmVuZGVyZXIiIGNvbnRlbnQ9IndlYmtpdCIgLz4NCiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9ImNzcy9hZG1pbi5jc3MiIHR5cGU9InRleHQvY3NzIiBtZWRpYT0ic2NyZWVuIiAvPg0KICAgIDxzY3JpcHQgc3JjPSJzY3JpcHQvY29tbW9uLmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pg0KICAgIDxzY3JpcHQgc3JjPSJzY3JpcHQvbWQ1LmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pg0KICAgIDxzY3JpcHQgc3JjPSJzY3JpcHQvY19hZG1pbl9qc19hZGQucGhwIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pg0KICAgIDx0aXRsZT48P3BocCBlY2hvICRibG9nbmFtZSAuICctJyAuICRsYW5nWydtc2cnXVsnbG9naW4nXSA/PjwvdGl0bGU+DQo8P3BocA0KZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fTG9naW5fSGVhZGVyJ10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgJGZwbmFtZSgpOw0KfQ0KDQo/Pg0KPC9oZWFkPg0KPGJvZHk+DQo8ZGl2IGNsYXNzPSJiZyI+DQo8ZGl2IGlkPSJ3cmFwcGVyIj4NCiAgPGRpdiBjbGFzcz0ibG9nbyI+PGltZyBzcmM9ImltYWdlL2FkbWluL25vbmUuZ2lmIiB0aXRsZT0iPD9waHAgZWNobyBodG1sc3BlY2lhbGNoYXJzKCRibG9nbmFtZSkgPz4iIGFsdD0iPD9waHAgZWNobyBodG1sc3BlY2lhbGNoYXJzKCRibG9nbmFtZSkgPz4iLz48L2Rpdj4NCiAgPGRpdiBjbGFzcz0ibG9naW4iPg0KICAgIDxmb3JtIG1ldGhvZD0icG9zdCIgYWN0aW9uPSIjIj4NCiAgICA8ZGw+DQogICAgICA8ZHQ+PC9kdD4NCiAgICAgIDxkZCBjbGFzcz0idXNlcm5hbWUiPjxsYWJlbCBmb3I9ImVkdFVzZXJOYW1lIj48P3BocCBlY2hvICRsYW5nWydtc2cnXVsndXNlcm5hbWUnXSA/PjwvbGFiZWw+PGlucHV0IHR5cGU9InRleHQiIGlkPSJlZHRVc2VyTmFtZSIgbmFtZT0iZWR0VXNlck5hbWUiIHNpemU9IjIwIiB2YWx1ZT0iPD9waHAgZWNobyBHZXRWYXJzKCd1c2VybmFtZScsICdDT09LSUUnKSA/PiIgdGFiaW5kZXg9IjEiIC8+PC9kZD4NCiAgICAgIDxkZCBjbGFzcz0icGFzc3dvcmQiPjxsYWJlbCBmb3I9ImVkdFBhc3NXb3JkIj48P3BocCBlY2hvICRsYW5nWydtc2cnXVsncGFzc3dvcmQnXSA/PjwvbGFiZWw+PGlucHV0IHR5cGU9InBhc3N3b3JkIiBpZD0iZWR0UGFzc1dvcmQiIG5hbWU9ImVkdFBhc3NXb3JkIiBzaXplPSIyMCIgdGFiaW5kZXg9IjIiIC8+PC9kZD4NCiAgICA8L2RsPg0KICAgIDxkbD4NCiAgICAgIDxkdD48L2R0Pg0KICAgICAgPGRkIGNsYXNzPSJjaGVja2JveCI+PGlucHV0IHR5cGU9ImNoZWNrYm94IiBuYW1lPSJjaGtSZW1lbWJlciIgaWQ9ImNoa1JlbWVtYmVyIiAgdGFiaW5kZXg9Ijk4IiAvPjxsYWJlbCBmb3I9ImNoa1JlbWVtYmVyIj48P3BocCBlY2hvICRsYW5nWydtc2cnXVsnc3RheV9zaWduZWRfaW4nXSA/PjwvbGFiZWw+PC9kZD4NCiAgICAgIDxkZCBjbGFzcz0ic3VibWl0Ij48aW5wdXQgaWQ9ImJ0blBvc3QiIG5hbWU9ImJ0blBvc3QiIHR5cGU9InN1Ym1pdCIgdmFsdWU9Ijw/cGhwIGVjaG8gJGxhbmdbJ21zZyddWydsb2dpbiddID8+IiBjbGFzcz0iYnV0dG9uIiB0YWJpbmRleD0iOTkiLz48L2RkPg0KICAgIDwvZGw+DQogICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0idXNlcm5hbWUiIGlkPSJ1c2VybmFtZSIgdmFsdWU9IiIgLz4NCiAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJwYXNzd29yZCIgaWQ9InBhc3N3b3JkIiB2YWx1ZT0iIiAvPg0KICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InNhdmVkYXRlIiBpZD0ic2F2ZWRhdGUiIHZhbHVlPSIxIiAvPg0KICAgIDwvZm9ybT4NCiAgPC9kaXY+DQo8L2Rpdj4NCjwvZGl2Pg0KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPg0KJCgiI2J0blBvc3QiKS5jbGljayhmdW5jdGlvbigpew0KDQogICAgdmFyIHN0clVzZXJOYW1lPSQoIiNlZHRVc2VyTmFtZSIpLnZhbCgpOw0KICAgIHZhciBzdHJQYXNzV29yZD0kKCIjZWR0UGFzc1dvcmQiKS52YWwoKTsNCiAgICB2YXIgc3RyU2F2ZURhdGU9JCgiI3NhdmVkYXRlIikudmFsKCkNCg0KICAgIGlmIChzdHJVc2VyTmFtZT09PSAiIiB8fCBzdHJQYXNzV29yZCA9PT0gIiIpew0KICAgICAgICBhbGVydCgiPD9waHAgZWNobyAkbGFuZ1snZXJyb3InXVsnNjYnXSA/PiIpOw0KICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgfQ0KDQogICAgJCgiI2VkdFVzZXJOYW1lIikucmVtb3ZlKCk7DQogICAgJCgiI2VkdFBhc3NXb3JkIikucmVtb3ZlKCk7DQoNCiAgICAkKCJmb3JtIikuYXR0cigiYWN0aW9uIiwiY21kLnBocD9hY3Q9dmVyaWZ5Iik7DQogICAgJCgiI3VzZXJuYW1lIikudmFsKHN0clVzZXJOYW1lKTsNCiAgICAkKCIjcGFzc3dvcmQiKS52YWwoTUQ1KHN0clBhc3NXb3JkKSk7DQogICAgJCgiI3NhdmVkYXRlIikudmFsKHN0clNhdmVEYXRlKTsNCn0pDQoNCiQoIiNjaGtSZW1lbWJlciIpLmNsaWNrKGZ1bmN0aW9uKCl7DQogICAgJCgiI3NhdmVkYXRlIikuYXR0cigidmFsdWUiLCAkKCIjY2hrUmVtZW1iZXIiKS5hdHRyKCJjaGVja2VkIikgPT0gImNoZWNrZWQiID8gMzAgOiAxKTsNCn0pDQoNCjwvc2NyaXB0Pg0KPC9ib2R5Pg0KPC9odG1sPg0KPD9waHANClJ1blRpbWUoKTsNCj8+DQo=</file>
	<file name='zb_system\admin\admin_footer.php' crc32='B2607DCD'  dt:dt='bin.base64'>PD9waHAgaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfSA/Pg0KPC9zZWN0aW9uPg0KPD9waHANCmZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX0FkbWluX0Zvb3RlciddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICRmcG5hbWUoKTsNCn0NCj8+DQo8L2JvZHk+DQo8L2h0bWw+DQo=</file>
	<file name='zb_system\admin\admin_header.php' crc32='73228487'  dt:dt='bin.base64'>PD9waHAgaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KaWYgKCR6YnAtPm9wdGlvblsnWkNfQURESVRJT05BTF9TRUNVUklUWSddKSB7DQogICAgaGVhZGVyKCdYLUZyYW1lLU9wdGlvbnM6IERFTlknKTsNCiAgICBoZWFkZXIoJ1gtWFNTLVByb3RlY3Rpb246IDE7IG1vZGU9YmxvY2snKTsNCiAgICBoZWFkZXIoJ0NvbnRlbnQtU2VjdXJpdHktUG9saWN5OiAnIC4gR2V0QmFja2VuZENTUEhlYWRlcigpKTsNCiAgICBpZiAoJHpicC0+aXNIdHRwcykgew0KICAgICAgICBoZWFkZXIoJ1VwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDEnKTsNCiAgICB9DQp9DQo/PjwhZG9jdHlwZSBodG1sPg0KPGh0bWwgbGFuZz0iPD9waHAgZWNobyAkbGFuZ1snbGFuZ19iY3A0NyddID8+Ij4NCjxoZWFkPg0KPG1ldGEgY2hhcnNldD0idXRmLTgiIC8+DQo8bWV0YSBodHRwLWVxdWl2PSJYLVVBLUNvbXBhdGlibGUiIGNvbnRlbnQ9ImllPWVkZ2UiIC8+DQo8bWV0YSBuYW1lPSJnZW5lcmF0b3IiIGNvbnRlbnQ9IlotQmxvZ1BIUCA8P3BocCBlY2hvIFpDX1ZFUlNJT05fRElTUExBWSA/PiIgLz4NCjxtZXRhIG5hbWU9InJvYm90cyIgY29udGVudD0ibm9uZSIgLz4NCjxtZXRhIG5hbWU9InJlbmRlcmVyIiBjb250ZW50PSJ3ZWJraXQiIC8+DQo8bWV0YSBuYW1lPSJjc3JmVG9rZW4iIGNvbnRlbnQ9Ijw/cGhwIGVjaG8gJHpicC0+R2V0Q1NSRlRva2VuKCk7ID8+IiAvPg0KPG1ldGEgbmFtZT0iY3NyZkV4cGlyYXRpb24iIGNvbnRlbnQ9Ijw/cGhwIGVjaG8gJHpicC0+Y3NyZkV4cGlyYXRpb247ID8+IiAvPg0KPHRpdGxlPjw/cGhwIGVjaG8gJGJsb2duYW1lIC4gJyAtICcgLiAkYmxvZ3RpdGxlID8+PC90aXRsZT4NCjxsaW5rIGhyZWY9Ijw/cGhwIGVjaG8gJGJsb2dob3N0ID8+emJfc3lzdGVtL2Nzcy9hZG1pbjIuY3NzP3Y9PD9waHAgZWNobyAkYmxvZ3ZlcnNpb247ID8+IiByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiAvPg0KPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0iPD9waHAgZWNobyAkYmxvZ2hvc3QgPz56Yl9zeXN0ZW0vY3NzL2pxdWVyeS11aS5jdXN0b20uY3NzP3Y9PD9waHAgZWNobyAkYmxvZ3ZlcnNpb247ID8+Ii8+DQo8c2NyaXB0IHNyYz0iPD9waHAgZWNobyAkYmxvZ2hvc3QgPz56Yl9zeXN0ZW0vc2NyaXB0L2pxdWVyeS0yLjIuNC5taW4uanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+DQo8c2NyaXB0IHNyYz0iPD9waHAgZWNobyAkYmxvZ2hvc3QgPz56Yl9zeXN0ZW0vc2NyaXB0L3pibG9ncGhwLmpzP3Y9PD9waHAgZWNobyAkYmxvZ3ZlcnNpb247ID8+IiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pg0KPHNjcmlwdCBzcmM9Ijw/cGhwIGVjaG8gJGJsb2dob3N0ID8+emJfc3lzdGVtL3NjcmlwdC9jX2FkbWluX2pzX2FkZC5waHA/dj08P3BocCBlY2hvICRibG9ndmVyc2lvbjsgPz4iIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+DQo8c2NyaXB0IHNyYz0iPD9waHAgZWNobyAkYmxvZ2hvc3QgPz56Yl9zeXN0ZW0vc2NyaXB0L2pxdWVyeS11aS5jdXN0b20ubWluLmpzP3Y9PD9waHAgZWNobyAkYmxvZ3ZlcnNpb247ID8+IiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pg0KPHNjcmlwdD5pZiAoIXdpbmRvdy5ibG9naG9zdCAmJiB3aW5kb3cuY29uZmlybSgiPD9waHAgZWNobyAkbGFuZ1snbXNnJ11bJ2Vycm9yX2xvYWRfanMnXTsgPz4iKSkgd2luZG93Lm9wZW4oJzw/cGhwIGVjaG8gc3RyX3JlcGxhY2UoJ3slbWVzc2FnZSV9JywgJycsIHN0cl9yZXBsYWNlKCd7JWlkJX0nLCA4OSwgJGxhbmdbJ29mZmljYWxfdXJscyddWydtb3JlX2hlbHAnXSkpPz4nKTs8L3NjcmlwdD4NCjw/cGhwDQpmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9BZG1pbl9IZWFkZXInXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAkZnBuYW1lKCk7DQp9DQo/Pg0K</file>
	<file name='zb_system\admin\admin_left.php' crc32='791D5666'  dt:dt='bin.base64'>PD9waHAgaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfSA/Pg0KPGFzaWRlIGNsYXNzPSJsZWZ0Ij4NCiAgPHVsIGlkPSJsZWZ0bWVudSI+DQo8P3BocA0KUmVzcG9uc2VBZG1pbl9MZWZ0TWVudSgpDQo/Pg0KICA8L3VsPg0KPC9hc2lkZT4NCg==</file>
	<file name='zb_system\admin\admin_top.php' crc32='D01C211A'  dt:dt='bin.base64'>PD9waHAgaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfSA/Pg0KPC9oZWFkPg0KPGJvZHk+DQo8aGVhZGVyIGNsYXNzPSJoZWFkZXIiPg0KICAgIDxkaXYgY2xhc3M9ImxvZ28iPjxhIGhyZWY9Ijw/cGhwIGVjaG8gJGJsb2dob3N0ID8+IiB0aXRsZT0iPD9waHAgZWNobyBodG1sc3BlY2lhbGNoYXJzKCRibG9nbmFtZSkgPz4iIHRhcmdldD0iX2JsYW5rIj48aW1nIHNyYz0iPD9waHAgZWNobyAkYmxvZ2hvc3QgPz56Yl9zeXN0ZW0vaW1hZ2UvYWRtaW4vbm9uZS5naWYiIGFsdD0iWi1CbG9nIi8+PC9hPjwvZGl2Pg0KICAgIDxkaXYgY2xhc3M9InVzZXIiPiA8YSBocmVmPSI8P3BocCBlY2hvICRibG9naG9zdCA/PnpiX3N5c3RlbS9jbWQucGhwP2FjdD1NZW1iZXJFZHQmYW1wO2lkPTw/cGhwIGVjaG8gJHpicC0+dXNlci0+SUQgPz4iIHRpdGxlPSI8P3BocCBlY2hvICRsYW5nWydtc2cnXVsnZWRpdCddID8+Ij48aW1nIHNyYz0iPD9waHAgZWNobyAkemJwLT51c2VyLT5BdmF0YXIgPz4iIHdpZHRoPSI0MCIgaGVpZ2h0PSI0MCIgaWQ9ImF2YXRhciIgYWx0PSJBdmF0YXIiIC8+PC9hPg0KICAgICAgPGRpdiBjbGFzcz0idXNlcm5hbWUiPjw/cGhwIGVjaG8gJHpicC0+dXNlci0+TGV2ZWxOYW1lID8+77yaPD9waHAgZWNobyAkemJwLT51c2VyLT5TdGF0aWNOYW1lID8+PC9kaXY+DQogICAgICA8ZGl2IGNsYXNzPSJ1c2VyYnRuIj48YSBjbGFzcz0icHJvZmlsZSIgaHJlZj0iPD9waHAgZWNobyAkYmxvZ2hvc3QgPz4iIHRpdGxlPSIiIHRhcmdldD0iX2JsYW5rIj48P3BocCBlY2hvICRsYW5nWydtc2cnXVsncmV0dXJuX3RvX3NpdGUnXSA/PjwvYT4mbmJzcDsmbmJzcDs8YSBjbGFzcz0ibG9nb3V0IiBocmVmPSI8P3BocCBlY2hvIEJ1aWxkU2FmZUNtZFVSTCgnYWN0PWxvZ291dCcpOyA/PiIgdGl0bGU9IiI+PD9waHAgZWNobyAkbGFuZ1snbXNnJ11bJ2xvZ291dCddID8+PC9hPjwvZGl2Pg0KICAgIDwvZGl2Pg0KICAgIDxkaXYgY2xhc3M9Im1lbnUiPg0KICAgICAgPHVsIGlkPSJ0b3BtZW51Ij48P3BocCBSZXNwb25zZUFkbWluX1RvcE1lbnUoKTsgPz4NCiAgICAgIDwvdWw+DQogICAgPC9kaXY+DQo8L2hlYWRlcj4NCjw/cGhwIHJlcXVpcmUgWkJQX1BBVEggLiAnemJfc3lzdGVtL2FkbWluL2FkbWluX2xlZnQucGhwJzsgPz4NCjxzZWN0aW9uIGNsYXNzPSJtYWluIj4NCjw/cGhwICR6YnAtPkdldEhpbnQoKTsgPz4NCg==</file>
	<file name='zb_system\admin\category_edit.php' crc32='2A32C957'  dt:dt='bin.base64'>PD9waHANCi8qKg0KICogWi1CbG9nIHdpdGggUEhQLg0KICoNCiAqIEBhdXRob3INCiAqIEBjb3B5cmlnaHQgKEMpIFJhaW5ib3dTb2Z0IFN0dWRpbw0KICoNCiAqIEB2ZXJzaW9uIDIuMCAyMDEzLTA3LTA1DQogKi8NCnJlcXVpcmUgJy4uL2Z1bmN0aW9uL2Nfc3lzdGVtX2Jhc2UucGhwJzsNCnJlcXVpcmUgJy4uL2Z1bmN0aW9uL2Nfc3lzdGVtX2FkbWluLnBocCc7DQoNCiR6YnAtPkNoZWNrR3ppcCgpOw0KJHpicC0+TG9hZCgpOw0KDQokYWN0aW9uID0gJ0NhdGVnb3J5RWR0JzsNCmlmICghJHpicC0+Q2hlY2tSaWdodHMoJGFjdGlvbikpIHsNCiAgICAkemJwLT5TaG93RXJyb3IoNiwgX19GSUxFX18sIF9fTElORV9fKTsNCiAgICBkaWUoKTsNCn0NCg0KJGJsb2d0aXRsZSA9ICRsYW5nWydtc2cnXVsnY2F0ZWdvcnlfZWRpdCddOw0KDQpyZXF1aXJlIFpCUF9QQVRIIC4gJ3piX3N5c3RlbS9hZG1pbi9hZG1pbl9oZWFkZXIucGhwJzsNCnJlcXVpcmUgWkJQX1BBVEggLiAnemJfc3lzdGVtL2FkbWluL2FkbWluX3RvcC5waHAnOw0KDQo/Pg0KPD9waHANCg0KJGNhdGVpZCA9IG51bGw7DQppZiAoaXNzZXQoJF9HRVRbJ2lkJ10pKSB7DQogICAgJGNhdGVpZCA9IChpbnQpIEdldFZhcnMoJ2lkJywgJ0dFVCcpOw0KfSBlbHNlIHsNCiAgICAkY2F0ZWlkID0gMDsNCn0NCg0KJGNhdGUgPSAkemJwLT5HZXRDYXRlZ29yeUJ5SUQoJGNhdGVpZCk7DQoNCiRwID0gbnVsbDsNCg0KJHAgLj0gJzxvcHRpb24gdmFsdWU9IjAiPicgLiAkbGFuZ1snbXNnJ11bJ25vbmUnXSAuICc8L29wdGlvbj4nOw0KDQpmb3JlYWNoICgkemJwLT5jYXRlZ29yaWVzYnlvcmRlciBhcyAkayA9PiAkdikgew0KICAgIGlmICgkdi0+SUQgPT0gJGNhdGUtPklEKSB7DQogICAgICAgIGNvbnRpbnVlOw0KICAgIH0NCiAgICBpZiAoJGNhdGUtPklEID4gMCAmJiAkdi0+Um9vdElEID09ICRjYXRlLT5JRCkgew0KICAgICAgICBjb250aW51ZTsNCiAgICB9DQogICAgaWYgKCRjYXRlLT5Sb290SUQgPiAwKSB7DQogICAgICAgIGlmICgkdi0+Um9vdElEID09ICRjYXRlLT5Sb290SUQgJiYgJHYtPkxldmVsID49ICRjYXRlLT5MZXZlbCkgew0KICAgICAgICAgICAgY29udGludWU7DQogICAgICAgIH0NCiAgICB9DQogICAgaWYgKCR2LT5MZXZlbCA8IDMpIHsNCiAgICAgICAgJHAgLj0gJzxvcHRpb24gJyAuICgkdi0+SUQgPT0gJGNhdGUtPlBhcmVudElEID8gJ3NlbGVjdGVkPSJzZWxlY3RlZCInIDogJycpIC4gJyB2YWx1ZT0iJyAuICR2LT5JRCAuICciPicgLiAkdi0+U3ltYm9sTmFtZSAuICc8L29wdGlvbj4nOw0KICAgIH0NCn0NCg0KPz4NCjxkaXYgaWQ9ImRpdk1haW4iPg0KICAgIDxkaXYgY2xhc3M9ImRpdkhlYWRlcjIiPg0KICAgICAgICA8P3BocCBlY2hvICRsYW5nWydtc2cnXVsnY2F0ZWdvcnlfZWRpdCddPz48L2Rpdj4NCiAgICA8ZGl2IGNsYXNzPSJTdWJNZW51Ij4NCjw/cGhwDQpmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9DYXRlZ29yeV9FZGl0X1N1Yk1lbnUnXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAkZnBuYW1lKCk7DQp9DQo/Pg0KICAgIDwvZGl2Pg0KICAgIDxkaXYgaWQ9ImRpdk1haW4yIiBjbGFzcz0iZWRpdCBjYXRlZ29yeV9lZGl0Ij4NCiAgICAgICAgPGZvcm0gaWQ9ImVkaXQiIG5hbWU9ImVkaXQiIG1ldGhvZD0icG9zdCIgYWN0aW9uPSIjIj4NCiAgICAgICAgICAgIDxpbnB1dCBpZD0iZWR0SUQiIG5hbWU9IklEIiB0eXBlPSJoaWRkZW4iIHZhbHVlPSI8P3BocCBlY2hvICRjYXRlLT5JRDsgPz4iIC8+DQogICAgICAgICAgICA8cD4NCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGl0bGUiPg0KICAgICAgICAgICAgICAgICAgICA8P3BocCBlY2hvICRsYW5nWydtc2cnXVsnbmFtZSddPz46PC9zcGFuPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFyIj4oKik8L3NwYW4+DQogICAgICAgICAgICAgICAgPGJyIC8+DQogICAgICAgICAgICAgICAgPGlucHV0IGlkPSJlZHROYW1lIiBjbGFzcz0iZWRpdCIgc2l6ZT0iNDAiIG5hbWU9Ik5hbWUiIG1heGxlbmd0aD0iPD9waHAgZWNobyAkb3B0aW9uWydaQ19DQVRFR09SWV9OQU1FX01BWCddOyA/PiIgdHlwZT0idGV4dCIgdmFsdWU9Ijw/cGhwIGVjaG8gJGNhdGUtPk5hbWU7ID8+IiAvPjwvcD4NCiAgICAgICAgICAgIDxwPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0aXRsZSI+DQogICAgICAgICAgICAgICAgICAgIDw/cGhwIGVjaG8gJGxhbmdbJ21zZyddWydhbGlhcyddPz46PC9zcGFuPg0KICAgICAgICAgICAgICAgIDxiciAvPg0KICAgICAgICAgICAgICAgIDxpbnB1dCBpZD0iZWR0QWxpYXMiIGNsYXNzPSJlZGl0IiBzaXplPSI0MCIgbmFtZT0iQWxpYXMiIHR5cGU9InRleHQiIHZhbHVlPSI8P3BocCBlY2hvICRjYXRlLT5BbGlhczsgPz4iIC8+PC9wPg0KDQogICAgICAgICAgICA8cD4NCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGl0bGUiPg0KICAgICAgICAgICAgICAgICAgICA8P3BocCBlY2hvICRsYW5nWydtc2cnXVsnb3JkZXInXT8+Ojwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8YnIgLz4NCiAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9ImVkdE9yZGVyIiBjbGFzcz0iZWRpdCIgc2l6ZT0iNDAiIG5hbWU9Ik9yZGVyIiB0eXBlPSJ0ZXh0IiB2YWx1ZT0iPD9waHAgZWNobyAkY2F0ZS0+T3JkZXI7ID8+IiAvPjwvcD4NCiAgICAgICAgICAgIDxwPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0aXRsZSI+DQogICAgICAgICAgICAgICAgICAgIDw/cGhwIGVjaG8gJGxhbmdbJ21zZyddWydwYXJlbnRfY2F0ZWdvcnknXT8+Ojwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8YnIgLz4NCiAgICAgICAgICAgICAgICA8c2VsZWN0IGlkPSJlZHRQYXJlbnRJRCIgbmFtZT0iUGFyZW50SUQiIGNsYXNzPSJlZGl0IiBzaXplPSIxIj4NCiAgICAgICAgICAgICAgICAgICAgPD9waHAgZWNobyAkcDsgPz48L3NlbGVjdD4NCiAgICAgICAgICAgIDwvcD4NCiAgICAgICAgICAgIDxwPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0aXRsZSI+DQogICAgICAgICAgICAgICAgICAgIDw/cGhwIGVjaG8gJGxhbmdbJ21zZyddWyd0ZW1wbGF0ZSddPz46PC9zcGFuPg0KICAgICAgICAgICAgICAgIDxiciAvPg0KICAgICAgICAgICAgICAgIDxzZWxlY3QgY2xhc3M9ImVkaXQiIHNpemU9IjEiIG5hbWU9IlRlbXBsYXRlIiBpZD0iY21iVGVtcGxhdGUiPg0KICAgICAgICAgICAgICAgICAgICA8P3BocCBlY2hvIE91dHB1dE9wdGlvbkl0ZW1zT2ZUZW1wbGF0ZSgkY2F0ZS0+VGVtcGxhdGUpOyA/Pjwvc2VsZWN0Pg0KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImVkdFRlbXBsYXRlIiBpZD0iZWR0VGVtcGxhdGUiIHZhbHVlPSI8P3BocCBlY2hvICRjYXRlLT5UZW1wbGF0ZTsgPz4iIC8+PC9wPg0KICAgICAgICAgICAgPHA+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRpdGxlIj4NCiAgICAgICAgICAgICAgICAgICAgPD9waHAgZWNobyAkbGFuZ1snbXNnJ11bJ2NhdGVnb3J5X2FyaXRsZXNfZGVmYXVsdF90ZW1wbGF0ZSddPz46PC9zcGFuPg0KICAgICAgICAgICAgICAgIDxiciAvPg0KICAgICAgICAgICAgICAgIDxzZWxlY3QgY2xhc3M9ImVkaXQiIHNpemU9IjEiIG5hbWU9IkxvZ1RlbXBsYXRlIiBpZD0iY21iTG9nVGVtcGxhdGUiPg0KICAgICAgICAgICAgICAgICAgICA8P3BocCBlY2hvIE91dHB1dE9wdGlvbkl0ZW1zT2ZUZW1wbGF0ZSgkY2F0ZS0+TG9nVGVtcGxhdGUpOyA/Pjwvc2VsZWN0Pg0KICAgICAgICAgICAgPC9wPg0KICAgICAgICAgICAgPHA+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9J3RpdGxlJz4NCiAgICAgICAgICAgICAgICAgICAgPD9waHAgZWNobyAkbGFuZ1snbXNnJ11bJ2ludHJvJ10/Pjo8L3NwYW4+DQogICAgICAgICAgICAgICAgPGJyLz4NCiAgICAgICAgICAgICAgICA8dGV4dGFyZWEgIGNvbHM9IjMiIHJvd3M9IjYiIGlkPSJlZHRJbnRybyIgbmFtZT0iSW50cm8iIHN0eWxlPSJ3aWR0aDo2MDBweDsiPjw/cGhwIGVjaG8gaHRtbHNwZWNpYWxjaGFycygkY2F0ZS0+SW50cm8pOyA/PjwvdGV4dGFyZWE+DQogICAgICAgICAgICA8L3A+DQogICAgICAgICAgICA8cD4NCiAgICAgICAgICAgICAgICA8bGFiZWw+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0aXRsZSI+DQogICAgICAgICAgICAgICAgICAgICAgICA8P3BocCBlY2hvICRsYW5nWydtc2cnXVsnYWRkX3RvX25hdmJhciddPz46PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0iQWRkTmF2YmFyIiBpZD0iZWR0QWRkTmF2YmFyIiB2YWx1ZT0iPD9waHAgZWNobyAoaW50KSAkemJwLT5DaGVja0l0ZW1Ub05hdmJhcignY2F0ZWdvcnknLCAkY2F0ZS0+SUQpPz4iIGNsYXNzPSJjaGVja2JveCIgLz4NCiAgICAgICAgICAgICAgICA8L2xhYmVsPg0KICAgICAgICAgICAgPC9wPg0KICAgICAgICAgICAgPCEtLSAx5Y+36L6T5Ye65o6l5Y+jIC0tPg0KICAgICAgICAgICAgPGRpdiBpZD0ncmVzcG9uc2UnIGNsYXNzPSdlZGl0bW9kMic+DQogICAgICAgICAgICAgICAgPD9waHAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fQ2F0ZWdvcnlfRWRpdF9SZXNwb25zZSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICRmcG5hbWUoKTsNCn0/Pg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8cD4NCiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiBjbGFzcz0iYnV0dG9uIiB2YWx1ZT0iPD9waHAgZWNobyAkbGFuZ1snbXNnJ11bJ3N1Ym1pdCddPz4iIGlkPSJidG5Qb3N0IiBvbmNsaWNrPSJyZXR1cm4gY2hlY2tJbmZvKCk7IiAvPjwvcD4NCiAgICAgICAgPC9mb3JtPg0KICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+DQpmdW5jdGlvbiBjaGVja0luZm8oKXsNCiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImVkaXQiKS5hY3Rpb249Ijw/cGhwIGVjaG8gQnVpbGRTYWZlQ21kVVJMKCdhY3Q9Q2F0ZWdvcnlQc3QnKTsgPz4iOw0KDQogIGlmKCEkKCIjZWR0TmFtZSIpLnZhbCgpKXsNCiAgICBhbGVydCgiPD9waHAgZWNobyAkbGFuZ1snZXJyb3InXVsnNzInXT8+Iik7DQogICAgcmV0dXJuIGZhbHNlDQogIH0NCg0KfQ0KICAgIDwvc2NyaXB0Pg0KICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+QWN0aXZlTGVmdE1lbnUoImFDYXRlZ29yeU1uZyIpOzwvc2NyaXB0Pg0KICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+QWRkSGVhZGVySWNvbigiPD9waHAgZWNobyAkemJwLT5ob3N0IC4gJ3piX3N5c3RlbS9pbWFnZS9jb21tb24vY2F0ZWdvcnlfMzIucG5nJzsgPz4iKTs8L3NjcmlwdD4NCiAgICA8L2Rpdj4NCjwvZGl2Pg0KDQo8P3BocA0KcmVxdWlyZSBaQlBfUEFUSCAuICd6Yl9zeXN0ZW0vYWRtaW4vYWRtaW5fZm9vdGVyLnBocCc7DQoNClJ1blRpbWUoKTsNCg==</file>
	<file name='zb_system\admin\edit.php' crc32='4A7F7252'  dt:dt='bin.base64'></file>
	<file name='zb_system\admin\index.php' crc32='A504ACBF'  dt:dt='bin.base64'>PD9waHANCi8qKg0KICogWi1CbG9nIHdpdGggUEhQLg0KICoNCiAqIEBhdXRob3INCiAqIEBjb3B5cmlnaHQgKEMpIFJhaW5ib3dTb2Z0IFN0dWRpbw0KICoNCiAqIEB2ZXJzaW9uIDIuMCAyMDEzLTA3LTA1DQogKi8NCnJlcXVpcmUgJy4uL2Z1bmN0aW9uL2Nfc3lzdGVtX2Jhc2UucGhwJzsNCnJlcXVpcmUgJy4uL2Z1bmN0aW9uL2Nfc3lzdGVtX2FkbWluLnBocCc7DQoNCiR6YnAtPkNoZWNrR3ppcCgpOw0KJHpicC0+TG9hZCgpOw0KDQokYWN0aW9uID0gR2V0VmFycygnYWN0JywgJ0dFVCcpOw0KDQokYWRtaW5fYWN0aW9uX2FkZCA9IG51bGw7DQokYWRtaW5fZnVuY3Rpb24gPSBudWxsOw0KDQppZiAoKCRhY3Rpb24gPT0gJycpIHx8ICgkYWN0aW9uID09IG51bGwpKSB7DQogICAgJGFjdGlvbiA9ICdhZG1pbic7DQp9DQoNCmlmICghJHpicC0+Q2hlY2tSaWdodHMoJGFjdGlvbikpIHsNCiAgICAkemJwLT5TaG93RXJyb3IoNiwgX19GSUxFX18sIF9fTElORV9fKTsNCiAgICBkaWUoKTsNCn0NCg0KZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fQWRtaW5fQmVnaW4nXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAkZnBuYW1lKCk7DQp9DQoNCnN3aXRjaCAoJGFjdGlvbikgew0KICAgIGNhc2UgJ0FydGljbGVNbmcnOg0KICAgICAgICBpZiAoaXNfbnVsbCgkYWRtaW5fZnVuY3Rpb24pKSB7DQogICAgICAgICAgICAkYWRtaW5fZnVuY3Rpb24gPSAnQWRtaW5fQXJ0aWNsZU1uZyc7DQogICAgICAgICAgICAkYmxvZ3RpdGxlID0gJGxhbmdbJ21zZyddWydhcnRpY2xlX21hbmFnZSddOw0KICAgICAgICB9DQogICAgICAgIGJyZWFrOw0KICAgIGNhc2UgJ1BhZ2VNbmcnOg0KICAgICAgICBpZiAoaXNfbnVsbCgkYWRtaW5fZnVuY3Rpb24pKSB7DQogICAgICAgICAgICAkYWRtaW5fZnVuY3Rpb24gPSAnQWRtaW5fUGFnZU1uZyc7DQogICAgICAgICAgICAkYmxvZ3RpdGxlID0gJGxhbmdbJ21zZyddWydwYWdlX21hbmFnZSddOw0KICAgICAgICB9DQogICAgICAgIGJyZWFrOw0KICAgIGNhc2UgJ0NhdGVnb3J5TW5nJzoNCiAgICAgICAgaWYgKGlzX251bGwoJGFkbWluX2Z1bmN0aW9uKSkgew0KICAgICAgICAgICAgJGFkbWluX2Z1bmN0aW9uID0gJ0FkbWluX0NhdGVnb3J5TW5nJzsNCiAgICAgICAgICAgICRibG9ndGl0bGUgPSAkbGFuZ1snbXNnJ11bJ2NhdGVnb3J5X21hbmFnZSddOw0KICAgICAgICB9DQogICAgICAgIGJyZWFrOw0KICAgIGNhc2UgJ0NvbW1lbnRNbmcnOg0KICAgICAgICBpZiAoaXNfbnVsbCgkYWRtaW5fZnVuY3Rpb24pKSB7DQogICAgICAgICAgICAkYWRtaW5fZnVuY3Rpb24gPSAnQWRtaW5fQ29tbWVudE1uZyc7DQogICAgICAgICAgICAkYmxvZ3RpdGxlID0gJGxhbmdbJ21zZyddWydjb21tZW50X21hbmFnZSddOw0KICAgICAgICB9DQogICAgICAgIGJyZWFrOw0KICAgIGNhc2UgJ01lbWJlck1uZyc6DQogICAgICAgIGlmIChpc19udWxsKCRhZG1pbl9mdW5jdGlvbikpIHsNCiAgICAgICAgICAgICRhZG1pbl9mdW5jdGlvbiA9ICdBZG1pbl9NZW1iZXJNbmcnOw0KICAgICAgICAgICAgJGJsb2d0aXRsZSA9ICRsYW5nWydtc2cnXVsnbWVtYmVyX21hbmFnZSddOw0KICAgICAgICB9DQogICAgICAgIGJyZWFrOw0KICAgIGNhc2UgJ1VwbG9hZE1uZyc6DQogICAgICAgIGlmIChpc19udWxsKCRhZG1pbl9mdW5jdGlvbikpIHsNCiAgICAgICAgICAgICRhZG1pbl9mdW5jdGlvbiA9ICdBZG1pbl9VcGxvYWRNbmcnOw0KICAgICAgICAgICAgJGJsb2d0aXRsZSA9ICRsYW5nWydtc2cnXVsndXBsb2FkX21hbmFnZSddOw0KICAgICAgICB9DQogICAgICAgIGJyZWFrOw0KICAgIGNhc2UgJ1RhZ01uZyc6DQogICAgICAgIGlmIChpc19udWxsKCRhZG1pbl9mdW5jdGlvbikpIHsNCiAgICAgICAgICAgICRhZG1pbl9mdW5jdGlvbiA9ICdBZG1pbl9UYWdNbmcnOw0KICAgICAgICAgICAgJGJsb2d0aXRsZSA9ICRsYW5nWydtc2cnXVsndGFnX21hbmFnZSddOw0KICAgICAgICB9DQogICAgICAgIGJyZWFrOw0KICAgIGNhc2UgJ1BsdWdpbk1uZyc6DQogICAgICAgIGlmIChpc19udWxsKCRhZG1pbl9mdW5jdGlvbikpIHsNCiAgICAgICAgICAgICRhZG1pbl9mdW5jdGlvbiA9ICdBZG1pbl9QbHVnaW5NbmcnOw0KICAgICAgICAgICAgJGJsb2d0aXRsZSA9ICRsYW5nWydtc2cnXVsncGx1Z2luX21hbmFnZSddOw0KICAgICAgICB9DQogICAgICAgIGJyZWFrOw0KICAgIGNhc2UgJ1RoZW1lTW5nJzoNCiAgICAgICAgaWYgKGlzX251bGwoJGFkbWluX2Z1bmN0aW9uKSkgew0KICAgICAgICAgICAgJGFkbWluX2Z1bmN0aW9uID0gJ0FkbWluX1RoZW1lTW5nJzsNCiAgICAgICAgICAgICRibG9ndGl0bGUgPSAkbGFuZ1snbXNnJ11bJ3RoZW1lX21hbmFnZSddOw0KICAgICAgICB9DQogICAgICAgIGJyZWFrOw0KICAgIGNhc2UgJ01vZHVsZU1uZyc6DQogICAgICAgIGlmIChpc19udWxsKCRhZG1pbl9mdW5jdGlvbikpIHsNCiAgICAgICAgICAgICRhZG1pbl9mdW5jdGlvbiA9ICdBZG1pbl9Nb2R1bGVNbmcnOw0KICAgICAgICAgICAgJGJsb2d0aXRsZSA9ICRsYW5nWydtc2cnXVsnbW9kdWxlX21hbmFnZSddOw0KICAgICAgICB9DQogICAgICAgIGJyZWFrOw0KICAgIGNhc2UgJ1NldHRpbmdNbmcnOg0KICAgICAgICBpZiAoaXNfbnVsbCgkYWRtaW5fZnVuY3Rpb24pKSB7DQogICAgICAgICAgICAkYWRtaW5fZnVuY3Rpb24gPSAnQWRtaW5fU2V0dGluZ01uZyc7DQogICAgICAgICAgICAkYmxvZ3RpdGxlID0gJGxhbmdbJ21zZyddWydzZXR0aW5ncyddOw0KICAgICAgICB9DQogICAgICAgIGJyZWFrOw0KICAgIGNhc2UgJ2FkbWluJzoNCiAgICAgICAgaWYgKGlzX251bGwoJGFkbWluX2Z1bmN0aW9uKSkgew0KICAgICAgICAgICAgJGFkbWluX2Z1bmN0aW9uID0gJ0FkbWluX1NpdGVJbmZvJzsNCiAgICAgICAgICAgICRibG9ndGl0bGUgPSAkbGFuZ1snbXNnJ11bJ2Rhc2hib2FyZCddOw0KICAgICAgICB9DQogICAgICAgIGJyZWFrOw0KICAgIGNhc2UgJGFkbWluX2FjdGlvbl9hZGQ6DQogICAgICAgIGJyZWFrOw0KICAgIGRlZmF1bHQ6DQogICAgICAgICR6YnAtPlNob3dFcnJvcig2LCBfX0ZJTEVfXywgX19MSU5FX18pOw0KICAgICAgICBkaWUoKTsNCiAgICAgICAgYnJlYWs7DQp9DQoNCnJlcXVpcmUgWkJQX1BBVEggLiAnemJfc3lzdGVtL2FkbWluL2FkbWluX2hlYWRlci5waHAnOw0KcmVxdWlyZSBaQlBfUEFUSCAuICd6Yl9zeXN0ZW0vYWRtaW4vYWRtaW5fdG9wLnBocCc7DQoNCj8+DQo8ZGl2IGlkPSJkaXZNYWluIj4NCjw/cGhwDQokYWRtaW5fZnVuY3Rpb24oKTsNCj8+DQo8L2Rpdj4NCjw/cGhwDQpyZXF1aXJlIFpCUF9QQVRIIC4gJ3piX3N5c3RlbS9hZG1pbi9hZG1pbl9mb290ZXIucGhwJzsNCg0KZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fQWRtaW5fRW5kJ10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgJGZwbmFtZSgpOw0KfQ0KDQpSdW5UaW1lKCk7DQo=</file>
	<file name='zb_system\admin\member_edit.php' crc32='BB41023F'  dt:dt='bin.base64'></file>
	<file name='zb_system\admin\module_edit.php' crc32='AA0444F6'  dt:dt='bin.base64'></file>
	<file name='zb_system\admin\tag_edit.php' crc32='BC49AF8C'  dt:dt='bin.base64'>PD9waHANCi8qKg0KICogWi1CbG9nIHdpdGggUEhQLg0KICoNCiAqIEBhdXRob3INCiAqIEBjb3B5cmlnaHQgKEMpIFJhaW5ib3dTb2Z0IFN0dWRpbw0KICoNCiAqIEB2ZXJzaW9uIDIuMCAyMDEzLTA3LTA1DQogKi8NCnJlcXVpcmUgJy4uL2Z1bmN0aW9uL2Nfc3lzdGVtX2Jhc2UucGhwJzsNCnJlcXVpcmUgJy4uL2Z1bmN0aW9uL2Nfc3lzdGVtX2FkbWluLnBocCc7DQoNCiR6YnAtPkNoZWNrR3ppcCgpOw0KJHpicC0+TG9hZCgpOw0KDQokYWN0aW9uID0gJ1RhZ0VkdCc7DQppZiAoISR6YnAtPkNoZWNrUmlnaHRzKCRhY3Rpb24pKSB7DQogICAgJHpicC0+U2hvd0Vycm9yKDYsIF9fRklMRV9fLCBfX0xJTkVfXyk7DQogICAgZGllKCk7DQp9DQoNCiRibG9ndGl0bGUgPSAkbGFuZ1snbXNnJ11bJ3RhZ19lZGl0J107DQoNCnJlcXVpcmUgWkJQX1BBVEggLiAnemJfc3lzdGVtL2FkbWluL2FkbWluX2hlYWRlci5waHAnOw0KcmVxdWlyZSBaQlBfUEFUSCAuICd6Yl9zeXN0ZW0vYWRtaW4vYWRtaW5fdG9wLnBocCc7DQoNCj8+DQo8P3BocA0KDQokdGFnaWQgPSBudWxsOw0KaWYgKGlzc2V0KCRfR0VUWydpZCddKSkgew0KICAgICR0YWdpZCA9IChpbnQpIEdldFZhcnMoJ2lkJywgJ0dFVCcpOw0KfSBlbHNlIHsNCiAgICAkdGFnaWQgPSAwOw0KfQ0KDQokdGFnID0gJHpicC0+R2V0VGFnQnlJRCgkdGFnaWQpOw0KDQo/Pg0KPGRpdiBpZD0iZGl2TWFpbiI+DQogICAgPGRpdiBjbGFzcz0iZGl2SGVhZGVyMiI+DQogICAgICAgIDw/cGhwIGVjaG8gJGxhbmdbJ21zZyddWyd0YWdfZWRpdCddPz48L2Rpdj4NCiAgICA8ZGl2IGNsYXNzPSJTdWJNZW51Ij4NCjw/cGhwDQpmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9UYWdfRWRpdF9TdWJNZW51J10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgJGZwbmFtZSgpOw0KfQ0KPz4NCiAgICA8L2Rpdj4NCiAgICA8ZGl2IGlkPSJkaXZNYWluMiIgY2xhc3M9ImVkaXQgdGFnX2VkaXQiPg0KICAgICAgICA8Zm9ybSBpZD0iZWRpdCIgbmFtZT0iZWRpdCIgbWV0aG9kPSJwb3N0IiBhY3Rpb249IiMiPg0KICAgICAgICAgICAgPGlucHV0IGlkPSJlZHRJRCIgbmFtZT0iSUQiIHR5cGU9ImhpZGRlbiIgdmFsdWU9Ijw/cGhwIGVjaG8gJHRhZy0+DQogICAgICAgICAgICBJRDsgPz4iIC8+DQogICAgICAgICAgICA8cD4NCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGl0bGUiPg0KICAgICAgICAgICAgICAgICAgICA8P3BocCBlY2hvICRsYW5nWydtc2cnXVsnbmFtZSddPz46PC9zcGFuPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFyIj4oKik8L3NwYW4+DQogICAgICAgICAgICAgICAgPGJyIC8+DQogICAgICAgICAgICAgICAgPGlucHV0IGlkPSJlZHROYW1lIiBjbGFzcz0iZWRpdCIgc2l6ZT0iNDAiIG5hbWU9Ik5hbWUiIG1heGxlbmd0aD0iPD9waHAgZWNobyAkb3B0aW9uWydaQ19UQUdTX05BTUVfTUFYJ107ID8+IiB0eXBlPSJ0ZXh0IiB2YWx1ZT0iPD9waHAgZWNobyAkdGFnLT5OYW1lOyA/PiIgLz48L3A+DQogICAgICAgICAgICA8cD4NCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGl0bGUiPg0KICAgICAgICAgICAgICAgICAgICA8P3BocCBlY2hvICRsYW5nWydtc2cnXVsnYWxpYXMnXT8+Ojwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8YnIgLz4NCiAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9ImVkdEFsaWFzIiBjbGFzcz0iZWRpdCIgc2l6ZT0iNDAiIG5hbWU9IkFsaWFzIiB0eXBlPSJ0ZXh0IiB2YWx1ZT0iPD9waHAgZWNobyAkdGFnLT5BbGlhczsgPz4iIC8+PC9wPg0KICAgICAgICAgICAgPHA+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRpdGxlIj4NCiAgICAgICAgICAgICAgICAgICAgPD9waHAgZWNobyAkbGFuZ1snbXNnJ11bJ3RlbXBsYXRlJ10/Pjo8L3NwYW4+DQogICAgICAgICAgICAgICAgPGJyIC8+DQogICAgICAgICAgICAgICAgPHNlbGVjdCBjbGFzcz0iZWRpdCIgc2l6ZT0iMSIgbmFtZT0iVGVtcGxhdGUiIGlkPSJjbWJUZW1wbGF0ZSI+DQogICAgICAgICAgICAgICAgICAgIDw/cGhwIGVjaG8gT3V0cHV0T3B0aW9uSXRlbXNPZlRlbXBsYXRlKCR0YWctPlRlbXBsYXRlKTsgPz48L3NlbGVjdD4NCiAgICAgICAgICAgIDwvcD4NCiAgICAgICAgICAgIDxwPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSd0aXRsZSc+DQogICAgICAgICAgICAgICAgICAgIDw/cGhwIGVjaG8gJGxhbmdbJ21zZyddWydpbnRybyddPz46PC9zcGFuPg0KICAgICAgICAgICAgICAgIDxici8+DQogICAgICAgICAgICAgICAgPHRleHRhcmVhIGNvbHM9IjMiIHJvd3M9IjYiIGlkPSJlZHRJbnRybyIgbmFtZT0iSW50cm8iIHN0eWxlPSJ3aWR0aDo2MDBweDsiPjw/cGhwIGVjaG8gaHRtbHNwZWNpYWxjaGFycygkdGFnLT5JbnRybyk7ID8+PC90ZXh0YXJlYT4NCiAgICAgICAgICAgIDwvcD4NCiAgICAgICAgICAgIDxwPg0KICAgICAgICAgICAgICAgIDxsYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRpdGxlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDw/cGhwIGVjaG8gJGxhbmdbJ21zZyddWydhZGRfdG9fbmF2YmFyJ10/Pjo8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJBZGROYXZiYXIiIGlkPSJlZHRBZGROYXZiYXIiIHZhbHVlPSI8P3BocCBlY2hvIChpbnQpICR6YnAtPkNoZWNrSXRlbVRvTmF2YmFyKCd0YWcnLCAkdGFnLT5JRCk/PiIgY2xhc3M9ImNoZWNrYm94IiAvPjwvbGFiZWw+DQogICAgICAgICAgICA8L3A+DQogICAgICAgICAgICA8ZGl2IGlkPSdyZXNwb25zZScgY2xhc3M9J2VkaXRtb2QyJz4NCiAgICAgICAgICAgICAgICA8P3BocCBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9UYWdfRWRpdF9SZXNwb25zZSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgICAgICRmcG5hbWUoKTsNCiAgICAgICAgICAgIH0/Pg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8cD4NCiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiBjbGFzcz0iYnV0dG9uIiB2YWx1ZT0iPD9waHAgZWNobyAkbGFuZ1snbXNnJ11bJ3N1Ym1pdCddPz4iIGlkPSJidG5Qb3N0IiBvbmNsaWNrPSJyZXR1cm4gY2hlY2tJbmZvKCk7IiAvPjwvcD4NCiAgICAgICAgPC9mb3JtPg0KICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+DQpmdW5jdGlvbiBjaGVja0luZm8oKXsNCiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImVkaXQiKS5hY3Rpb249Ijw/cGhwIGVjaG8gQnVpbGRTYWZlQ21kVVJMKCdhY3Q9VGFnUHN0Jyk7ID8+IjsNCg0KICBpZighJCgiI2VkdE5hbWUiKS52YWwoKSl7DQogICAgYWxlcnQoIjw/cGhwIGVjaG8gJGxhbmdbJ2Vycm9yJ11bJzcyJ10/PiIpOw0KICAgIHJldHVybiBmYWxzZQ0KICB9DQoNCn0NCiAgICA8L3NjcmlwdD4NCiAgICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPkFjdGl2ZUxlZnRNZW51KCJhVGFnTW5nIik7PC9zY3JpcHQ+DQogICAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5BZGRIZWFkZXJJY29uKCI8P3BocCBlY2hvICR6YnAtPmhvc3QgLiAnemJfc3lzdGVtL2ltYWdlL2NvbW1vbi90YWdfMzIucG5nJzsgPz4iKTs8L3NjcmlwdD4NCiAgICA8L2Rpdj4NCjwvZGl2Pg0KDQo8P3BocA0KcmVxdWlyZSBaQlBfUEFUSCAuICd6Yl9zeXN0ZW0vYWRtaW4vYWRtaW5fZm9vdGVyLnBocCc7DQoNClJ1blRpbWUoKTsNCg==</file>
	<file name='zb_system\css\admin.css' crc32='69478B96'  dt:dt='bin.base64'>77u/QGNoYXJzZXQgInV0Zi04IjsNCg0KLyoNCuS9nOiAhe+8muaWsOmynOS6ug0K5Zyw5Z2A77yaaHR0cDovL3d3dy5odG1saXQuY29tLmNuDQrpgq7nrrHvvJp1MmxlaUB5YWhvby5jb20uY24NCiAgICAgeGlueHJAbXNuLmNvbQ0KKi8NCiogeyBwYWRkaW5nOiAwOyBtYXJnaW46IDA7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH0NCmJvZHkgeyBwYWRkaW5nOiAwOyBtYXJnaW46IDA7IGZvbnQtZmFtaWx5OiAiTWljcm9zb2Z0IFlhSGVpIiwgU1RIZWl0aSwgIkhpcmFnaW5vIFNhbnMgR0IiLCAiV2VuUXVhbllpIE1pY3JvIEhlaSIsICJIZWl0aSBTQyIsIE5TaW1TdW4sIFNpbVN1biwgQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYmFja2dyb3VuZDogI2ZmZmZmZjsgY29sb3I6ICM0NDQ0NDQ7IGZvbnQtc2l6ZTogMTRweDsgbGluZS1oZWlnaHQ6IDIwcHg7IH0NCmRpdiwNCmgxLA0KaDIsDQpoMywNCmg0LA0KcCwNCmZvcm0sDQp1bCwNCmxhYmVsLA0KaW5wdXQsDQp0ZXh0YXJlYSwNCmltZywNCnNwYW4geyBtYXJnaW46IDA7IHBhZGRpbmc6IDA7IH0NCnRhYmxlIHsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgfQ0KYSB7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgY29sb3I6ICMwMDMzOTk7IH0NCmE6aG92ZXIgeyBjb2xvcjogIzk5MDAwMDsgfQ0KdWwgeyBwYWRkaW5nOiAwOyBtYXJnaW46IDA7IH0NCmxpIHsgbGlzdC1zdHlsZS10eXBlOiBub25lOyB9DQouY2xlYXIgeyBjbGVhcjogYm90aDsgfQ0KaW1nIHsgYm9yZGVyOiBub25lOyB9DQoNCi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovDQouYmcgeyBwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogMDsgbGVmdDogMDsgei1pbmRleDogLTEwMDA7IGhlaWdodDogMjYwcHg7IHdpZHRoOiAxMDAlOyBiYWNrZ3JvdW5kOiAjM2E2ZWE1OyB9DQojd3JhcHBlciB7IHdpZHRoOiAxMDAlOyBwYWRkaW5nOiAwOyBtYXJnaW46IDAgYXV0bzsgfQ0KLmxvZ28geyB3aWR0aDogMjAwcHg7IGhlaWdodDogNzBweDsgbWFyZ2luOiAxNzBweCBhdXRvIDYwcHggYXV0bzsgfQ0KLmxvZ28gaW1nIHsgd2lkdGg6IDIwMHB4OyBoZWlnaHQ6IDcwcHg7IGJhY2tncm91bmQ6IHVybCgiLi4vaW1hZ2UvYWRtaW4vbG9nby5wbmciKTsgfQ0KaW5wdXQgeyBmbG9hdDogbGVmdDsgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfQ0KaW5wdXRbdHlwZT0idGV4dCJdLGlucHV0W3R5cGU9InBhc3N3b3JkIl0geyBib3JkZXI6IDFweCBzb2xpZCAjM2E2ZWE1OyB9DQppbnB1dFt0eXBlPSJjaGVja2JveCJdIHsgbWFyZ2luOiA4cHggMCAwIDA7IHBhZGRpbmc6IDA7IH0NCmxhYmVsIHsgbGluZS1oZWlnaHQ6IDMwcHg7IGZsb2F0OiBsZWZ0OyB2ZXJ0aWNhbC1hbGlnbjogdGV4dC1ib3R0b207IHBhZGRpbmc6IDAgNXB4IDAgNXB4OyB9DQoNCi5sb2dpbiB7IHdpZHRoOiA2MDBweDsgaGVpZ2h0OiAxMDBweDsgbWFyZ2luOiAwIGF1dG87IHBhZGRpbmctbGVmdDogMHB4OyB9DQoubG9naW4gZGwgeyBoZWlnaHQ6IDUwcHg7Y2xlYXI6Ym90aDsgfQ0KLmxvZ2luIGRkIHsgd2lkdGg6IDMwMHB4OyBmbG9hdDogbGVmdDsgbWFyZ2luLWJvdHRvbToyMHB4O30NCi5sb2dpbiBkZC5mbG9hdHJpZ2h0IHtmbG9hdDogcmlnaHQ7fQ0KLmxvZ2luIGRkLmNoZWNrYm94IHsgbWFyZ2luLWxlZnQ6IDEwMHB4OyB3aWR0aDogMjAwcHg7IHRleHQtYWxpZ246IGxlZnQ7IH0NCi5sb2dpbiBkZC5zdWJtaXQgLC5sb2dpbiBkZC5wYXNzd29yZCAsLmxvZ2luIGRkLnVzZXJuYW1lIHsgb3ZlcmZsb3c6IGhpZGRlbjsgd2lkdGg6IDMwMHB4OyB9DQoubG9naW4gbGFiZWwgeyB3aWR0aDogMTAwcHg7IHRleHQtYWxpZ246IHJpZ2h0O292ZXJmbG93IDpoaWRkZW47dGV4dC1vdmVyZmxvdyA6IGNsaXA7d2hpdGUtc3BhY2U6bm93cmFwOyB9DQoubG9naW4gaW5wdXRbdHlwZT0iY2hlY2tib3giXStsYWJlbCB7d2lkdGg6YXV0bzt9DQoubG9naW4gaW5wdXRbdHlwZT0idGV4dCJdLC5sb2dpbiBpbnB1dFt0eXBlPSJwYXNzd29yZCJdeyBmbG9hdDogbGVmdDsgd2lkdGg6IDIwMHB4OyBoZWlnaHQ6IDIuNGVtOyBwYWRkaW5nOiAwLjFlbSA1cHg7IGxpbmUtaGVpZ2h0OiAyLjRlbTsgfQ0KDQouYnV0dG9uIHsgZmxvYXQ6IHJpZ2h0OyBjb2xvcjogI2ZmZmZmZjsgZm9udC1zaXplOiAxNHB4OyB3aWR0aDogNzBweDsgaGVpZ2h0OiAzMnB4OyBiYWNrZ3JvdW5kOiAjM2E2ZWE1OyBib3JkZXI6IDFweCBzb2xpZCAjMzM5OUNDOyBjdXJzb3I6IHBvaW50ZXI7IH0NCi5idXR0b246aG92ZXIgeyBjb2xvcjogI2ZmZmZmZjsgYmFja2dyb3VuZDogIzMzOTljYzsgY3Vyc29yOiBwb2ludGVyOyB9DQouZGl2SGVhZGVyIHsgaGVpZ2h0OiBhdXRvOyBmb250LXdlaWdodDogYmxvZDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBmb250LXNpemU6IDEuNWVtOyBwYWRkaW5nOiAwIDAgMTBweCAwOyBiYWNrZ3JvdW5kOiAjRkZGOyB0ZXh0LWFsaWduOiBjZW50ZXI7IH0NCg0KYm9keS5zaG9ydCAuYmcgeyBoZWlnaHQ6IDE2MHB4OyB9DQpib2R5LnNob3J0IC5sb2dvIHsgaGVpZ2h0OiA2MHB4OyBtYXJnaW46IDYwcHggYXV0byA2MHB4IGF1dG87IH0NCi5sb2dpbncgeyB3aWR0aDogNzAwcHg7IG1hcmdpbi1ib3R0b206IDEyMHB4OyB9DQoubG9naW53IC5jb250ZW50PmRpdj5wIHsgZm9udC13ZWlnaHQ6IGJvbGQ7IGZvbnQtc2l6ZTogMS4yZW07IHBhZGRpbmc6IDEwcHg7IGJhY2tncm91bmQ6ICNlZWU7IG1hcmdpbi1ib3R0b206IDEwcHg7IH0NCi5sb2dpbncgLmNvbnRlbnQ+ZGl2IHsgcGFkZGluZy1ib3R0b206IDIwcHg7IH0NCi5sb2dpbnc+Zm9ybT5wIHsgcGFkZGluZzogMTBweCAxMHB4IDUwcHggMTBweDsgfQ0KLmxvZ2ludz5mb3JtPnA+YSB7IGZvbnQtc2l6ZTogMS4xZW07IH0NCi5sb2dpbncgLmNvbnRlbnQ+ZGl2PmRpdiB7IHBhZGRpbmc6IDAgMTBweDsgfQ0KDQpAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NzY4cHgpIHsNCiAgICAuYmcgeyBoZWlnaHQ6IDE2MHB4OyB9DQogICAgLmxvZ28geyBtYXJnaW4tdG9wOiA2MHB4IH0NCiAgICAubG9naW4geyB3aWR0aDogMzEwcHg7IH0NCiAgICAubG9naW4gZGQgeyB3aWR0aDogMzAwcHg7IGZsb2F0OiByaWdodDsgcGFkZGluZzogMHB4IDEwcHggMHB4IDA7IG1hcmdpbi1ib3R0b206MTBweDt9DQoNCiAgICAubG9naW4gZGQuY2hlY2tib3ggeyBtYXJnaW4tbGVmdDogMTBweDsgd2lkdGg6IDMwMHB4OyBmbG9hdDogbGVmdDsgcGFkZGluZzogNXB4IDA7IH0NCiAgICAubG9naW4gZGQuc3VibWl0IHsgd2lkdGg6IDMwMHB4OyBmbG9hdDogcmlnaHQ7IHBhZGRpbmc6IDVweCAwOyBtYXJnaW4tcmlnaHQ6IDEwcHg7IH0NCiAgICAubG9naW4gZGQudXNlcm5hbWUgbGFiZWwsLmxvZ2luIGRkLnBhc3N3b3JkIGxhYmVsIHsgd2lkdGg6IDMwMHB4O2NsZWFyOmZsb2F0O3RleHQtYWxpZ246IGxlZnQ7fQ0KICAgIC5sb2dpbiBpbnB1dFt0eXBlPSJ0ZXh0Il0sLmxvZ2luIGlucHV0W3R5cGU9InBhc3N3b3JkIl17IGZsb2F0OiByaWdodDsgd2lkdGg6IDI4NXB4OyB9DQogICAgaW5wdXRbdHlwZT0iY2hlY2tib3giXSB7IG1hcmdpbjogOHB4IDAgMCA1cHg7IH0NCn0NCg==</file>
	<file name='zb_system\css\admin2.css' crc32='4C51B6FF'  dt:dt='bin.base64'></file>
	<file name='zb_system\css\admin3.css' crc32='6DF65CF7'  dt:dt='bin.base64'>KiB7IHBhZGRpbmc6IDA7IG1hcmdpbjogMDsgYm94LXNpemluZzogYm9yZGVyLWJveDsgfQ0KYm9keSB7IHBhZGRpbmc6IDA7IG1hcmdpbjogMDsgZm9udC1mYW1pbHk6ICJNaWNyb3NvZnQgWWFIZWkiLCBTVEhlaXRpLCAiSGlyYWdpbm8gU2FucyBHQiIsICJXZW5RdWFuWWkgTWljcm8gSGVpIiwgIkhlaXRpIFNDIiwgTlNpbVN1biwgU2ltU3VuLCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBiYWNrZ3JvdW5kOiAjRkZGRkZGOyBjb2xvcjogIzQ0NDQ0NDsgZm9udC1zaXplOiAxNHB4OyBsaW5lLWhlaWdodDogMjBweDsgfQ0KLnNldHVwIHsgd2lkdGg6IDEwMDBweDsgaGVpZ2h0OiA0MDBweDsgcGFkZGluZzogNjBweCAwIDAgMDsgbWFyZ2luOiAwIGF1dG87IH0NCmZvbnRbY29sb3I9JyMzRDY5QUEnXSB7IGJhY2tncm91bmQ6ICMzRDY5QUE7IH0NCiNkZGxlZnQgeyBmbG9hdDogbGVmdDsgd2lkdGg6IDM0MHB4OyBoZWlnaHQ6IDQwMHB4OyBmb250LXNpemU6IDE0cHg7IG1hcmdpbi1yaWdodDogMjBweDsgfQ0KI2RkcmlnaHQgeyBmbG9hdDogbGVmdDsgd2lkdGg6IDYwMHB4OyBoZWlnaHQ6IDQwMHB4OyB9DQppbnB1dFt0eXBlPSJ0ZXh0Il0sDQppbnB1dFt0eXBlPSJwYXNzd29yZCJdIHsgcGFkZGluZzogM3B4IDVweDsgfQ0KaW5wdXRbcmVhZG9ubHldIHsgYmFja2dyb3VuZDogI2VlZTsgYm9yZGVyOiAxcHggc29saWQgI2NjYzsgfQ0KaW5wdXRbdHlwZT0ic3VibWl0Il0sDQppbnB1dFt0eXBlPSJidXR0b24iXSB7IGNvbG9yOiAjRkZGRkZGOyBmb250LXNpemU6IDEuMWVtOyBoZWlnaHQ6IDEuOGVtOyBwYWRkaW5nOiAwLjE1ZW0gMmVtIDAuMjBlbSAyZW07IHBhZGRpbmc6IDAuMTVlbSAxZW0gMC4yMGVtIDFlbVw5OyBtYXJnaW46IDAuMmVtIDAuNWVtOyBiYWNrZ3JvdW5kOiAjM2E2ZWE1OyBib3JkZXI6IDFweCBzb2xpZCAjM2E2ZWE1OyBjdXJzb3I6IHBvaW50ZXI7IH0NCmlucHV0W2Rpc2FibGVkXSB7IGJhY2tncm91bmQ6ICNlZWU7IGNvbG9yOiAjOTk5OyBib3JkZXI6IDFweCBzb2xpZCAjZGRkOyB9DQojdGl0bGUgeyBjb2xvcjogIzNkNjlhYTsgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMzZDY5YWE7IGZvbnQtc2l6ZTogMjBweDsgZm9udC13ZWlnaHQ6IGJvbGRlcjsgcGFkZGluZy1ib3R0b206IDVweDsgbWFyZ2luLWJvdHRvbTogNXB4OyB9DQoudGl0bGUgeyBjb2xvcjogIzNkNjlhYTsgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNmZmY7IGZvbnQtc2l6ZTogMThweDsgZm9udC13ZWlnaHQ6IGJvbGRlcjsgcGFkZGluZy10b3A6IDEwcHg7IH0NCiNjb250ZW50IHsgcGFkZGluZzogMTVweCAwIH0NCiNib3R0b20geyB0ZXh0LWFsaWduOiByaWdodDsgcGFkZGluZzogNXB4IDAgMjBweCAwOyB9DQp0ZXh0YXJlYSB7IGhlaWdodDogMzYwcHg7IHdpZHRoOiA2MDBweDsgYm9yZGVyOiBub25lOyB9DQojZGRsZWZ0IGRpdiB7IH0NCiNkZGxlZnQgZGl2IGltZyB7IHdpZHRoOiAxNzVweDsgaGVpZ2h0OiAxMDBweDsgfQ0KI2RkbGVmdCBkaXYgc3Ryb25nIHsgd2lkdGg6IDExNXB4OyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyBsaW5lLWhlaWdodDogMTIwcHg7IGhlaWdodDogMTIwcHg7IGZvbnQtc2l6ZTogMjBweDsgY29sb3I6ICM2NjY7IH0NCiNkZGxlZnQgI2hlYWRlcmltZyB7IHdpZHRoOiAxMDAlOyBtYXJnaW4tdG9wOiA4MHB4OyB9DQojZGRsZWZ0IGIgeyBjb2xvcjogIzNkNjlhYTsgfQ0KI2RkbGVmdCBzcGFuIHsgYm9yZGVyOiAxcHggc29saWQgZ3JheTsgcGFkZGluZy1ib3R0b206IDFweFw5OyB9DQpwIHsgbGluZS1oZWlnaHQ6IDIuNWVtOyBjbGVhcjogYm90aDsgfQ0KI2NvbnRlbnQgYiB7IGZvbnQtd2VpZ2h0OiBibG9kOyB3aWR0aDogMTIwcHg7IGZsb2F0OiBsZWZ0OyB9DQojY29udGVudCBzbWFsbCB7IGZvbnQtc2l6ZTogMTJweDsgfQ0KbGFiZWwgeyBjdXJzb3I6IHBvaW50ZXI7IH0NCg0KLyrooaggICDmoLwqLw0KdGFibGUgeyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyBib3JkZXI6IDFweCBzb2xpZCAjRTFFMUUxOyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyBsaW5lLWhlaWdodDogMTIwJTsgfQ0KdGQsDQp0aCB7IGJvcmRlcjogMXB4IHNvbGlkICNFMUUxRTE7IG1hcmdpbjogMDsgcGFkZGluZzogM3B4IDVweDsgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfQ0KDQoudGFibGVfaG92ZXIgPiB0Ym9keSA+IHRyID4gdGQ6aG92ZXIsDQoudGFibGVfaG92ZXIgPiB0Ym9keSA+IHRyID4gdGg6aG92ZXIsDQoudGFibGVfaG92ZXIgPiB0Ym9keSA+IHRyOmhvdmVyID4gdGQsDQoudGFibGVfaG92ZXIgPiB0Ym9keSA+IHRyOmhvdmVyID4gdGggew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmRkOw0KfQ0KLnRhYmxlX3N0cmlwZWQgPiB0Ym9keSA+IHRyOm50aC1vZi10eXBlKG9kZCkgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjRGNEY0Ow0KfQ0KLnRhYmxlX3N0cmlwZWQgPiB0aGVhZCA+IHRyIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2VkZWRlZDsNCn0NCi5iaW5nbywNCi5lcnJvciB7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgd2lkdGg6IDE2cHg7IGhlaWdodDogMTZweDsgfQ0KLmJpbmdvIHsgY29sb3I6IGdyZWVuOyBiYWNrZ3JvdW5kOiB1cmwoLi4vaW1hZ2UvYWRtaW4vb2sucG5nKSBuby1yZXBlYXQgbGVmdCBjZW50ZXIgfQ0KLmVycm9yIHsgY29sb3I6IHJlZDsgYmFja2dyb3VuZDogdXJsKC4uL2ltYWdlL2FkbWluL2V4Y2xhbWF0aW9uLnBuZykgbm8tcmVwZWF0IGxlZnQgY2VudGVyIH0NCg0KLyrov5sg5bqmIOadoSovDQoubGVmdCB7IGZsb2F0OiBsZWZ0OyBtYXJnaW46IDEycHggMDsgfQ0KLnVpLXByb2dyZXNzYmFyIHsgd2lkdGg6IDI1NnB4OyBoZWlnaHQ6IDE4cHg7IH0NCi51aS13aWRnZXQtaGVhZGVyIHsgYmFja2dyb3VuZDogIzNkNjlhYTsgfQ0K</file>
	<file name='zb_system\css\jquery-ui.custom.css' crc32='667CF163'  dt:dt='bin.base64'></file>
	<file name='zb_system\defend\error.php' crc32='156C070B'  dt:dt='bin.base64'></file>
	<file name='zb_system\defend\thanks.html' crc32='4761B140'  dt:dt='bin.base64'>PHRhYmxlIGJvcmRlcj0iMCIgY2xhc3M9InRhYmxlRnVsbCB0YWJsZUJvcmRlciB0YWJsZV9ob3ZlciB0YWJsZV9zdHJpcGVkIiBpZD0idGhhbmtzbGlzdCI+PHRoZWFkPjx0cj48dGggaGVpZ2h0PSIzMiIgY29sc3Bhbj0iMiI+Jm5ic3A7Wi1CbG9nUEhQ572R56uZ5ZKM56iL5bqP5byA5Y+RPC90aD48L3RyPjwvdGhlYWQ+PHRib2R5Pjx0cj48dGQgY2xhc3M9InRkMTUiPueoi+W6jzwvdGQ+PHRkPjxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL2Jicy56YmxvZ2NuLmNvbS8/OTgyIiB0aXRsZT0i5a6H5a6Z6aOe5aSp56We54yq77yB77yB77yBIiByZWw9Im5vcmVmZXJyZXIiPnp4LmFzZDwvYT4mbmJzcDs8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cuenN4c29mdC5jb20iIHRpdGxlPSLot6/ov4fnmoQiPnpzeDwvYT4mbmJzcDs8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly9pbXpob3UuY29tIiB0aXRsZT0iWkJQ56ys5LiA5Liq54mI5pys5o+Q5Lqk6ICF77yM6Jm954S25piv5LiqOTDlkI7vvIzkvYbmmK/plb/lvpflpKrnnYDmgKXvvIzmiYDku6Xlj5jmiJDkuobnsqXogIHmub/vvIEiIHJlbD0ibm9yZWZlcnJlciI+5pyq5a+SPC9hPiZuYnNwOzxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL2Jicy56YmxvZ2NuLmNvbS8/NDQiIHRpdGxlPSJaLUJsb2fph4znmoTogIHpu4TniZss55yf5q2j55qE6ICB6buE54mbLOS4jeaEp+aYr+WxnueJm+eahCzmgLvmmK/lnKjpu5jpu5jml6Dpl7vnmoTlpYnnjK7nnYDku5bnmoTkuIDliIcs5ZCD55qE5piv6I2JLOaMpOWHuuadpeeahOaYr+i0tOWtkOWSjOS7o+eggSzorqnmiJHku6zlkJHku5boh7TmlawhIiByZWw9Im5vcmVmZXJyZXIiPuaciOS4iuS5i+acqDwvYT48L3RkPjwvdHI+PHRyPjx0ZCBjbGFzcz0idGQxNSI+55WM6Z2iPC90ZD48dGQ+PGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHA6Ly93d3cuaHRtbGl0LmNvbS5jbiIgdGl0bGU9IuaWsOmynOS6uueahOW3peS9nOWwseaYr+avj+WkqeaOpeWNleaOpeWNleWGjeaOpeWNlSzlhbvlrrbns4rlj6Ms5a626YeM55qE6aG25qKB5p+xLOacieWEv+acieWls+eahOeUt+S6uuS5i+alt+aooS4iIHJlbD0ibm9yZWZlcnJlciI+5paw6bKc5Lq6PC9hPiA8c3BhbiB0aXRsZT0i576O5Li95Y+I5amJ57qm55qE5rmY5aa55a2QLOWPr+eIseeahOWkluihqOS4i+aOqeiXj+edgOWPpOWFuOe+jueahOawlOi0qCxaLUJsb2flrpjnvZHnmoTorr7orqHogIUs546w5Zyo5rex5Zyz5YGa552A5Zac5qyi55qE5bel5L2cIj7lqIflqIc8L3NwYW4+IDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5qZ3B5LmNuIiB0aXRsZT0i5LuW5aSq6L275LqGLOWwseWDj+S4gOeJh+e+veavmyzpo47kuIDlkLnlsLHpo57kuoYu5Li65LqG6YG/5YWN5Lmx6aOeLOS7lueahOWGheW/g+Wwsea4kOa4kOe6oOe7k+i1t+adpeS6hi4iIHJlbD0ibm9yZWZlcnJlciI+5ZCJ5YWJ54mH5769PC9hPiZuYnNwOzxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwOi8vd3d3LnRveWVhbi5jb20iIHRpdGxlPSLmiJHku6znmoTlvqHnlKjlsITpuKHni65eX14iIHJlbD0ibm9yZWZlcnJlciI+5ouT5rqQPC9hPjwvdGQ+PC90cj48dHI+PHRkIGNsYXNzPSJ0ZDE1Ij7mlK/mjIE8L3RkPjx0ZD48YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cDovL3d3dy53YXNodW4uY29tIiB0aXRsZT0i6KiA6K+t54qA5Yip55qEV2FzaHVu5piv6K665Z2b55qE54G16a2CLOS4uuS6hlotQmxvZ+eahOWPkeWxleWQkOWwveS6huWQhOenjeanvSznu4jkuo7lkJDnnYDlkJDnnYDlkJDkuI3liqjkuoYs5L2G5aWH6L+55Y+R55Sf5LqGLOS7luS7peWQjuWGjeS5n+S4jeeUqOWQkOS6hizlj6/ku6XmlLnkuLrllrfkuoYu56WdV2FzaHVu5ZCM5a2m6IGq5piO5Y+v54ix55qE5aWz5YS/5YGl5bq35oiQ6ZW/ISIgcmVsPSJub3JlZmVycmVyIj5XYXNodW48L2E+Jm5ic3A7PGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vYmJzLnpibG9nY24uY29tLz8yMTk1OCIgdGl0bGU9IuS8oOe7nyzpob7lrrYs54ix6ICB5amG5pu054ix5YS/5a2Q55qE5ZWG5Yqh57K+6IuxLOWLpOWli+eahEppbeWQjOWtpuWDj+eJm+iZu+S4gOagt+eahOWPruedgOmCo+WPquaHkueMqiznu4jkuo7miJDlip/kuoYsMi4w6KKr5LuW5oux5LqG5Ye65p2lLOS7lueri+WKn+S6hizku5bnq4vlip/kuoYs5LuW5Li6Wi1CbG9n56uL5LqG5LiA5aSn5YqfLOaBreWWnEppbeWQjOWtpiEiIHJlbD0ibm9yZWZlcnJlciI+5bCP6aOe6b6ZPC9hPiZuYnNwOzxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL2Jicy56YmxvZ2NuLmNvbS8/MSIgdGl0bGU9IuaLvuWPgeWQjOWtpuWIm+eri+S6hlotQmxvZ+eahOiuuuWdmyzku5bmiopaLUJsb2fluKbkuIrkuoblvIDmlL7nmoTpgZPot68s6L+Z5bCx5pivWi1CbG9n6K665Z2bdWlkPTHnmoTkurrniakh56Wd5ou+5Y+B5ZCM5a2m55qE5a625bqt576O5ruh5bm456aPLOS6i+S4muWFtOaXuuWPkei+viEhISIgcmVsPSJub3JlZmVycmVyIj7mi77lj4E8L2E+Jm5ic3A7PGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHA6Ly93d3cubmljd2luZC5jb20iIHRpdGxlPSJNQU/kuLvluK3or7Tov4dDUOaYr+S4quWlveWQjOW/lyEiIHJlbD0ibm9yZWZlcnJlciI+Q2FwdGlhbjwvYT48L3RkPjwvdHI+PHRyPjx0ZCBjbGFzcz0idGQxNSI+5oSf6LCiPC90ZD48dGQ+PHNwYW4gdGl0bGU9IuepuuWkp+W4iOS5g+aYr1BIUOmrmOaJiyxaQlDnmoTmjIflvJXogIUhIj7nqbrln448L3NwYW4+IDxzcGFuIHRpdGxlPSLngrrlpKnlnLDnq4vlv4PvvIzngrrnlJ/msJHnq4vlkb3vvIzngrrlvoDogZbnubzntZXlrbjvvIzngrrokKzkuJbplovlpKrlubPjgIIiPualiuaHv+i7kjwvc3Bhbj4gPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHA6Ly93d3cuZXNsb3kuY29tIiB0aXRsZT0i5ZOI5ZOI5ZCM5a2m5ZCM5qC35pivWi1CbG9n55qE5Lyg5aWH5Lq654mpLOS7juWTiOWTiOS4iuWkp+WtpuWIsOeglOeptueUn+avleS4mizkuIDnm7Tpg73lnKjkuLpaLUJsb2fku5jlh7osWi1CbG9nIDEuOOaciVBT5ZKMVFPmj5Lku7bmiY3mm7Tnsr7lvaks5Zyo5Y+v5Lul6aKE6KeB55qE5bCG5p2lLOaIkeS7rOS+neeEtuS8muaLpeacieWTiOWTiOWQjOWtpueahCzkuI3op4HkuI3mlaPlk6YuIiByZWw9Im5vcmVmZXJyZXIiPkhhcGhpYzwvYT4mbmJzcDs8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly9iYnMuemJsb2djbi5jb20vPzYiIHRpdGxlPSLlubTovbvmnInkuLrnmoTmioDmnK/ovr7kuros5rSl6Zeo5bCP5by6LOi9rOaImOenu+WKqOW8gOWPkeS6hi4iIHJlbD0ibm9yZWZlcnJlciI+5piO5pyI5pif5YWJPC9hPiZuYnNwOzxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL2Jicy56YmxvZ2NuLmNvbS8/NDEiIHJlbD0ibm9yZWZlcnJlciI+U2lwbzwvYT4mbmJzcDs8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cDovL3d3dy53aWxsaWFtbG9uZy5pbmZvIiByZWw9Im5vcmVmZXJyZXIiPum+meWogeW7iTwvYT4mbmJzcDs8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cDovL2x1c29uZ3NvbmcuY29tIiByZWw9Im5vcmVmZXJyZXIiPuWNouadvuadvjwvYT4mbmJzcDs8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cDovL3d3dy53aWxmLmNuIiByZWw9Im5vcmVmZXJyZXIiPueLvOeahOaXi+W+izwvYT4mbmJzcDs8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly9iYnMuemJsb2djbi5jb20vPzQwODgxIiB0aXRsZT0i5aSn54yqLOWkp+eMqizlpKflpKfnjKoh5Lyg6K+05Lit55qE6YKj5aS05aSn54yqISEhIiByZWw9Im5vcmVmZXJyZXIiPuWkp+eMqjwvYT4mbmJzcDs8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly9iYnMuemJsb2djbi5jb20vPzc1NDg1IiByZWw9Im5vcmVmZXJyZXIiPueRnOW7tzwvYT4mbmJzcDs8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cDovL3d3dy5odWlzZW0uY29tIiByZWw9Im5vcmVmZXJyZXIiPua1geW5tDwvYT4mbmJzcDs8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cDovL3d3dy5ncmlkc21lZGlhLmNvbSIgcmVsPSJub3JlZmVycmVyIj7kv6Hlv4M8L2E+Jm5ic3A7PGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHA6Ly93d3cueXRlY24uY29tIiByZWw9Im5vcmVmZXJyZXIiPuWUkOacnTwvYT4g562J5pyL5Y+L77yM6L+Y5pyJ5oKoLi4uPC90ZD48L3RyPjx0cj48dGQgY2xhc3M9InRkMTUiPuebuOWFs+mTvuaOpTwvdGQ+PHRkPjxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vemJsb2djbi96YmxvZ3BocCIgdGl0bGU9IlotQmxvZ1BIUCBvbiBHaXRIdWIiIHJlbD0ibm9yZWZlcnJlciI+R2l0SHViPC9hPiZuYnNwOzxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy56YmxvZ2NuLmNvbS96YmxvZ3BocCIgcmVsPSJub3JlZmVycmVyIj7nqIvluo/kuIvovb0gPC9hPiZuYnNwOzxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3dpa2kuemJsb2djbi5jb20iIHJlbD0ibm9yZWZlcnJlciI+V2lraeaWh+ahoyA8L2E+Jm5ic3A7PGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vYXBwLnpibG9nY24uY29tIiByZWw9Im5vcmVmZXJyZXIiPuW6lOeUqOS4reW/gyA8L2E+Jm5ic3A7PGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vYmJzLnpibG9nY24uY29tIiByZWw9Im5vcmVmZXJyZXIiPlpCbG9nZ2Vy56S+5Yy6IDwvYT4mbmJzcDs8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly96YmxvZ2hvc3QuY24iIHJlbD0ibm9yZWZlcnJlciI+Wi1CbG9n5Li75py6IDwvYT48L3RkPjwvdHI+PC90Ym9keT48dGZvb3Q+PC90Zm9vdD48L3RhYmxlPg==</file>
	<file name='zb_system\defend\default\commentpost-verify.php' crc32='6873331C'  dt:dt='bin.base64'>eyogVGVtcGxhdGUgTmFtZTror4Torrrpqozor4HnoIEgKn0NCntpZiAkb3B0aW9uWydaQ19DT01NRU5UX1ZFUklGWV9FTkFCTEUnXSAmJiAhJHpicC5DaGVja1JpZ2h0cygnTm9WYWxpZENvZGUnKX0NCjxwPjxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJpbnBWZXJpZnkiIGlkPSJpbnBWZXJpZnkiIGNsYXNzPSJ0ZXh0IiB2YWx1ZT0iIiBzaXplPSIyOCIgdGFiaW5kZXg9IjQiIC8+IDxsYWJlbCBmb3I9ImlucFZlcmlmeSI+eyRsYW5nWydtc2cnXVsndmFsaWRjb2RlJ119KCopPC9sYWJlbD48aW1nIHN0eWxlPSJ3aWR0aDp7JG9wdGlvblsnWkNfVkVSSUZZQ09ERV9XSURUSCddfXB4O2hlaWdodDp7JG9wdGlvblsnWkNfVkVSSUZZQ09ERV9IRUlHSFQnXX1weDtjdXJzb3I6cG9pbnRlcjsiIHNyYz0ieyRhcnRpY2xlLlZhbGlkQ29kZVVybH0iIGFsdD0iIiB0aXRsZT0iIiBvbmNsaWNrPSJqYXZhc2NyaXB0OnRoaXMuc3JjPSd7JGFydGljbGUuVmFsaWRDb2RlVXJsfSZhbXA7dG09JytNYXRoLnJhbmRvbSgpOyIvPjwvcD4NCnsvaWZ9</file>
	<file name='zb_system\defend\default\module-archives.php' crc32='6F9A6AEF'  dt:dt='bin.base64'>e2ZvcmVhY2ggJHVybHMgYXMgJHVybH0NCjxsaT48YSBocmVmPSJ7JHVybC5Vcmx9Ij57JHVybC5OYW1lfSAoeyR1cmwuQ291bnR9KTwvYT48L2xpPg0Key9mb3JlYWNofQ==</file>
	<file name='zb_system\defend\default\module-authors.php' crc32='9C93E42E'  dt:dt='bin.base64'>e2ZvcmVhY2ggJGF1dGhvcnMgYXMgJGF1dGhvcn0NCjxsaT48YSBocmVmPSJ7JGF1dGhvci0+VXJsfSI+eyRhdXRob3ItPk5hbWV9PHNwYW4gY2xhc3M9ImFydGljbGUtbnVtcyI+ICh7JGF1dGhvci0+QXJ0aWNsZXN9KTwvc3Bhbj48L2E+PC9saT4NCnsvZm9yZWFjaH0NCg==</file>
	<file name='zb_system\defend\default\module-calendar.php' crc32='5ECBD323'  dt:dt='bin.base64'>PHRhYmxlIGlkPSJ0YkNhbGVuZGFyIj4NCiAgICA8Y2FwdGlvbj48YSBocmVmPSJ7JHByZXZNb250aFVybH0iPsKrPC9hPiZuYnNwOyZuYnNwOyZuYnNwOzxhIGhyZWY9Inskbm93TW9udGhVcmx9Ij57JG5vd1llYXJ95bm0eyRub3dNb250aH3mnIg8L2E+Jm5ic3A7Jm5ic3A7Jm5ic3A7PGEgaHJlZj0ieyRuZXh0TW9udGhVcmx9Ij7CuzwvYT48L2NhcHRpb24+DQogICAgPHRoZWFkPjx0cj57Zm9yICRpID0gMTsgJGkgPD0gNzsgJGkrK308dGggdGl0bGU9InskbGFuZ1snd2VlayddWyRpXX0iIHNjb3BlPSJjb2wiPjxzbWFsbD57JGxhbmdbJ3dlZWtfYWJiciddWyRpXX08L3NtYWxsPjwvdGg+ey9mb3J9PC90cj48L3RoZWFkPg0KICAgIDx0Ym9keT4NCiAgICA8dHI+DQp7cGhwfQ0KJG51bWJlck9mRGF5cyA9IGRhdGUoJ3QnLCBzdHJ0b3RpbWUoJGRhdGUpKTsNCiRkYXlPZldlZWsgPSBkYXRlKCdOJywgc3RydG90aW1lKCRkYXRlIC4gJy0xJykpOw0KJGxhc3REYXlPZldlZWsgPSA3IC0gZGF0ZSgnTicsIHN0cnRvdGltZSgkZGF0ZSAuICctJyAuICRudW1iZXJPZkRheXMpKTsNCiRkYXlPZldlZWtDb2xzcGFuID0gJGRheU9mV2VlayAtIDE7DQokbGFzdERheU9mV2Vla0NvbHNwYW4gPSAkbGFzdERheU9mV2VlayAtIDE7DQp7L3BocH0NCntpZiAkZGF5T2ZXZWVrID4gMX08dGQgY2xhc3M9InBhZCIgY29sc3Bhbj0ieyRkYXlPZldlZWtDb2xzcGFufSI+PC90ZD57L2lmfQ0Ke3BocH0NCiR3ZWVrQ291bnRlciA9ICRkYXlPZldlZWsgLSAxOw0KZm9yICgkaSA9IDE7ICRpIDw9ICRudW1iZXJPZkRheXM7ICRpKyspIHsNCgl7L3BocH08dGQ+e2lmIGlzc2V0KCRhcnJheWRhdGVbJGldKX08YSBocmVmPSJ7JGFycmF5ZGF0ZVskaV1bJ1VybCddfSIgdGl0bGU9InskYXJyYXlkYXRlWyRpXVsnRGF0ZSddfSAoeyRhcnJheWRhdGVbJGldWydDb3VudCddfSkiIHRhcmdldD0iX2JsYW5rIj57JGl9PC9hPntlbHNlfXskaX17L2lmfTwvdGQ+e3BocH0NCgkkd2Vla0NvdW50ZXIrKzsNCglpZiAoJHdlZWtDb3VudGVyICUgNyA9PSAwKSB7DQogICAgey9waHB9PC90cj48dHI+e3BocH0NCiAgICB9DQp9DQp7L3BocH0NCntpZiAkbGFzdERheU9mV2VlayA+IDF9PHRkIGNsYXNzPSJwYWQiIGNvbHNwYW49InskbGFzdERheU9mV2Vla0NvbHNwYW59Ij4gPC90ZD57L2lmfQ0KCTwvdHI+PC90Ym9keT4NCjwvdGFibGU+</file>
	<file name='zb_system\defend\default\module-catalog.php' crc32='49A647FB'  dt:dt='bin.base64'>eyRpID0gJG1heExpfXskaiA9IDB9eyRzID0gJyd9DQp7aWYgJHN0eWxlPT0yfQ0KICAgIHtmb3JlYWNoICRjYXRhbG9ncyBhcyAkY2F0YWxvZ30NCiAgICAgICAge2lmICRjYXRhbG9nLT5MZXZlbCA9PSAwfQ0KICAgICAgICAgICAgeyRzID0gJHMgLiAnPGxpIGNsYXNzPSJsaS1jYXRlIj48YSBocmVmPSInIC4gJGNhdGFsb2ctPlVybCAuICciPicgLiAkY2F0YWxvZy0+TmFtZSAuICc8L2E+PCEtLScgLiAkY2F0YWxvZy0+SUQgLiAnYmVnaW4tLT48IS0tJyAuICRjYXRhbG9nLT5JRCAuICdlbmQtLT48L2xpPid9DQogICAgICAgIHsvaWZ9DQogICAgey9mb3JlYWNofQ0KDQogICAge2ZvciAkaSA9IDE7ICRpIDw9IDM7ICRpKyt9DQogICAgICAgIHtmb3JlYWNoICRjYXRhbG9ncyBhcyAkY2F0YWxvZ30NCiAgICAgICAgICAgIHtpZiAkY2F0YWxvZy0+TGV2ZWwgPT0gJGl9DQogICAgICAgICAgICAgICAgeyRzID0gc3RyX3JlcGxhY2UoJzwhLS0nIC4gJGNhdGFsb2ctPlBhcmVudElEIC4gJ2VuZC0tPicsICc8bGkgY2xhc3M9ImxpLXN1YmNhdGUiPjxhIGhyZWY9IicgLiAkY2F0YWxvZy0+VXJsIC4gJyI+JyAuICRjYXRhbG9nLT5OYW1lIC4gJzwvYT48IS0tJyAuICRjYXRhbG9nLT5JRCAuICdiZWdpbi0tPjwhLS0nIC4gJGNhdGFsb2ctPklEIC4gJ2VuZC0tPjwvbGk+PCEtLScgLiAkY2F0YWxvZy0+UGFyZW50SUQgLiAnZW5kLS0+JywgJHMpfQ0KICAgICAgICAgICAgey9pZn0NCiAgICAgICAgey9mb3JlYWNofQ0KICAgIHsvZm9yfQ0KDQogICAge2ZvcmVhY2ggJGNhdGFsb2dzIGFzICRjYXRhbG9nfQ0KICAgICAgICB7JHMgPSBzdHJfcmVwbGFjZSgnPCEtLScgLiAkY2F0YWxvZy0+SUQgLiAnYmVnaW4tLT48IS0tJyAuICRjYXRhbG9nLT5JRCAuICdlbmQtLT4nLCAnJywgJHMpfQ0KICAgIHsvZm9yZWFjaH0NCiAgICB7Zm9yZWFjaCAkY2F0YWxvZ3MgYXMgJGNhdGFsb2d9DQogICAgICAgIHskcyA9IHN0cl9yZXBsYWNlKCc8IS0tJyAuICRjYXRhbG9nLT5JRCAuICdiZWdpbi0tPicsICc8dWwgY2xhc3M9InVsLXN1YmNhdGVzIj4nLCAkcyl9DQogICAgICAgIHskcyA9IHN0cl9yZXBsYWNlKCc8IS0tJyAuICRjYXRhbG9nLT5JRCAuICdlbmQtLT4nLCAnPC91bD4nLCAkcyl9DQogICAgey9mb3JlYWNofQ0KICAgIHtwaHB9b2JfY2xlYW4oKXsvcGhwfXskc30NCntlbHNlaWYgJHN0eWxlPT0xfQ0Ke2ZvcmVhY2ggJGNhdGFsb2dzIGFzICRjYXRhbG9nfQ0KPGxpPnskY2F0YWxvZy0+U3ltYm9sfTxhIGhyZWY9InskY2F0YWxvZy5Vcmx9Ij57JGNhdGFsb2cuTmFtZX08L2E+PC9saT4NCnskaiA9JGogKyAxfQ0Ke2lmICRpICE9IDAgJiYgJGogPj0gJGl9DQp7cGhwfWJyZWFrO3svcGhwfQ0Key9pZn0NCnsvZm9yZWFjaH0NCntlbHNlfQ0Ke2ZvcmVhY2ggJGNhdGFsb2dzIGFzICRjYXRhbG9nfQ0KPGxpPjxhIGhyZWY9InskY2F0YWxvZy5Vcmx9Ij57JGNhdGFsb2cuTmFtZX08L2E+PC9saT4NCnskaiA9JGogKyAxfQ0Ke2lmICRpICE9IDAgJiYgJGogPj0gJGl9DQogICAge3BocH1icmVhazt7L3BocH0NCnsvaWZ9DQp7L2ZvcmVhY2h9DQp7L2lmfQ==</file>
	<file name='zb_system\defend\default\module-comments.php' crc32='BA080E42'  dt:dt='bin.base64'>e2ZvcmVhY2ggJGNvbW1lbnRzIGFzICRjb21tZW50fQ0KPGxpPjxhIGhyZWY9InskY29tbWVudC0+UG9zdC0+VXJsfSNjbXR7JGNvbW1lbnQtPklEfSIgdGl0bGU9IntodG1sc3BlY2lhbGNoYXJzKCRjb21tZW50LT5BdXRob3ItPlN0YXRpY05hbWUgLiAnIEAgJyAuICRjb21tZW50LT5UaW1lKCkpfSI+e1RyYW5zZmVySFRNTCgkY29tbWVudC0+Q29udGVudCwgJ1tub2VudGVyXScpfTwvYT48L2xpPg0Key9mb3JlYWNofQ==</file>
	<file name='zb_system\defend\default\module-previous.php' crc32='7F85548C'  dt:dt='bin.base64'>e2ZvcmVhY2ggJGFydGljbGVzIGFzICRhcnRpY2xlfQ0KPGxpPjxhIGhyZWY9InskYXJ0aWNsZS5Vcmx9Ij57JGFydGljbGUuVGl0bGV9PC9hPjwvbGk+DQp7L2ZvcmVhY2h9</file>
	<file name='zb_system\defend\default\module-statistics.php' crc32='3CB58216'  dt:dt='bin.base64'>e2ZvcmVhY2ggJGFsbGluZm8gYXMgJGluZm99DQo8bGk+eyRpbmZvWyduYW1lJ119OnskaW5mb1snY291bnQnXX08L2xpPg0Key9mb3JlYWNofQ==</file>
	<file name='zb_system\defend\default\module-tags.php' crc32='2E9076C'  dt:dt='bin.base64'>e2ZvcmVhY2ggJHRhZ3MgYXMgJHRhZ30NCjxsaT48YSBocmVmPSJ7JHRhZy5Vcmx9Ij57JHRhZy5OYW1lfTxzcGFuIGNsYXNzPSJ0YWctY291bnQiPiAoeyR0YWcuQ291bnR9KTwvc3Bhbj48L2E+PC9saT4NCnsvZm9yZWFjaH0=</file>
	<file name='zb_system\function\c_system_compat.php' crc32='3DC30E35'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\c_system_misc.php' crc32='7594B86F'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\c_system_version.php' crc32='E29E249'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KLyoNCiAqIOWumuS5ieeJiOacrOWPtw0KDQrov5nmmK8xLjXlj5bmtojnmoTmlbDnu4TvvIzooqvlronmjpLliLDlupTnlKjkuK3lv4PlrqLmiLfnq6/nmoRpbmNsdWRlLnBocOaWh+S7tumHjOOAgg0KI+WumuS5ieeJiOacrOWPt+WIlw0KJHpicHZlcnM9YXJyYXkoKTsNCiR6YnB2ZXJzWycxMzA3MDcnXT0nMS4wIEJldGEgQnVpbGQgMTMwNzA3JzsNCiR6YnB2ZXJzWycxMzExMTEnXT0nMS4wIEJldGEyIEJ1aWxkIDEzMTExMSc7DQokemJwdmVyc1snMTMxMjIxJ109JzEuMSBUYWljaGkgQnVpbGQgMTMxMjIxJzsNCiR6YnB2ZXJzWycxNDAyMjAnXT0nMS4yIEhpcHBvIEJ1aWxkIDE0MDIyMCc7DQokemJwdmVyc1snMTQwNjE0J109JzEuMyBXb25jZSBCdWlsZCAxNDA2MTQnOw0KJHpicHZlcnNbJzE1MDEwMSddPScxLjQgRGVlcGx1ZSBCdWlsZCAxNTAxMDEnOw0KJHpicHZlcnNbJzE1MTYyNiddPScxLjUgWmVybyBCdWlsZCAxNTE2MjYnOw0KDQogKi8NCmRlZmluZSgnWkNfVkVSU0lPTl9NQUpPUicsICcxJyk7DQpkZWZpbmUoJ1pDX1ZFUlNJT05fTUlOT1InLCAnNScpOw0KZGVmaW5lKCdaQ19WRVJTSU9OX0JVSUxEJywgJzInKTsNCmRlZmluZSgnWkNfVkVSU0lPTl9DT01NSVQnLCAnMTkzNScpOw0KZGVmaW5lKCdaQ19WRVJTSU9OX0NPREVOQU1FJywgJ1plcm8nKTsNCmRlZmluZSgnWkNfVkVSU0lPTicsIFpDX1ZFUlNJT05fTUFKT1IgLiAnLicgLiBaQ19WRVJTSU9OX01JTk9SIC4gJy4nIC4gWkNfVkVSU0lPTl9CVUlMRCAuICcuJyAuIFpDX1ZFUlNJT05fQ09NTUlUKTsNCmRlZmluZSgnWkNfVkVSU0lPTl9ESVNQTEFZJywgWkNfVkVSU0lPTl9NQUpPUiAuICcuJyAuIFpDX1ZFUlNJT05fTUlOT1IgLiAnLicgLiBaQ19WRVJTSU9OX0JVSUxEIC4gJyAnIC4gWkNfVkVSU0lPTl9DT0RFTkFNRSk7DQpkZWZpbmUoJ1pDX1ZFUlNJT05fRlVMTCcsIFpDX1ZFUlNJT04gLiAnICgnIC4gWkNfVkVSU0lPTl9DT0RFTkFNRSAuICcpJyk7DQpkZWZpbmUoJ1pDX0JMT0dfQ09NTUlUJywgWkNfVkVSU0lPTl9DT01NSVQpOyAvLyDkuLrlhpnlhaXns7vnu5/phY3nva7nu5/kuIDpo47moLwNCiRHTE9CQUxTWydibG9ndmVyc2lvbiddID0gWkNfVkVSU0lPTl9NQUpPUiAuIFpDX1ZFUlNJT05fTUlOT1IgLiBaQ19WRVJTSU9OX0NPTU1JVDsNCmRlZmluZSgnWkNfQkxPR19WRVJTSU9OJywgWkNfVkVSU0lPTl9ESVNQTEFZIC4gJyBCdWlsZCAnIC4gJEdMT0JBTFNbJ2Jsb2d2ZXJzaW9uJ10pOw0K</file>
	<file name='zb_system\function\lib\app.php' crc32='D07406EF'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\category.php' crc32='FE0726E9'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\comment.php' crc32='B1BEA872'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KDQovKioNCiAqIOivhOiuuuexuy4NCiAqDQogKiBAcHJvcGVydHkgc3RyaW5nIE5hbWUNCiAqIEBwcm9wZXJ0eSBpbnR8c3RyaW5nIEF1dGhvcklEDQogKiBAcHJvcGVydHkgc3RyaW5nIEhvbWVQYWdlDQogKiBAcHJvcGVydHkgc3RyaW5nIEVtYWlsDQogKiBAcHJvcGVydHkgaW50fHN0cmluZyBSb290SUQNCiAqIEBwcm9wZXJ0eSBpbnR8c3RyaW5nIFBhcmVudElEDQogKiBAcHJvcGVydHkgaW50fHN0cmluZyBMb2dJRA0KICogQHByb3BlcnR5IGJvb2wgSXNDaGVja2luZyDlrqHmoLjnirbmgIENCiAqIEBwcm9wZXJ0eSBpbnR8c3RyaW5nIExldmVsIOivhOiuuuWxgue6pw0KICogQHByb3BlcnR5IGludCBQb3N0VGltZQ0KICogQHByb3BlcnR5IENvbW1lbnRbXSBDb21tZW50cyDlrZDor4TorroNCiAqIEBwcm9wZXJ0eSBzdHJpbmcgQ29udGVudA0KICovDQpjbGFzcyBDb21tZW50IGV4dGVuZHMgQmFzZQ0Kew0KICAgIC8qKg0KICAgICAqIEB2YXIgYm9vbCDmmK/lkKbkuKLlvIPvvIzlpoLpgJrov4fmj5Lku7bnrYnliKTmlq3kuLrlnoPlnL7or4TorrrliJnmoIforrDkuLp0cnVlDQogICAgICovDQogICAgcHVibGljICRJc1Rocm93ID0gZmFsc2U7DQogICAgLyoqDQogICAgICogQHZhciBpbnQg6K+E6K665bGC5Y+3DQogICAgICovDQogICAgcHVibGljICRGbG9vcklEID0gMDsNCg0KICAgIC8qKg0KICAgICAqIOaehOmAoOWHveaVsC4NCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gX19jb25zdHJ1Y3QoKQ0KICAgIHsNCiAgICAgICAgZ2xvYmFsICR6YnA7DQogICAgICAgIHBhcmVudDo6X19jb25zdHJ1Y3QoJHpicC0+dGFibGVbJ0NvbW1lbnQnXSwgJHpicC0+ZGF0YWluZm9bJ0NvbW1lbnQnXSwgX19DTEFTU19fKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDprZTmnK/mlrnms5XvvJrph43ovb3vvIzlj6/pgJrov4fmjqXlj6NGaWx0ZXJfUGx1Z2luX0NvbW1lbnRfQ2FsbOa3u+WKoOiHquWumuS5ieWHveaVsC4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJG1ldGhvZCDmlrnms5UNCiAgICAgKiBAcGFyYW0gbWl4ZWQgICRhcmdzICAg5Y+C5pWwDQogICAgICoNCiAgICAgKiBAcmV0dXJuIG1peGVkDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIF9fY2FsbCgkbWV0aG9kLCAkYXJncykNCiAgICB7DQogICAgICAgIGZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX0NvbW1lbnRfQ2FsbCddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgJGZwcmV0dXJuID0gJGZwbmFtZSgkdGhpcywgJG1ldGhvZCwgJGFyZ3MpOw0KICAgICAgICAgICAgaWYgKCRmcHNpZ25hbCA9PSBQTFVHSU5fRVhJVFNJR05BTF9SRVRVUk4pIHsNCiAgICAgICAgICAgICAgICAkZnBzaWduYWwgPSBQTFVHSU5fRVhJVFNJR05BTF9OT05FOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuICRmcHJldHVybjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOiOt+WPluivhOiuuualvOWPty4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBpbnQgJHBhcmVudGlkIOeItuivhOiuuklEDQogICAgICoNCiAgICAgKiBAcmV0dXJuIGFycmF5fGludHxtaXhlZA0KICAgICAqLw0KICAgIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gR2V0Um9vdElEKCRwYXJlbnRpZCkNCiAgICB7DQogICAgICAgIGdsb2JhbCAkemJwOw0KICAgICAgICBpZiAoJHBhcmVudGlkID09IDApIHsNCiAgICAgICAgICAgIHJldHVybiAwOw0KICAgICAgICB9DQoNCiAgICAgICAgJGMgPSAkemJwLT5HZXRDb21tZW50QnlJRCgkcGFyZW50aWQpOw0KICAgICAgICBpZiAoJGMtPlJvb3RJRCA9PSAwKSB7DQogICAgICAgICAgICByZXR1cm4gJGMtPklEOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgcmV0dXJuICRjLT5Sb290SUQ7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDor4Torrrml7bpl7QuDQogICAgICoNCiAgICAgKiBAcGFyYW0gc3RyaW5nICRzIOaXtumXtOagvOW8jw0KICAgICAqDQogICAgICogQHJldHVybiBib29sfHN0cmluZw0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBUaW1lKCRzID0gJ1ktbS1kIEg6aTpzJykNCiAgICB7DQogICAgICAgIHJldHVybiBkYXRlKCRzLCAoaW50KSAkdGhpcy0+UG9zdFRpbWUpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkbmFtZQ0KICAgICAqIEBwYXJhbSAkdmFsdWUNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gX19zZXQoJG5hbWUsICR2YWx1ZSkNCiAgICB7DQogICAgICAgIGlmIChpbl9hcnJheSgkbmFtZSwgYXJyYXkoJ0F1dGhvcicsICdDb21tZW50cycsICdMZXZlbCcsICdQb3N0JykpKSB7DQogICAgICAgICAgICByZXR1cm47DQogICAgICAgIH0NCiAgICAgICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fQ29tbWVudF9TZXQnXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAgICAgICAgICRmcHJldHVybiA9ICRmcG5hbWUoJHRoaXMsICRuYW1lLCAkdmFsdWUpOw0KICAgICAgICB9DQogICAgICAgIHBhcmVudDo6X19zZXQoJG5hbWUsICR2YWx1ZSk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRuYW1lDQogICAgICoNCiAgICAgKiBAcmV0dXJuIGFycmF5fGludHxNZW1iZXJ8bWl4ZWQNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gX19nZXQoJG5hbWUpDQogICAgew0KICAgICAgICBnbG9iYWwgJHpicDsNCiAgICAgICAgaWYgKCRuYW1lID09PSAnQXV0aG9yJykgew0KICAgICAgICAgICAgJG0gPSAkemJwLT5HZXRNZW1iZXJCeUlEKCR0aGlzLT5BdXRob3JJRCk7DQogICAgICAgICAgICBpZiAoJG0tPklEID09IDApIHsNCiAgICAgICAgICAgICAgICAkbS0+TmFtZSA9ICR0aGlzLT5OYW1lOw0KICAgICAgICAgICAgICAgICRtLT5BbGlhcyA9ICR0aGlzLT5OYW1lOw0KICAgICAgICAgICAgICAgICRtLT5FbWFpbCA9ICR0aGlzLT5FbWFpbDsNCiAgICAgICAgICAgICAgICAkbS0+SG9tZVBhZ2UgPSAkdGhpcy0+SG9tZVBhZ2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiAkbTsNCiAgICAgICAgfSBlbHNlaWYgKCRuYW1lID09PSAnQ29tbWVudHMnKSB7DQogICAgICAgICAgICAkYXJyYXkgPSBhcnJheSgpOw0KICAgICAgICAgICAgZm9yZWFjaCAoJHpicC0+Y29tbWVudHMgYXMgJGNvbW1lbnQpIHsNCiAgICAgICAgICAgICAgICBpZiAoJGNvbW1lbnQtPlBhcmVudElEID09ICR0aGlzLT5JRCkgew0KICAgICAgICAgICAgICAgICAgICAkYXJyYXlbXSA9ICYkemJwLT5jb21tZW50c1skY29tbWVudC0+SURdOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuICRhcnJheTsNCiAgICAgICAgfSBlbHNlaWYgKCRuYW1lID09PSAnTGV2ZWwnKSB7DQogICAgICAgICAgICByZXR1cm4gJHRoaXMtPkdldERlZXAoJHRoaXMpOw0KICAgICAgICB9IGVsc2VpZiAoJG5hbWUgPT09ICdQb3N0Jykgew0KICAgICAgICAgICAgcmV0dXJuICR6YnAtPkdldFBvc3RCeUlEKCR0aGlzLT5Mb2dJRCk7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9Db21tZW50X0dldCddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgICAgICRmcHJldHVybiA9ICRmcG5hbWUoJHRoaXMsICRuYW1lKTsNCiAgICAgICAgICAgICAgICBpZiAoJGZwc2lnbmFsID09IFBMVUdJTl9FWElUU0lHTkFMX1JFVFVSTikgew0KICAgICAgICAgICAgICAgICAgICAkZnBzaWduYWwgPSBQTFVHSU5fRVhJVFNJR05BTF9OT05FOw0KDQogICAgICAgICAgICAgICAgICAgIHJldHVybiAkZnByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuIHBhcmVudDo6X19nZXQoJG5hbWUpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOS/neWtmOivhOiuuuaVsOaNri4NCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBTYXZlKCkNCiAgICB7DQogICAgICAgIGdsb2JhbCAkemJwOw0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9Db21tZW50X1NhdmUnXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAgICAgICAgICRmcHJldHVybiA9ICRmcG5hbWUoJHRoaXMpOw0KICAgICAgICAgICAgaWYgKCRmcHNpZ25hbCA9PSBQTFVHSU5fRVhJVFNJR05BTF9SRVRVUk4pIHsNCiAgICAgICAgICAgICAgICAkZnBzaWduYWwgPSBQTFVHSU5fRVhJVFNJR05BTF9OT05FOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuICRmcHJldHVybjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiBwYXJlbnQ6OlNhdmUoKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gRGVsKCkNCiAgICB7DQogICAgICAgIGdsb2JhbCAkemJwOw0KICAgICAgICBpZiAoJHRoaXMtPklEID4gMCkgew0KICAgICAgICAgICAgdW5zZXQoJHpicC0+Y29tbWVudHNbJHRoaXMtPklEXSk7DQogICAgICAgIH0NCg0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9Db21tZW50X0RlbCddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgJGZwcmV0dXJuID0gJGZwbmFtZSgkdGhpcyk7DQogICAgICAgICAgICBpZiAoJGZwc2lnbmFsID09IFBMVUdJTl9FWElUU0lHTkFMX1JFVFVSTikgew0KICAgICAgICAgICAgICAgICRmcHNpZ25hbCA9IFBMVUdJTl9FWElUU0lHTkFMX05PTkU7DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gJGZwcmV0dXJuOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuIHBhcmVudDo6RGVsKCk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5b6X5Yiw6K+E6K665rex5bqmLg0KICAgICAqDQogICAgICogQHBhcmFtIG9iamVjdCAkb2JqZWN0DQogICAgICogQHBhcmFtIGludCAgICAkZGVlcA0KICAgICAqDQogICAgICogQHJldHVybiBpbnQg6K+E6K665rex5bqmDQogICAgICovDQogICAgcHJpdmF0ZSBmdW5jdGlvbiBHZXREZWVwKCYkb2JqZWN0LCAkZGVlcCA9IDApDQogICAgew0KICAgICAgICBnbG9iYWwgJHpicDsNCiAgICAgICAgaWYgKCRvYmplY3QtPlBhcmVudElEID09IDAgfHwgJG9iamVjdC0+UGFyZW50SUQgPT0gJG9iamVjdC0+SUQpIHsNCiAgICAgICAgICAgIHJldHVybiAkZGVlcDsNCiAgICAgICAgfQ0KICAgICAgICAkcGFyZW50Q29tbWVudCA9ICR6YnAtPkdldENvbW1lbnRCeUlEKCRvYmplY3QtPlBhcmVudElEKTsNCg0KICAgICAgICByZXR1cm4gJHRoaXMtPkdldERlZXAoJHBhcmVudENvbW1lbnQsICRkZWVwICsgMSk7DQogICAgfQ0KfQ0K</file>
	<file name='zb_system\function\lib\config.php' crc32='6FFAAD4'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\member.php' crc32='37487A68'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\module.php' crc32='C8ECC30C'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KDQovKioNCiAqIOaooeWdl+exuy4NCiAqDQogKiBAcHJvcGVydHkgc3RyaW5nIEZpbGVOYW1lDQogKiBAcHJvcGVydHkgaW50fHN0cmluZyBJRA0KICogQHByb3BlcnR5IHN0cmluZyBTb3VyY2Ug5qih5Z2X5p2l5rqQDQogKiBAcHJvcGVydHkgc3RyaW5nIENvbnRlbnQNCiAqIEBwcm9wZXJ0eSBzdHJpbmcgVHlwZSDmqKHlnZfmmL7npLrnsbvlnovvvIhkaXYgLyB1bO+8iQ0KICogQHByb3BlcnR5IGJvb2wgTm9SZWZyZXNoIOaLkue7neezu+e7n+WIt+aWsOivpeaooeWdlw0KICovDQpjbGFzcyBNb2R1bGUgZXh0ZW5kcyBCYXNlDQp7DQogICAgLyoqDQogICAgICog5p6E6YCg5Ye95pWwLg0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBfX2NvbnN0cnVjdCgpDQogICAgew0KICAgICAgICBnbG9iYWwgJHpicDsNCiAgICAgICAgcGFyZW50OjpfX2NvbnN0cnVjdCgkemJwLT50YWJsZVsnTW9kdWxlJ10sICR6YnAtPmRhdGFpbmZvWydNb2R1bGUnXSwgX19DTEFTU19fKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDorr7nva7lj4LmlbDlgLwNCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJG5hbWUNCiAgICAgKiBAcGFyYW0gbWl4ZWQgICR2YWx1ZQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBfX3NldCgkbmFtZSwgJHZhbHVlKQ0KICAgIHsNCiAgICAgICAgZ2xvYmFsICR6YnA7DQogICAgICAgIGlmICgkbmFtZSA9PSAnU291cmNlVHlwZScpIHsNCiAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgfQ0KICAgICAgICBpZiAoJG5hbWUgPT0gJ05vUmVmcmVzaCcpIHsNCiAgICAgICAgICAgIGlmICgoYm9vbCkgJHZhbHVlKSB7DQogICAgICAgICAgICAgICAgJHRoaXMtPk1ldGFzLT5ub3JlZnJlc2ggPSAoYm9vbCkgJHZhbHVlOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAkdGhpcy0+TWV0YXMtPkRlbCgnbm9yZWZyZXNoJyk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgfQ0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9Nb2R1bGVfU2V0J10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICAgICAkZnBuYW1lKCR0aGlzLCAkbmFtZSwgJHZhbHVlKTsNCiAgICAgICAgfQ0KICAgICAgICBwYXJlbnQ6Ol9fc2V0KCRuYW1lLCAkdmFsdWUpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOiOt+WPluWPguaVsOWAvA0KICAgICAqDQogICAgICogQHBhcmFtICRuYW1lDQogICAgICoNCiAgICAgKiBAcmV0dXJuIGJvb2x8bWl4ZWR8c3RyaW5nDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIF9fZ2V0KCRuYW1lKQ0KICAgIHsNCiAgICAgICAgZ2xvYmFsICR6YnA7DQogICAgICAgIGlmICgkbmFtZSA9PSAnU291cmNlVHlwZScpIHsNCiAgICAgICAgICAgIGlmICgkdGhpcy0+U291cmNlID09ICdzeXN0ZW0nKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuICdzeXN0ZW0nOw0KICAgICAgICAgICAgfSBlbHNlaWYgKCR0aGlzLT5Tb3VyY2UgPT0gJ3VzZXInKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuICd1c2VyJzsNCiAgICAgICAgICAgIH0gZWxzZWlmICgkdGhpcy0+U291cmNlID09ICd0aGVtZScpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gJ3RoZW1lJzsNCiAgICAgICAgICAgIH0gZWxzZWlmICgkdGhpcy0+U291cmNlID09ICdwbHVnaW5fJyAuICR6YnAtPnRoZW1lKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuICd0aGVtZSc7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIHJldHVybiAncGx1Z2luJzsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICBpZiAoJG5hbWUgPT0gJ05vUmVmcmVzaCcpIHsNCiAgICAgICAgICAgIHJldHVybiAoYm9vbCkgJHRoaXMtPk1ldGFzLT5ub3JlZnJlc2g7DQogICAgICAgIH0NCiAgICAgICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fTW9kdWxlX0dldCddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgJGZwcmV0dXJuID0gJGZwbmFtZSgkdGhpcywgJG5hbWUpOw0KICAgICAgICAgICAgaWYgKCRmcHNpZ25hbCA9PSBQTFVHSU5fRVhJVFNJR05BTF9SRVRVUk4pIHsNCiAgICAgICAgICAgICAgICAkZnBzaWduYWwgPSBQTFVHSU5fRVhJVFNJR05BTF9OT05FOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuICRmcHJldHVybjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiBwYXJlbnQ6Ol9fZ2V0KCRuYW1lKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gU2F2ZSgpDQogICAgew0KICAgICAgICBnbG9iYWwgJHpicDsNCg0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9Nb2R1bGVfU2F2ZSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgJGZwcmV0dXJuID0gJGZwbmFtZSgkdGhpcyk7DQogICAgICAgICAgICBpZiAoJGZwc2lnbmFsID09IFBMVUdJTl9FWElUU0lHTkFMX1JFVFVSTikgew0KICAgICAgICAgICAgICAgICRmcHNpZ25hbCA9IFBMVUdJTl9FWElUU0lHTkFMX05PTkU7DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gJGZwcmV0dXJuOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGlmICgkdGhpcy0+U291cmNlID09ICd0aGVtZScpIHsNCiAgICAgICAgICAgIGlmICghJHRoaXMtPkZpbGVOYW1lKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICRjID0gJHRoaXMtPkNvbnRlbnQ7DQogICAgICAgICAgICAkZCA9ICR6YnAtPnVzZXJzZGlyIC4gJ3RoZW1lLycgLiAkemJwLT50aGVtZSAuICcvaW5jbHVkZS8nOw0KICAgICAgICAgICAgJGYgPSAkZCAuICR0aGlzLT5GaWxlTmFtZSAuICcucGhwJzsNCiAgICAgICAgICAgIGlmICghZmlsZV9leGlzdHMoJGQpKSB7DQogICAgICAgICAgICAgICAgQG1rZGlyKCRkLCAwNzU1KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIEBmaWxlX3B1dF9jb250ZW50cygkZiwgJGMpOw0KDQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfQ0KDQogICAgICAgIC8v6ZiyTW9kdWxl6YeN5aSN5L+d5a2Y55qE5py65Yi2DQogICAgICAgICRtID0gJHpicC0+R2V0TGlzdFR5cGUoJ01vZHVsZScsDQogICAgICAgICAgICAgICAgICAgICR6YnAtPmRiLT5zcWwtPmdldCgpLT5zZWxlY3QoJHpicC0+dGFibGVbJ01vZHVsZSddKQ0KICAgICAgICAgICAgICAgICAgICAtPndoZXJlKGFycmF5KCc9JywgJHpicC0+ZGF0YWluZm9bJ01vZHVsZSddWydGaWxlTmFtZSddWzBdLCAkdGhpcy0+RmlsZU5hbWUpKQ0KICAgICAgICAgICAgICAgICAgICAtPnNxbA0KICAgICAgICAgICAgICAgICk7DQogICAgICAgIGlmIChjb3VudCgkbSkgPCAxKSB7DQogICAgICAgICAgICByZXR1cm4gcGFyZW50OjpTYXZlKCk7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICBpZiAoJHRoaXMtPklEID09IDApIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiBwYXJlbnQ6OlNhdmUoKTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBEZWwoKQ0KICAgIHsNCiAgICAgICAgZ2xvYmFsICR6YnA7DQogICAgICAgIGZvcmVhY2ggKCR6YnAtPm1vZHVsZXMgYXMgJGtleSA9PiAkbSkgew0KICAgICAgICAgICAgaWYgKCR0aGlzLT5JRCA+IDAgJiYgJG0tPklEID09ICR0aGlzLT5JRCkgew0KICAgICAgICAgICAgICAgIHVuc2V0KCR6YnAtPm1vZHVsZXNbJGtleV0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgaWYgKCR0aGlzLT5Tb3VyY2UgPT0gJ3RoZW1lJykgew0KICAgICAgICAgICAgICAgIGlmICgkdGhpcy0+RmlsZU5hbWUgIT0gJycgJiYgJG0tPkZpbGVOYW1lID09ICR0aGlzLT5GaWxlTmFtZSkgew0KICAgICAgICAgICAgICAgICAgICB1bnNldCgkemJwLT5tb2R1bGVzWyRrZXldKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgZm9yZWFjaCAoJHpicC0+bW9kdWxlc2J5ZmlsZW5hbWUgYXMgJGtleSA9PiAkbSkgew0KICAgICAgICAgICAgaWYgKCR0aGlzLT5GaWxlTmFtZSAhPSAnJyAmJiAkbS0+RmlsZU5hbWUgPT0gJHRoaXMtPkZpbGVOYW1lKSB7DQogICAgICAgICAgICAgICAgdW5zZXQoJHpicC0+bW9kdWxlc2J5ZmlsZW5hbWVbJHRoaXMtPkZpbGVOYW1lXSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9Nb2R1bGVfRGVsJ10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICAgICAkZnBzaWduYWwgPSBQTFVHSU5fRVhJVFNJR05BTF9OT05FOw0KICAgICAgICAgICAgJGZwcmV0dXJuID0gJGZwbmFtZSgkdGhpcyk7DQogICAgICAgICAgICBpZiAoJGZwc2lnbmFsID09IFBMVUdJTl9FWElUU0lHTkFMX1JFVFVSTikgew0KICAgICAgICAgICAgICAgIHJldHVybiAkZnByZXR1cm47DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgaWYgKCR0aGlzLT5Tb3VyY2UgPT0gJ3RoZW1lJykgew0KICAgICAgICAgICAgaWYgKCEkdGhpcy0+RmlsZU5hbWUpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgJGYgPSAkemJwLT51c2Vyc2RpciAuICd0aGVtZS8nIC4gJHpicC0+dGhlbWUgLiAnL2luY2x1ZGUvJyAuICR0aGlzLT5GaWxlTmFtZSAuICcucGhwJzsNCiAgICAgICAgICAgIGlmIChmaWxlX2V4aXN0cygkZikpIHsNCiAgICAgICAgICAgICAgICBAdW5saW5rKCRmKTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0NCg0KICAgICAgICByZXR1cm4gcGFyZW50OjpEZWwoKTsNCiAgICB9DQoNCiAgICBwdWJsaWMgZnVuY3Rpb24gQnVpbGQoKQ0KICAgIHsNCiAgICAgICAgaWYgKCR0aGlzLT5Ob1JlZnJlc2ggPT0gdHJ1ZSkgew0KICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKGlzc2V0KE1vZHVsZUJ1aWxkZXI6OiRMaXN0WyR0aGlzLT5GaWxlTmFtZV0pKSB7DQogICAgICAgICAgICBpZiAoaXNzZXQoTW9kdWxlQnVpbGRlcjo6JExpc3RbJHRoaXMtPkZpbGVOYW1lXVsnZnVuY3Rpb24nXSkpIHsNCiAgICAgICAgICAgICAgICBpZiAoaXNzZXQoTW9kdWxlQnVpbGRlcjo6JExpc3RbJHRoaXMtPkZpbGVOYW1lXVsncGFyYW1ldGVycyddKSkgew0KICAgICAgICAgICAgICAgICAgICAkdGhpcy0+Q29udGVudCA9IGNhbGxfdXNlcl9mdW5jKE1vZHVsZUJ1aWxkZXI6OiRMaXN0WyR0aGlzLT5GaWxlTmFtZV1bJ2Z1bmN0aW9uJ10sIE1vZHVsZUJ1aWxkZXI6OiRMaXN0WyR0aGlzLT5GaWxlTmFtZV1bJ3BhcmFtZXRlcnMnXSk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgJHRoaXMtPkNvbnRlbnQgPSBjYWxsX3VzZXJfZnVuYyhNb2R1bGVCdWlsZGVyOjokTGlzdFskdGhpcy0+RmlsZU5hbWVdWydmdW5jdGlvbiddKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQp9DQo=</file>
	<file name='zb_system\function\lib\modulebuilder.php' crc32='DA74B717'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\pagebar.php' crc32='B303CF36'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KLyoqDQogKiDliIbpobXmnaHnoIENCiAqLw0KY2xhc3MgUGFnZUJhcg0Kew0KICAgIC8qKg0KICAgICAqIEB2YXIgaW50fG51bGwg5YaF5a655oC75pWwDQogICAgICovDQogICAgcHVibGljICRDb3VudCA9IG51bGw7DQogICAgLyoqDQogICAgICogQHZhciBpbnQgUGFnZWJhcumVv+W6puaVsOmHjw0KICAgICAqLw0KICAgIHB1YmxpYyAkUGFnZUJhckNvdW50ID0gMDsNCiAgICAvKioNCiAgICAgKiBAdmFyIGludCDmr4/pobXmlbDph48NCiAgICAgKi8NCiAgICBwdWJsaWMgJFBhZ2VDb3VudCA9IDA7DQogICAgLyoqDQogICAgICogQHZhciBpbnQg5oC76aG15pWwDQogICAgICovDQogICAgcHVibGljICRQYWdlQWxsID0gMDsNCiAgICAvKioNCiAgICAgKiBAdmFyIGludCDlvZPliY3pobUNCiAgICAgKi8NCiAgICBwdWJsaWMgJFBhZ2VOb3cgPSAwOw0KICAgIC8qKg0KICAgICAqIEB2YXIgaW50IOi1t+Wni+mhtQ0KICAgICAqLw0KICAgIHB1YmxpYyAkUGFnZUZpcnN0ID0gMDsNCiAgICAvKioNCiAgICAgKiBAdmFyIGludCDmnIDlkI7pobUNCiAgICAgKi8NCiAgICBwdWJsaWMgJFBhZ2VMYXN0ID0gMDsNCiAgICAvKioNCiAgICAgKiBAdmFyIGludCDkuIrkuIDpobUNCiAgICAgKi8NCiAgICBwdWJsaWMgJFBhZ2VQcmV2aW91cyA9IDA7DQogICAgLyoqDQogICAgICogQHZhciBpbnQg5LiL5LiA6aG1DQogICAgICovDQogICAgcHVibGljICRQYWdlTmV4dCA9IDA7DQogICAgLyoqDQogICAgICogQHZhciBudWxsfFVybFJ1bGUNCiAgICAgKi8NCiAgICBwdWJsaWMgJFVybFJ1bGUgPSBudWxsOw0KICAgIC8qKg0KICAgICAqIEB2YXIgYXJyYXkNCiAgICAgKi8NCiAgICBwdWJsaWMgJGJ1dHRvbnMgPSBhcnJheSgpOw0KICAgIC8qKg0KICAgICAqIEB2YXIgbnVsbA0KICAgICAqLw0KICAgIHB1YmxpYyAkcHJldmJ1dHRvbiA9IG51bGw7DQogICAgLyoqDQogICAgICogQHZhciBudWxsDQogICAgICovDQogICAgcHVibGljICRuZXh0YnV0dG9uID0gbnVsbDsNCiAgICAvKioNCiAgICAgKiBAdmFyIGFycmF5DQogICAgICovDQogICAgcHVibGljICRCdXR0b25zID0gYXJyYXkoKTsNCiAgICAvKioNCiAgICAgKiBAdmFyIG51bGwNCiAgICAgKi8NCiAgICBwdWJsaWMgJFByZXZCdXR0b24gPSBudWxsOw0KICAgIC8qKg0KICAgICAqIEB2YXIgbnVsbA0KICAgICAqLw0KICAgIHB1YmxpYyAkTmV4dEJ1dHRvbiA9IG51bGw7DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHVybA0KICAgICAqIEBwYXJhbSBib29sICRtYWtlUmVwbGFjZQ0KICAgICAqIEBwYXJhbSBib29sICRpc0luZGV4DQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIF9fY29uc3RydWN0KCR1cmwsICRtYWtlUmVwbGFjZSA9IHRydWUsICRpc0luZGV4ID0gZmFsc2UpDQogICAgew0KICAgICAgICAkdGhpcy0+VXJsUnVsZSA9IG5ldyBVcmxSdWxlKCR1cmwpOw0KICAgICAgICAkdGhpcy0+VXJsUnVsZS0+TWFrZVJlcGxhY2UgPSAkbWFrZVJlcGxhY2U7DQogICAgICAgICR0aGlzLT5VcmxSdWxlLT5Jc0luZGV4ID0gJGlzSW5kZXg7DQogICAgICAgICR0aGlzLT5CdXR0b25zID0gJiR0aGlzLT5idXR0b25zOw0KICAgICAgICAkdGhpcy0+UHJldkJ1dHRvbiA9ICYkdGhpcy0+cHJldmJ1dHRvbjsNCiAgICAgICAgJHRoaXMtPk5leHRCdXR0b24gPSAmJHRoaXMtPm5leHRidXR0b247DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5p6E6YCg5YiG6aG15p2hDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIE1ha2UoKQ0KICAgIHsNCiAgICAgICAgZ2xvYmFsICR6YnA7DQogICAgICAgIGlmICgkdGhpcy0+UGFnZUNvdW50ID09IDApIHsNCiAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgfQ0KDQogICAgICAgICR0aGlzLT5QYWdlQWxsID0gY2VpbCgkdGhpcy0+Q291bnQgLyAkdGhpcy0+UGFnZUNvdW50KTsNCiAgICAgICAgJHRoaXMtPlBhZ2VGaXJzdCA9IDE7DQogICAgICAgICR0aGlzLT5QYWdlTGFzdCA9ICR0aGlzLT5QYWdlQWxsOw0KDQogICAgICAgICR0aGlzLT5QYWdlUHJldmlvdXMgPSAkdGhpcy0+UGFnZU5vdyAtIDE7DQogICAgICAgIGlmICgkdGhpcy0+UGFnZVByZXZpb3VzIDwgMSkgew0KICAgICAgICAgICAgJHRoaXMtPlBhZ2VQcmV2aW91cyA9IDE7DQogICAgICAgIH0NCg0KICAgICAgICAkdGhpcy0+UGFnZU5leHQgPSAkdGhpcy0+UGFnZU5vdyArIDE7DQogICAgICAgIGlmICgkdGhpcy0+UGFnZU5leHQgPiAkdGhpcy0+UGFnZUFsbCkgew0KICAgICAgICAgICAgJHRoaXMtPlBhZ2VOZXh0ID0gJHRoaXMtPlBhZ2VBbGw7DQogICAgICAgIH0NCg0KICAgICAgICAkdGhpcy0+VXJsUnVsZS0+UnVsZXNbJ3slcGFnZSV9J10gPSAkdGhpcy0+UGFnZUZpcnN0Ow0KICAgICAgICAkdGhpcy0+YnV0dG9uc1sn4oC54oC5J10gPSAkdGhpcy0+VXJsUnVsZS0+TWFrZSgpOw0KDQogICAgICAgIGlmICgkdGhpcy0+UGFnZU5vdyAhPSAkdGhpcy0+UGFnZUZpcnN0KSB7DQogICAgICAgICAgICAkdGhpcy0+VXJsUnVsZS0+UnVsZXNbJ3slcGFnZSV9J10gPSAkdGhpcy0+UGFnZVByZXZpb3VzOw0KICAgICAgICAgICAgJHRoaXMtPmJ1dHRvbnNbJ+KAuSddID0gJHRoaXMtPlVybFJ1bGUtPk1ha2UoKTsNCiAgICAgICAgICAgICR0aGlzLT5wcmV2YnV0dG9uID0gJHRoaXMtPmJ1dHRvbnNbJ+KAuSddOw0KICAgICAgICB9DQoNCiAgICAgICAgJGogPSAkdGhpcy0+UGFnZU5vdzsNCiAgICAgICAgaWYgKCRqICsgJHRoaXMtPlBhZ2VCYXJDb3VudCA+ICR0aGlzLT5QYWdlQWxsKSB7DQogICAgICAgICAgICAkaiA9ICR0aGlzLT5QYWdlQWxsIC0gJHRoaXMtPlBhZ2VCYXJDb3VudCArIDE7DQogICAgICAgIH0NCiAgICAgICAgaWYgKCRqIDwgMSkgew0KICAgICAgICAgICAgJGogPSAxOw0KICAgICAgICB9DQoNCiAgICAgICAgZm9yICgkaSA9ICRqOyAkaSA8ICRqICsgJHRoaXMtPlBhZ2VCYXJDb3VudDsgJGkrKykgew0KICAgICAgICAgICAgaWYgKCRpID4gJHRoaXMtPlBhZ2VBbGwpIHsNCiAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgICR0aGlzLT5VcmxSdWxlLT5SdWxlc1sneyVwYWdlJX0nXSA9ICRpOw0KICAgICAgICAgICAgJHRoaXMtPmJ1dHRvbnNbJGldID0gJHRoaXMtPlVybFJ1bGUtPk1ha2UoKTsNCiAgICAgICAgfQ0KICAgICAgICBpZiAoJHRoaXMtPlBhZ2VOb3cgIT0gJHRoaXMtPlBhZ2VOZXh0KSB7DQogICAgICAgICAgICAkdGhpcy0+VXJsUnVsZS0+UnVsZXNbJ3slcGFnZSV9J10gPSAkdGhpcy0+UGFnZU5leHQ7DQogICAgICAgICAgICAkdGhpcy0+YnV0dG9uc1sn4oC6J10gPSAkdGhpcy0+VXJsUnVsZS0+TWFrZSgpOw0KICAgICAgICAgICAgJHRoaXMtPm5leHRidXR0b24gPSAkdGhpcy0+YnV0dG9uc1sn4oC6J107DQogICAgICAgIH0NCg0KICAgICAgICAkdGhpcy0+VXJsUnVsZS0+UnVsZXNbJ3slcGFnZSV9J10gPSAkdGhpcy0+UGFnZUxhc3Q7DQogICAgICAgICR0aGlzLT5idXR0b25zWyfigLrigLonXSA9ICR0aGlzLT5VcmxSdWxlLT5NYWtlKCk7DQogICAgfQ0KfQ0K</file>
	<file name='zb_system\function\lib\post.php' crc32='3A1839C4'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\punycode.php' crc32='4BE5EFAD'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\rss2.php' crc32='6B470A7B'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KLyoqDQogKiBSU1My57G7Lg0KICovDQpjbGFzcyBSc3MyDQp7DQogICAgcHJpdmF0ZSAkY2hhbm5lbDsNCiAgICAvKioNCiAgICAgKiBAdmFyIHN0cmluZyB4bWzmlofmoaMNCiAgICAgKi8NCiAgICBwcml2YXRlICR4bWwgPSAnPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4nOw0KDQogICAgLyoqDQogICAgICog5p6E6YCg5Ye95pWw77yM5Yid5aeL5YyWUlNT5paH5qGj5byA5aS06YOo5YiGLg0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAkdGl0bGUNCiAgICAgKiBAcGFyYW0gc3RyaW5nICRsaW5rDQogICAgICogQHBhcmFtIHN0cmluZyAkZGVzY3JpcHRpb24NCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gX19jb25zdHJ1Y3QoJHRpdGxlLCAkbGluaywgJGRlc2NyaXB0aW9uKQ0KICAgIHsNCiAgICAgICAgJHRoaXMtPnhtbCAuPSAnPHJzcyB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iIHZlcnNpb249IjIuMCI+JzsNCiAgICAgICAgJHRoaXMtPnhtbCAuPSAnPGNoYW5uZWw+JzsNCg0KICAgICAgICAkdGhpcy0+eG1sIC49ICR0aGlzLT5jcmVhdGVFbGVtZW50KCd0aXRsZScsICR0aXRsZSk7DQogICAgICAgICR0aGlzLT54bWwgLj0gJHRoaXMtPmNyZWF0ZUVsZW1lbnQoJ2xpbmsnLCAkbGluayk7DQogICAgICAgICR0aGlzLT54bWwgLj0gJHRoaXMtPmNyZWF0ZUVsZW1lbnQoJ2Rlc2NyaXB0aW9uJywgJGRlc2NyaXB0aW9uKTsNCg0KICAgICAgICAvLyR0aGlzLT54bWwgLj0gJzwvY2hhbm5lbD4nOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOaehOmAoOWFg+e0oOiKgueCuS4NCiAgICAgKg0KICAgICAqIEBwYXJhbSAkbmFtZQ0KICAgICAqIEBwYXJhbSAkdmFsdWUNCiAgICAgKg0KICAgICAqIEByZXR1cm4gc3RyaW5nDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIGNyZWF0ZUVsZW1lbnQoJG5hbWUsICR2YWx1ZSkNCiAgICB7DQogICAgICAgIHJldHVybiAnPCcgLiAkbmFtZSAuICc+JyAuIGh0bWxzcGVjaWFsY2hhcnMoJHZhbHVlKSAuICc8LycgLiAkbmFtZSAuICc+JzsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmt7vliqDmlofnq6DoioLngrkuDQogICAgICoNCiAgICAgKiBAcGFyYW0gJHRpdGxlDQogICAgICogQHBhcmFtICRsaW5rDQogICAgICogQHBhcmFtICRkZXNjcmlwdGlvbg0KICAgICAqIEBwYXJhbSAkZGF0ZQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBhZGRJdGVtKCR0aXRsZSwgJGxpbmssICRkZXNjcmlwdGlvbiwgJGRhdGUpDQogICAgew0KICAgICAgICBpZiAoc3Vic3RyKCR0aGlzLT54bWwsIC02KSA9PSAnPC9yc3M+Jykgew0KICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICB9DQoNCiAgICAgICAgJHRoaXMtPnhtbCAuPSAnPGl0ZW0+JzsNCiAgICAgICAgJHRoaXMtPnhtbCAuPSAkdGhpcy0+Y3JlYXRlRWxlbWVudCgndGl0bGUnLCAkdGl0bGUpOw0KICAgICAgICAkdGhpcy0+eG1sIC49ICR0aGlzLT5jcmVhdGVFbGVtZW50KCdsaW5rJywgJGxpbmspOw0KICAgICAgICAkdGhpcy0+eG1sIC49ICR0aGlzLT5jcmVhdGVFbGVtZW50KCdkZXNjcmlwdGlvbicsICRkZXNjcmlwdGlvbik7DQogICAgICAgICR0aGlzLT54bWwgLj0gJHRoaXMtPmNyZWF0ZUVsZW1lbnQoJ3B1YkRhdGUnLCBkYXRlKERBVEVfUlNTLCAkZGF0ZSkpOw0KICAgICAgICAkdGhpcy0+eG1sIC49ICc8L2l0ZW0+JzsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDov5Tlm554bWzmoLzlvI/nmoRSU1PmlofmoaMuDQogICAgICoNCiAgICAgKiBAcmV0dXJuIHN0cmluZw0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBzYXZlWE1MKCkNCiAgICB7DQogICAgICAgIGlmIChzdWJzdHIoJHRoaXMtPnhtbCwgLTYpICE9PSAnPC9yc3M+Jykgew0KICAgICAgICAgICAgJHRoaXMtPnhtbCAuPSAnPC9jaGFubmVsPjwvcnNzPic7DQogICAgICAgIH0NCg0KICAgICAgICByZXR1cm4gJHRoaXMtPnhtbDsNCiAgICB9DQp9DQo=</file>
	<file name='zb_system\function\lib\tag.php' crc32='87B4DB0D'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KDQovKioNCiAqIFRhZ+exuy4NCiAqDQogKiBAcHJvcGVydHkgc3RyaW5nIFRlbXBsYXRlDQogKiBAcHJvcGVydHkgc3RyaW5nIE5hbWUNCiAqIEBwcm9wZXJ0eSBzdHJpbmcgSUQNCiAqIEBwcm9wZXJ0eSBzdHJpbmcgQWxpYXMNCiAqIEBwcm9wZXJ0eSBzdHJpbmcgVXJsDQogKiBAcHJvcGVydHkgaW50fHN0cmluZyBDb3VudCDmlofnq6DmlbDph48NCiAqLw0KY2xhc3MgVGFnIGV4dGVuZHMgQmFzZQ0Kew0KICAgIHB1YmxpYyBmdW5jdGlvbiBfX2NvbnN0cnVjdCgpDQogICAgew0KICAgICAgICBnbG9iYWwgJHpicDsNCiAgICAgICAgcGFyZW50OjpfX2NvbnN0cnVjdCgkemJwLT50YWJsZVsnVGFnJ10sICR6YnAtPmRhdGFpbmZvWydUYWcnXSwgX19DTEFTU19fKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJG1ldGhvZA0KICAgICAqIEBwYXJhbSAkYXJncw0KICAgICAqDQogICAgICogQHJldHVybiBtaXhlZA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBfX2NhbGwoJG1ldGhvZCwgJGFyZ3MpDQogICAgew0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9UYWdfQ2FsbCddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgJGZwcmV0dXJuID0gJGZwbmFtZSgkdGhpcywgJG1ldGhvZCwgJGFyZ3MpOw0KICAgICAgICAgICAgaWYgKCRmcHNpZ25hbCA9PSBQTFVHSU5fRVhJVFNJR05BTF9SRVRVUk4pIHsNCiAgICAgICAgICAgICAgICAkZnBzaWduYWwgPSBQTFVHSU5fRVhJVFNJR05BTF9OT05FOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuICRmcHJldHVybjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkbmFtZQ0KICAgICAqIEBwYXJhbSAkdmFsdWUNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gX19zZXQoJG5hbWUsICR2YWx1ZSkNCiAgICB7DQogICAgICAgIGdsb2JhbCAkemJwOw0KICAgICAgICBpZiAoJG5hbWUgPT0gJ1VybCcpIHsNCiAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgfQ0KICAgICAgICBpZiAoJG5hbWUgPT0gJ1RlbXBsYXRlJykgew0KICAgICAgICAgICAgaWYgKCR2YWx1ZSA9PSAkemJwLT5vcHRpb25bJ1pDX0lOREVYX0RFRkFVTFRfVEVNUExBVEUnXSkgew0KICAgICAgICAgICAgICAgICR2YWx1ZSA9ICcnOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgJHRoaXMtPmRhdGFbJG5hbWVdID0gJHZhbHVlOw0KDQogICAgICAgICAgICByZXR1cm47DQogICAgICAgIH0NCiAgICAgICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fVGFnX1NldCddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgJGZwcmV0dXJuID0gJGZwbmFtZSgkdGhpcywgJG5hbWUsICR2YWx1ZSk7DQogICAgICAgIH0NCiAgICAgICAgcGFyZW50OjpfX3NldCgkbmFtZSwgJHZhbHVlKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJG5hbWUNCiAgICAgKg0KICAgICAqIEByZXR1cm4gbWl4ZWR8c3RyaW5nDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIF9fZ2V0KCRuYW1lKQ0KICAgIHsNCiAgICAgICAgZ2xvYmFsICR6YnA7DQogICAgICAgIGlmICgkbmFtZSA9PSAnVXJsJykgew0KICAgICAgICAgICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fVGFnX1VybCddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgICAgICRmcHJldHVybiA9ICRmcG5hbWUoJHRoaXMpOw0KICAgICAgICAgICAgICAgIGlmICgkZnBzaWduYWwgPT0gUExVR0lOX0VYSVRTSUdOQUxfUkVUVVJOKSB7DQogICAgICAgICAgICAgICAgICAgICRmcHNpZ25hbCA9IFBMVUdJTl9FWElUU0lHTkFMX05PTkU7DQoNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICRmcHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICAgICAkYmFja0F0dHIgPSAkemJwLT5vcHRpb25bJ1pDX0FMSUFTX0JBQ0tfQVRUUiddOw0KICAgICAgICAgICAgJHUgPSBuZXcgVXJsUnVsZSgkemJwLT5vcHRpb25bJ1pDX1RBR1NfUkVHRVgnXSk7DQogICAgICAgICAgICAkdS0+UnVsZXNbJ3slaWQlfSddID0gJHRoaXMtPklEOw0KICAgICAgICAgICAgJHUtPlJ1bGVzWyd7JWFsaWFzJX0nXSA9IHJhd3VybGVuY29kZSgkdGhpcy0+QWxpYXMgPT0gJycgPyAkdGhpcy0+JGJhY2tBdHRyIDogJHRoaXMtPkFsaWFzKTsNCg0KICAgICAgICAgICAgcmV0dXJuICR1LT5NYWtlKCk7DQogICAgICAgIH0NCiAgICAgICAgaWYgKCRuYW1lID09ICdUZW1wbGF0ZScpIHsNCiAgICAgICAgICAgICR2YWx1ZSA9ICR0aGlzLT5kYXRhWyRuYW1lXTsNCiAgICAgICAgICAgIGlmICgkdmFsdWUgPT0gJycpIHsNCiAgICAgICAgICAgICAgICAkdmFsdWUgPSAkemJwLT5vcHRpb25bJ1pDX0lOREVYX0RFRkFVTFRfVEVNUExBVEUnXTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuICR2YWx1ZTsNCiAgICAgICAgfQ0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9UYWdfR2V0J10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICAgICAkZnByZXR1cm4gPSAkZnBuYW1lKCR0aGlzLCAkbmFtZSk7DQogICAgICAgICAgICBpZiAoJGZwc2lnbmFsID09IFBMVUdJTl9FWElUU0lHTkFMX1JFVFVSTikgew0KICAgICAgICAgICAgICAgICRmcHNpZ25hbCA9IFBMVUdJTl9FWElUU0lHTkFMX05PTkU7DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gJGZwcmV0dXJuOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuIHBhcmVudDo6X19nZXQoJG5hbWUpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBTYXZlKCkNCiAgICB7DQogICAgICAgIGdsb2JhbCAkemJwOw0KICAgICAgICBpZiAoJHRoaXMtPlRlbXBsYXRlID09ICR6YnAtPm9wdGlvblsnWkNfSU5ERVhfREVGQVVMVF9URU1QTEFURSddKSB7DQogICAgICAgICAgICAkdGhpcy0+ZGF0YVsnVGVtcGxhdGUnXSA9ICcnOw0KICAgICAgICB9DQoNCiAgICAgICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fVGFnX1NhdmUnXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAgICAgICAgICRmcHJldHVybiA9ICRmcG5hbWUoJHRoaXMpOw0KICAgICAgICAgICAgaWYgKCRmcHNpZ25hbCA9PSBQTFVHSU5fRVhJVFNJR05BTF9SRVRVUk4pIHsNCiAgICAgICAgICAgICAgICAkZnBzaWduYWwgPSBQTFVHSU5fRVhJVFNJR05BTF9OT05FOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuICRmcHJldHVybjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiBwYXJlbnQ6OlNhdmUoKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gRGVsKCkNCiAgICB7DQogICAgICAgIGdsb2JhbCAkemJwOw0KICAgICAgICBpZiAoJHRoaXMtPklEID4gMCkgew0KICAgICAgICAgICAgdW5zZXQoJHpicC0+dGFnc1skdGhpcy0+SURdKTsNCiAgICAgICAgfQ0KICAgICAgICBpZiAoJHRoaXMtPk5hbWUgIT0gJycpIHsNCiAgICAgICAgICAgIHVuc2V0KCR6YnAtPnRhZ3NieW5hbWVbJHRoaXMtPk5hbWVdKTsNCiAgICAgICAgfQ0KDQogICAgICAgIGZvcmVhY2ggKCRHTE9CQUxTWydob29rcyddWydGaWx0ZXJfUGx1Z2luX1RhZ19EZWwnXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAgICAgICAgICRmcHJldHVybiA9ICRmcG5hbWUoJHRoaXMpOw0KICAgICAgICAgICAgaWYgKCRmcHNpZ25hbCA9PSBQTFVHSU5fRVhJVFNJR05BTF9SRVRVUk4pIHsNCiAgICAgICAgICAgICAgICAkZnBzaWduYWwgPSBQTFVHSU5fRVhJVFNJR05BTF9OT05FOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuICRmcHJldHVybjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiBwYXJlbnQ6OkRlbCgpOw0KICAgIH0NCn0NCg==</file>
	<file name='zb_system\function\lib\upload.php' crc32='5D11A6BA'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KDQovKioNCiAqIOS4iuS8oOexuy4NCiAqDQogKiBAcHJvcGVydHkgc3RyaW5nIE5hbWUNCiAqIEBwcm9wZXJ0eSBzdHJpbmcgRnVsbEZpbGUNCiAqIEBwcm9wZXJ0eSBzdHJpbmcgU2l6ZQ0KICogQHByb3BlcnR5IHN0cmluZyBEaXINCiAqIEBwcm9wZXJ0eSBpbnQgUG9zdFRpbWUNCiAqIEBwcm9wZXJ0eSBpbnR8c3RyaW5nIEF1dGhvcklEDQogKiBAcHJvcGVydHkgc3RyaW5nIFNvdXJjZU5hbWUNCiAqIEBwcm9wZXJ0eSBzdHJpbmcgTWltZVR5cGUNCiAqIEBwcm9wZXJ0eSBNZW1iZXIgQXV0aG9yDQogKi8NCmNsYXNzIFVwbG9hZCBleHRlbmRzIEJhc2UNCnsNCiAgICBwdWJsaWMgZnVuY3Rpb24gX19jb25zdHJ1Y3QoKQ0KICAgIHsNCiAgICAgICAgZ2xvYmFsICR6YnA7DQogICAgICAgIHBhcmVudDo6X19jb25zdHJ1Y3QoJHpicC0+dGFibGVbJ1VwbG9hZCddLCAkemJwLT5kYXRhaW5mb1snVXBsb2FkJ10sIF9fQ0xBU1NfXyk7DQoNCiAgICAgICAgJHRoaXMtPlBvc3RUaW1lID0gdGltZSgpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJGV4dExpc3QNCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBDaGVja0V4dE5hbWUoJGV4dExpc3QgPSAnJykNCiAgICB7DQogICAgICAgIGdsb2JhbCAkemJwOw0KICAgICAgICAkZSA9IEdldEZpbGVFeHQoJHRoaXMtPk5hbWUpOw0KICAgICAgICAkZXh0TGlzdCA9IHN0cnRvbG93ZXIoJGV4dExpc3QpOw0KICAgICAgICAvLyDml6DorrrlpoLkvZXvvIznpoHmraIucGhw44CBLnBocDXkuYvnsbvnmoTmlofku7bnmoTkuIrkvKANCiAgICAgICAgaWYgKHByZWdfbWF0Y2goJy9waHAvaScsICRlKSkgew0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQogICAgICAgIGlmICh0cmltKCRleHRMaXN0KSA9PSAnJykgew0KICAgICAgICAgICAgJGV4dExpc3QgPSAkemJwLT5vcHRpb25bJ1pDX1VQTE9BRF9GSUxFVFlQRSddOw0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuIEhhc05hbWVJblN0cmluZygkZXh0TGlzdCwgJGUpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBDaGVja1NpemUoKQ0KICAgIHsNCiAgICAgICAgZ2xvYmFsICR6YnA7DQogICAgICAgICRuID0gMTAyNCAqIDEwMjQgKiAoaW50KSAkemJwLT5vcHRpb25bJ1pDX1VQTE9BRF9GSUxFU0laRSddOw0KDQogICAgICAgIHJldHVybiAkbiA+PSAkdGhpcy0+U2l6ZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gRGVsRmlsZSgpDQogICAgew0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9VcGxvYWRfRGVsRmlsZSddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgJGZwcmV0dXJuID0gJGZwbmFtZSgkdGhpcyk7DQogICAgICAgICAgICBpZiAoJGZwc2lnbmFsID09IFBMVUdJTl9FWElUU0lHTkFMX1JFVFVSTikgew0KICAgICAgICAgICAgICAgICRmcHNpZ25hbCA9IFBMVUdJTl9FWElUU0lHTkFMX05PTkU7DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gJGZwcmV0dXJuOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGlmIChmaWxlX2V4aXN0cygkdGhpcy0+RnVsbEZpbGUpKSB7DQogICAgICAgICAgICBAdW5saW5rKCR0aGlzLT5GdWxsRmlsZSk7DQogICAgICAgIH0NCg0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHRtcA0KICAgICAqDQogICAgICogQHJldHVybiBib29sDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFNhdmVGaWxlKCR0bXApDQogICAgew0KICAgICAgICBnbG9iYWwgJHpicDsNCg0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9VcGxvYWRfU2F2ZUZpbGUnXSBhcyAkZnBuYW1lID0+ICYkZnBzaWduYWwpIHsNCiAgICAgICAgICAgICRmcHJldHVybiA9ICRmcG5hbWUoJHRtcCwgJHRoaXMpOw0KICAgICAgICAgICAgaWYgKCRmcHNpZ25hbCA9PSBQTFVHSU5fRVhJVFNJR05BTF9SRVRVUk4pIHsNCiAgICAgICAgICAgICAgICAkZnBzaWduYWwgPSBQTFVHSU5fRVhJVFNJR05BTF9OT05FOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuICRmcHJldHVybjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIGlmICghZmlsZV9leGlzdHMoJHpicC0+dXNlcnNkaXIgLiAkdGhpcy0+RGlyKSkgew0KICAgICAgICAgICAgQG1rZGlyKCR6YnAtPnVzZXJzZGlyIC4gJHRoaXMtPkRpciwgMDc1NSwgdHJ1ZSk7DQogICAgICAgIH0NCiAgICAgICAgaWYgKFBIUF9TWVNURU0gPT09IFNZU1RFTV9XSU5ET1dTKSB7DQogICAgICAgICAgICAkZm4gPSBpY29udigiVVRGLTgiLCAkemJwLT5sYW5nWyd3aW5kb3dzX2NoYXJhY3Rlcl9zZXQnXSAuICIvL0lHTk9SRSIsICR0aGlzLT5OYW1lKTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICRmbiA9ICR0aGlzLT5OYW1lOw0KICAgICAgICB9DQogICAgICAgIEBtb3ZlX3VwbG9hZGVkX2ZpbGUoJHRtcCwgJHpicC0+dXNlcnNkaXIgLiAkdGhpcy0+RGlyIC4gJGZuKTsNCg0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHN0cjY0DQogICAgICoNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gU2F2ZUJhc2U2NEZpbGUoJHN0cjY0KQ0KICAgIHsNCiAgICAgICAgZ2xvYmFsICR6YnA7DQoNCiAgICAgICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fVXBsb2FkX1NhdmVCYXNlNjRGaWxlJ10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICAgICAkZnByZXR1cm4gPSAkZnBuYW1lKCRzdHI2NCwgJHRoaXMpOw0KICAgICAgICAgICAgaWYgKCRmcHNpZ25hbCA9PSBQTFVHSU5fRVhJVFNJR05BTF9SRVRVUk4pIHsNCiAgICAgICAgICAgICAgICAkZnBzaWduYWwgPSBQTFVHSU5fRVhJVFNJR05BTF9OT05FOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuICRmcHJldHVybjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIGlmICghZmlsZV9leGlzdHMoJHpicC0+dXNlcnNkaXIgLiAkdGhpcy0+RGlyKSkgew0KICAgICAgICAgICAgQG1rZGlyKCR6YnAtPnVzZXJzZGlyIC4gJHRoaXMtPkRpciwgMDc1NSwgdHJ1ZSk7DQogICAgICAgIH0NCiAgICAgICAgJHMgPSBiYXNlNjRfZGVjb2RlKCRzdHI2NCk7DQogICAgICAgICR0aGlzLT5TaXplID0gc3RybGVuKCRzKTsNCiAgICAgICAgaWYgKFBIUF9TWVNURU0gPT09IFNZU1RFTV9XSU5ET1dTKSB7DQogICAgICAgICAgICAkZm4gPSBpY29udigiVVRGLTgiLCAiR0JLLy9JR05PUkUiLCAkdGhpcy0+TmFtZSk7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAkZm4gPSAkdGhpcy0+TmFtZTsNCiAgICAgICAgfQ0KICAgICAgICBmaWxlX3B1dF9jb250ZW50cygkemJwLT51c2Vyc2RpciAuICR0aGlzLT5EaXIgLiAkZm4sICRzKTsNCg0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gc3RyaW5nICRzDQogICAgICoNCiAgICAgKiBAcmV0dXJuIGJvb2x8c3RyaW5nDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFRpbWUoJHMgPSAnWS1tLWQgSDppOnMnKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuIGRhdGUoJHMsICR0aGlzLT5Qb3N0VGltZSk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRuYW1lDQogICAgICogQHBhcmFtICR2YWx1ZQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBfX3NldCgkbmFtZSwgJHZhbHVlKQ0KICAgIHsNCiAgICAgICAgaWYgKGluX2FycmF5KCRuYW1lLCBhcnJheSgnVXJsJywgJ0RpcicsICdGdWxsRmlsZScsICdBdXRob3InKSkpIHsNCiAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgfQ0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9VcGxvYWRfU2V0J10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICAgICAkZnBuYW1lKCR0aGlzLCAkbmFtZSwgJHZhbHVlKTsNCiAgICAgICAgfQ0KICAgICAgICBwYXJlbnQ6Ol9fc2V0KCRuYW1lLCAkdmFsdWUpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkbmFtZQ0KICAgICAqDQogICAgICogQHJldHVybiBNZW1iZXJ8bWl4ZWR8c3RyaW5nDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIF9fZ2V0KCRuYW1lKQ0KICAgIHsNCiAgICAgICAgZ2xvYmFsICR6YnA7DQogICAgICAgIGlmICgkbmFtZSA9PSAnVXJsJykgew0KICAgICAgICAgICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fVXBsb2FkX1VybCddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgICAgIHJldHVybiAkZnBuYW1lKCR0aGlzKTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuICR6YnAtPmhvc3QgLiAnemJfdXNlcnMvJyAuICR0aGlzLT5EaXIgLiByYXd1cmxlbmNvZGUoJHRoaXMtPk5hbWUpOw0KICAgICAgICB9DQogICAgICAgIGlmICgkbmFtZSA9PSAnRGlyJykgew0KICAgICAgICAgICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fVXBsb2FkX0RpciddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICAgICAgICAgICAgIHJldHVybiAkZnBuYW1lKCR0aGlzKTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuICd1cGxvYWQvJyAuIGRhdGUoJ1knLCAkdGhpcy0+UG9zdFRpbWUpIC4gJy8nIC4gZGF0ZSgnbScsICR0aGlzLT5Qb3N0VGltZSkgLiAnLyc7DQogICAgICAgIH0NCiAgICAgICAgaWYgKCRuYW1lID09ICdGdWxsRmlsZScpIHsNCiAgICAgICAgICAgIHJldHVybiAkemJwLT51c2Vyc2RpciAuICR0aGlzLT5EaXIgLiAkdGhpcy0+TmFtZTsNCiAgICAgICAgfQ0KICAgICAgICBpZiAoJG5hbWUgPT0gJ0F1dGhvcicpIHsNCiAgICAgICAgICAgIHJldHVybiAkemJwLT5HZXRNZW1iZXJCeUlEKCR0aGlzLT5BdXRob3JJRCk7DQogICAgICAgIH0NCg0KICAgICAgICBmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9VcGxvYWRfR2V0J10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICAgICAkZnByZXR1cm4gPSAkZnBuYW1lKCR0aGlzLCAkbmFtZSk7DQogICAgICAgICAgICBpZiAoJGZwc2lnbmFsID09IFBMVUdJTl9FWElUU0lHTkFMX1JFVFVSTikgew0KICAgICAgICAgICAgICAgICRmcHNpZ25hbCA9IFBMVUdJTl9FWElUU0lHTkFMX05PTkU7DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gJGZwcmV0dXJuOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuIHBhcmVudDo6X19nZXQoJG5hbWUpOw0KICAgIH0NCn0NCg==</file>
	<file name='zb_system\function\lib\urlrule.php' crc32='F3A24E55'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\validatecode.php' crc32='1BA1FC9'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\xsshtml.php' crc32='DB1CB84B'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\zbpform.php' crc32='7041C556'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KDQovKioNCiAqIGZvcm0gY3JlYXQuDQogKg0KICogQGF1dGhvciDmnKrlr5IgPGltQGltemhvdS5jb20+DQogKiBAY29weXJpZ2h0IChDKSBSYWluYm93U29mdCBTdHVkaW8NCiAqLw0KDQovKirnlKjms5UNCnpicGZvcm06OnJhZGlvKCdhYWFhJyxhcnJheSgn6YCJ6aG5MScsICfpgInpobkyJykpOw0KemJwZm9ybTo6emJyYWRpbygnYWFhYScsYXJyYXkoJ+mAiemhuTEnLCAn6YCJ6aG5MicpLDEpOw0KemJwZm9ybTo6c2VsZWN0KCdhYWFhJyxhcnJheSgnYSc9PifpgInpobkxJywgJ2InPT4n6YCJ6aG5MicpLCdhJyk7DQp6YnBmb3JtOjpjaGVja2JveCgnYWFhYScsYXJyYXkoYXJyYXkoJ+mAiemhuTEnLDApLGFycmF5KCfpgInpobkyJywxKSkpOw0KemJwZm9ybTo6dGV4dCgnYWFhYScsJ+aWh+acrOahhicpOw0KemJwZm9ybTo6aGlkZGVuKCdhYWFhJywn5paH5pys5qGGJyk7DQp6YnBmb3JtOjp0ZXh0YXJlYSgnYWFhYScsJ+WkmuihjOaWh+acrCcpOw0KemJwZm9ybTo6cGFzc3dvcmQoJ2FhYWEnLCfmlofmnKzmoYYnKTsNCiAqLw0KY2xhc3MgWmJwRm9ybQ0Kew0KICAgIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gcmFkaW8oJG5hbWUsICRhcnJheSA9IGFycmF5KCflkKYnLCAn5pivJyksICRjaGVja2Vka2V5ID0gMCkNCiAgICB7DQogICAgICAgICRzID0gJyc7DQogICAgICAgIGZvcmVhY2ggKChhcnJheSkgJGFycmF5IGFzICRrID0+ICR2KSB7DQogICAgICAgICAgICAkY2hlY2tlZCA9ICRrID09ICRjaGVja2Vka2V5ID8gJyBjaGVja2VkPSJjaGVja2VkIicgOiAnJzsNCiAgICAgICAgICAgICRzIC49ICI8aW5wdXQgdHlwZT1cInJhZGlvXCIgbmFtZT1cIiRuYW1lXCIgaWQ9XCIkbmFtZS0ka1wiIGNsYXNzPVwiJG5hbWVcIiB2YWx1ZT1cIiRrXCIkY2hlY2tlZCAvPjxsYWJlbCBmb3I9XCIkbmFtZS0ka1wiPiR2PC9sYWJlbD5cclxuIjsNCiAgICAgICAgfQ0KICAgICAgICBlY2hvICRzOw0KICAgIH0NCg0KICAgIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gemJyYWRpbygkbmFtZSwgJGlzY2hlY2tlZCA9IDApDQogICAgew0KICAgICAgICAkcyA9ICcnOw0KICAgICAgICAkcyAuPSAiPGlucHV0IG5hbWU9XCIkbmFtZVwiIGlkPVwiJG5hbWVcIiBjbGFzcz1cIiRuYW1lIGNoZWNrYm94XCIgc3R5bGU9XCJkaXNwbGF5Om5vbmU7XCIgdHlwZT1cInRleHRcIiB2YWx1ZT1cIiRpc2NoZWNrZWRcIj5cclxuIjsNCiAgICAgICAgZWNobyAkczsNCiAgICB9DQoNCiAgICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIHNlbGVjdCgkbmFtZSwgJGFycmF5LCAkY2hlY2tlZGtleSA9IDAsICRjaGFuZ2UgPSAnJykNCiAgICB7DQogICAgICAgIGlmIChlbXB0eSgkYXJyYXkpKSB7DQogICAgICAgICAgICByZXR1cm47DQogICAgICAgIH0NCg0KICAgICAgICAkb25jaGFuZ2UgPSAhZW1wdHkoJGNoYW5nZSkgPyAnIG9uY2hhbmdlPSInIC4gJGNoYW5nZSAuICciJyA6ICcnOw0KICAgICAgICAkcyA9ICI8c2VsZWN0IG5hbWU9XCIkbmFtZVwiIGlkPVwiJG5hbWVcIiBjbGFzcz1cIiRuYW1lXCIkb25jaGFuZ2U+IFxyXG4iOw0KICAgICAgICAkcyAuPSBzZWxmOjpvcHRpb25zKCRhcnJheSwgJGNoZWNrZWRrZXkpOw0KICAgICAgICAkcyAuPSAiPC9zZWxlY3Q+IFxyXG4iOw0KICAgICAgICBlY2hvICRzOw0KICAgIH0NCg0KICAgIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gb3B0aW9ucygkYXJyYXksICRjaGVja2Vka2V5ID0gMCkNCiAgICB7DQogICAgICAgICRzID0gJyc7DQogICAgICAgIGZvcmVhY2ggKChhcnJheSkgJGFycmF5IGFzICRrID0+ICR2KSB7DQogICAgICAgICAgICAkY2hlY2tlZCA9ICRrID09ICRjaGVja2Vka2V5ID8gJyBzZWxlY3RlZD0ic2VsZWN0ZWQiJyA6ICcnOw0KICAgICAgICAgICAgJHMgLj0gIjxvcHRpb24gdmFsdWU9XCIka1wiJGNoZWNrZWQ+JHY8L29wdGlvbj4gXHJcbiI7DQogICAgICAgIH0NCg0KICAgICAgICByZXR1cm4gJHM7DQogICAgfQ0KDQogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBjaGVja2JveCgkbmFtZSwgJGFycmF5KQ0KICAgIHsNCiAgICAgICAgJHMgPSAnJzsNCiAgICAgICAgZm9yZWFjaCAoKGFycmF5KSAkYXJyYXkgYXMgJGsgPT4gJHYpIHsNCiAgICAgICAgICAgICRjaGVja2VkID0gJHZbMV0gPyAnIGNoZWNrZWQ9ImNoZWNrZWQiJyA6ICcnOw0KDQogICAgICAgICAgICAkcyAuPSAiPGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCIiIC4gJG5hbWUgLiAiW11cIiBpZD1cIiRuYW1lLSRrXCIgY2xhc3M9XCIkbmFtZVwiIHZhbHVlPVwiJGtcIiRjaGVja2VkIC8+PGxhYmVsIGZvcj1cIiRuYW1lLSRrXCI+JHZbMF08L2xhYmVsPlxyXG4iOw0KICAgICAgICB9DQogICAgICAgIGVjaG8gJHM7DQogICAgfQ0KDQogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiB0ZXh0KCRuYW1lLCAkdmFsdWUsICR3aWR0aCA9ICcxNTBweCcpDQogICAgew0KICAgICAgICAkc3R5bGUgPSAkd2lkdGggPyAnIHN0eWxlPSJ3aWR0aDogJyAuICR3aWR0aCAuICc7IicgOiAnJzsNCiAgICAgICAgJHMgPSAiPGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmFtZT1cIiRuYW1lXCIgaWQ9XCIkbmFtZVwiIGNsYXNzPVwiJG5hbWVcIiB2YWx1ZT1cIiR2YWx1ZVwiJHN0eWxlLz5cclxuIjsNCiAgICAgICAgZWNobyAkczsNCiAgICB9DQoNCiAgICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIGhpZGRlbigkbmFtZSwgJHZhbHVlKQ0KICAgIHsNCiAgICAgICAgJHMgPSAiPGlucHV0IHR5cGU9XCJoaWRkZW5cIiBuYW1lPVwiJG5hbWVcIiBpZD1cIiRuYW1lXCIgY2xhc3M9XCIkbmFtZVwiIHZhbHVlPVwiJHZhbHVlXCIgLz5cclxuIjsNCiAgICAgICAgZWNobyAkczsNCiAgICB9DQoNCiAgICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIHRleHRhcmVhKCRuYW1lLCAkdmFsdWUsICR3aWR0aCA9ICcyNTBweCcsICRoZWlnaHQgPSAnMTAwcHgnKQ0KICAgIHsNCiAgICAgICAgJHN0eWxlID0gJHdpZHRoID8gJyBzdHlsZT0id2lkdGg6ICcgLiAkd2lkdGggLiAnOyBoZWlnaHQ6ICcgLiAkaGVpZ2h0IC4gJyInIDogJyc7DQogICAgICAgICRzID0gIjx0ZXh0YXJlYSBuYW1lPVwiJG5hbWVcIiBpZD1cIiRuYW1lXCIgY2xhc3M9XCIkbmFtZVwiJHN0eWxlPiR2YWx1ZTwvdGV4dGFyZWE+XHJcbiI7DQogICAgICAgIGVjaG8gJHM7DQogICAgfQ0KDQogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBwYXNzd29yZCgkbmFtZSwgJHZhbHVlLCAkd2lkdGggPSAnMTUwcHgnKQ0KICAgIHsNCiAgICAgICAgJHN0eWxlID0gJHdpZHRoID8gJyBzdHlsZT0id2lkdGg6ICcgLiAkd2lkdGggLiAnOyInIDogJyc7DQogICAgICAgICRzID0gIjxpbnB1dCB0eXBlPVwicGFzc3dvcmRcIiBuYW1lPVwiJG5hbWVcIiBpZD1cIiRuYW1lXCIgY2xhc3M9XCIkbmFtZVwiIHZhbHVlPVwiJHZhbHVlXCIkc3R5bGUvPlxyXG4iOw0KICAgICAgICBlY2hvICRzOw0KICAgIH0NCn0NCg==</file>
	<file name='zb_system\function\lib\database\interface.php' crc32='29D5C01'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KDQovKioNCiAqIEludGVyZmFjZSBEYXRhYmFzZV9fSW50ZXJmYWNlLg0KICoNCiAqIEBwcm9wZXJ0eSBzdHJpbmd8bnVsbCAkZGJwcmUg5pWw5o2u5bqT5ZCN5YmN57yAKERhdGFiYXNlIFByZWZpeCkNCiAqIEBwcm9wZXJ0eSBtaXhlZCAkZGIg5pWw5o2u5bqT6L+e5o6lDQogKiBAcHJvcGVydHkgc3RyaW5nfG51bGwgJGRibmFtZSDmlbDmja7lupPlkI0NCiAqIEBwcm9wZXJ0eSBzdHJpbmd8bnVsbCAkdHlwZSDmlbDmja7lupPnsbvlnosNCiAqIEBwcm9wZXJ0eSBzdHJpbmd8bnVsbCAkZGJlbmdpbmUg5pWw5o2u5bqT5byV5pOODQogKiBAcHJvcGVydHkgRGJTcWx8bnVsbCAkc3FsIERiU3Fs5a6e5L6LDQogKiBAcHJvcGVydHkgc3RyaW5nICR2ZXJzaW9uIOaVsOaNruW6k+eJiOacrA0KICovDQppbnRlcmZhY2UgRGF0YWJhc2VfX0ludGVyZmFjZQ0Kew0KICAgIHB1YmxpYyBmdW5jdGlvbiBPcGVuKCRhcnJheSk7DQoNCiAgICBwdWJsaWMgZnVuY3Rpb24gQ2xvc2UoKTsNCg0KICAgIHB1YmxpYyBmdW5jdGlvbiBRdWVyeSgkcXVlcnkpOw0KDQogICAgcHVibGljIGZ1bmN0aW9uIEluc2VydCgkcXVlcnkpOw0KDQogICAgcHVibGljIGZ1bmN0aW9uIFVwZGF0ZSgkcXVlcnkpOw0KDQogICAgcHVibGljIGZ1bmN0aW9uIERlbGV0ZSgkcXVlcnkpOw0KDQogICAgcHVibGljIGZ1bmN0aW9uIFF1ZXJ5TXVsdGkoJHMpOw0KDQogICAgcHVibGljIGZ1bmN0aW9uIEVzY2FwZVN0cmluZygkcyk7DQoNCiAgICBwdWJsaWMgZnVuY3Rpb24gQ3JlYXRlVGFibGUoJHRhYmxlLCAkZGF0YUluZm8pOw0KDQogICAgcHVibGljIGZ1bmN0aW9uIERlbFRhYmxlKCR0YWJsZSk7DQoNCiAgICBwdWJsaWMgZnVuY3Rpb24gRXhpc3RUYWJsZSgkdGFibGUpOw0KfQ0K</file>
	<file name='zb_system\function\lib\database\mysql.php' crc32='EDDA8F'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\database\mysqli.php' crc32='70728B73'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\database\pdo_mysql.php' crc32='20C54302'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\database\pdo_postgresql.php' crc32='D717FCF'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KLyoqDQogKiBwZG9fU1FMaXRl5pWw5o2u5bqT5pON5L2c57G7Lg0KICovDQpjbGFzcyBEYXRhYmFzZV9fUERPX1Bvc3RncmVTUUwgaW1wbGVtZW50cyBEYXRhYmFzZV9fSW50ZXJmYWNlDQp7DQogICAgcHVibGljICR0eXBlID0gJ3Bvc3RncmVzcWwnOw0KICAgIHB1YmxpYyAkdmVyc2lvbiA9ICcnOw0KDQogICAgLyoqDQogICAgICogQHZhciBzdHJpbmd8bnVsbCDmlbDmja7lupPlkI3liY3nvIANCiAgICAgKi8NCiAgICBwdWJsaWMgJGRicHJlID0gbnVsbDsNCiAgICBwcml2YXRlICRkYiA9IG51bGw7IC8v5pWw5o2u5bqT6L+e5o6l5a6e5L6LDQogICAgLyoqDQogICAgICogQHZhciBzdHJpbmd8bnVsbCDmlbDmja7lupPlkI0NCiAgICAgKi8NCiAgICBwdWJsaWMgJGRibmFtZSA9IG51bGw7DQogICAgLyoqDQogICAgICogQHZhciBEYlNxbHxudWxsIERiU3Fs5a6e5L6LDQogICAgICovDQogICAgcHVibGljICRzcWwgPSBudWxsOw0KDQogICAgLyoqDQogICAgICog5p6E6YCg5Ye95pWw77yM5a6e5L6L5YyWJHNxbOWPguaVsC4NCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gX19jb25zdHJ1Y3QoKQ0KICAgIHsNCiAgICAgICAgJHRoaXMtPnNxbCA9IG5ldyBEYlNxbCgkdGhpcyk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRzDQogICAgICoNCiAgICAgKiBAcmV0dXJuIHN0cmluZw0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBFc2NhcGVTdHJpbmcoJHMpDQogICAgew0KICAgICAgICByZXR1cm4gc3RyX2lyZXBsYWNlKCInIiwgIicnIiwgJHMpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOi/nuaOpeaVsOaNruW6ky4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBhcnJheSAkYXJyYXkg5pWw5o2u5bqT6L+e5o6l6YWN572uDQogICAgICogICAgICAgICAgICAgICAgICAgICAkYXJyYXk9YXJyYXkoDQogICAgICogICAgICAgICAgICAgICAgICAgICAncGdzcWxfc2VydmVyJywNCiAgICAgKiAgICAgICAgICAgICAgICAgICAgICdwZ3NxbF91c2VybmFtZScsDQogICAgICogICAgICAgICAgICAgICAgICAgICAncGdzcWxfcGFzc3dvcmQnLA0KICAgICAqICAgICAgICAgICAgICAgICAgICAgJ3Bnc3FsX25hbWUnLA0KICAgICAqICAgICAgICAgICAgICAgICAgICAgJ3Bnc3FsX3ByZScsDQogICAgICogICAgICAgICAgICAgICAgICAgICAncGdzcWxfcG9ydCcsDQogICAgICogICAgICAgICAgICAgICAgICAgICAncGVyc2lzdGVudCcpDQogICAgICogICAgICAgICAgICAgICAgICAgICApDQogICAgICoNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gT3BlbigkYXJyYXkpDQogICAgew0KICAgICAgICAkcyA9ICJwZ3NxbDpob3N0PXskYXJyYXlbMF19O3BvcnQ9eyRhcnJheVs1XX07ZGJuYW1lPXskYXJyYXlbM119O3VzZXI9eyRhcnJheVsxXX07cGFzc3dvcmQ9eyRhcnJheVsyXX07b3B0aW9ucz0nLS1jbGllbnRfZW5jb2Rpbmc9VVRGOCciOw0KICAgICAgICBpZiAoZmFsc2UgPT0gJGFycmF5WzVdKSB7DQogICAgICAgICAgICAkZGJfbGluayA9IG5ldyBQRE8oJHMpOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgJGRiX2xpbmsgPSBuZXcgUERPKCRzLCBudWxsLCBudWxsLCBhcnJheShQRE86OkFUVFJfUEVSU0lTVEVOVCA9PiB0cnVlKSk7DQogICAgICAgIH0NCiAgICAgICAgJHRoaXMtPmRiID0gJGRiX2xpbms7DQogICAgICAgICR0aGlzLT5kYnByZSA9ICRhcnJheVs0XTsNCg0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDlhbPpl63mlbDmja7lupPov57mjqUuDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIENsb3NlKCkNCiAgICB7DQogICAgICAgICR0aGlzLT5kYiA9IG51bGw7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5omn6KGM5aSa6KGMU1FM6K+t5Y+lLg0KICAgICAqDQogICAgICogQHBhcmFtICRzDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFF1ZXJ5TXVsaXQoJHMpDQogICAgew0KICAgICAgICByZXR1cm4gJHRoaXMtPlF1ZXJ5TXVsdGkoJHMpOw0KICAgIH0NCg0KICAgIC8v6ZSZ5Yir5a2X5Ye95pWw77yM5Y6G5Y+y5Y6f5Zug5L+d55WZ5LiL5p2lDQoNCiAgICBwdWJsaWMgZnVuY3Rpb24gUXVlcnlNdWx0aSgkcykNCiAgICB7DQogICAgICAgIC8vJGE9ZXhwbG9kZSgnOycsc3RyX3JlcGxhY2UoJyVwcmUlJywgJHRoaXMtPmRicHJlLCAkcykpOw0KICAgICAgICAkYSA9IGV4cGxvZGUoJzsnLCAkcyk7DQogICAgICAgIGZvcmVhY2ggKCRhIGFzICRzKSB7DQogICAgICAgICAgICAkcyA9IHRyaW0oJHMpOw0KICAgICAgICAgICAgaWYgKCRzICE9ICcnKSB7DQogICAgICAgICAgICAgICAgJHRoaXMtPmRiLT5leGVjKCR0aGlzLT5zcWwtPkZpbHRlcigkcykpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRxdWVyeQ0KICAgICAqDQogICAgICogQHJldHVybiBhcnJheQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBRdWVyeSgkcXVlcnkpDQogICAgew0KICAgICAgICAvLyRxdWVyeT1zdHJfcmVwbGFjZSgnJXByZSUnLCAkdGhpcy0+ZGJwcmUsICRxdWVyeSk7DQogICAgICAgIC8vIOmBjeWOhuWHuuadpQ0KICAgICAgICAkcmVzdWx0cyA9ICR0aGlzLT5kYi0+cXVlcnkoJHRoaXMtPnNxbC0+RmlsdGVyKCRxdWVyeSkpOw0KICAgICAgICAvL2ZldGNoIHx8IGZldGNoQWxsDQogICAgICAgIGlmIChpc19vYmplY3QoJHJlc3VsdHMpKSB7DQogICAgICAgICAgICByZXR1cm4gJHJlc3VsdHMtPmZldGNoQWxsKCk7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICByZXR1cm4gYXJyYXkoJHJlc3VsdHMpOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRxdWVyeQ0KICAgICAqDQogICAgICogQHJldHVybiBib29sfG15c3FsaV9yZXN1bHQNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gVXBkYXRlKCRxdWVyeSkNCiAgICB7DQogICAgICAgIC8vJHF1ZXJ5PXN0cl9yZXBsYWNlKCclcHJlJScsICR0aGlzLT5kYnByZSwgJHF1ZXJ5KTsNCiAgICAgICAgcmV0dXJuICR0aGlzLT5kYi0+cXVlcnkoJHRoaXMtPnNxbC0+RmlsdGVyKCRxdWVyeSkpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkcXVlcnkNCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbHxteXNxbGlfcmVzdWx0DQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIERlbGV0ZSgkcXVlcnkpDQogICAgew0KICAgICAgICAvLyRxdWVyeT1zdHJfcmVwbGFjZSgnJXByZSUnLCAkdGhpcy0+ZGJwcmUsICRxdWVyeSk7DQogICAgICAgIHJldHVybiAkdGhpcy0+ZGItPnF1ZXJ5KCR0aGlzLT5zcWwtPkZpbHRlcigkcXVlcnkpKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHF1ZXJ5DQogICAgICoNCiAgICAgKiBAcmV0dXJuIGludA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBJbnNlcnQoJHF1ZXJ5KQ0KICAgIHsNCiAgICAgICAgLy8kcXVlcnk9c3RyX3JlcGxhY2UoJyVwcmUlJywgJHRoaXMtPmRicHJlLCAkcXVlcnkpOw0KICAgICAgICAkdGhpcy0+ZGItPnF1ZXJ5KCR0aGlzLT5zcWwtPkZpbHRlcigkcXVlcnkpKTsNCiAgICAgICAgJHNlcSA9IGV4cGxvZGUoJyAnLCAkcXVlcnksIDQpOw0KICAgICAgICAkc2VxID0gJHNlcVsyXSAuICdfc2VxJzsNCiAgICAgICAgJGlkID0gJHRoaXMtPmRiLT5sYXN0SW5zZXJ0SWQoJHNlcSk7DQoNCiAgICAgICAgcmV0dXJuICRpZDsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHRhYmxlDQogICAgICogQHBhcmFtICRkYXRhaW5mbw0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBDcmVhdGVUYWJsZSgkdGFibGUsICRkYXRhaW5mbykNCiAgICB7DQogICAgICAgICR0aGlzLT5RdWVyeU11bGl0KCR0aGlzLT5zcWwtPkNyZWF0ZVRhYmxlKCR0YWJsZSwgJGRhdGFpbmZvKSk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICR0YWJsZQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBEZWxUYWJsZSgkdGFibGUpDQogICAgew0KICAgICAgICAkdGhpcy0+UXVlcnlNdWxpdCgkdGhpcy0+c3FsLT5EZWxUYWJsZSgkdGFibGUpKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHRhYmxlDQogICAgICoNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gRXhpc3RUYWJsZSgkdGFibGUpDQogICAgew0KICAgICAgICAkYSA9ICR0aGlzLT5RdWVyeSgkdGhpcy0+c3FsLT5FeGlzdFRhYmxlKCR0YWJsZSwgJHRoaXMtPmRibmFtZSkpOw0KICAgICAgICBpZiAoIWlzX2FycmF5KCRhKSkgew0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQoNCiAgICAgICAgJGIgPSBjdXJyZW50KCRhKTsNCiAgICAgICAgaWYgKCFpc19hcnJheSgkYikpIHsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KDQogICAgICAgICRjID0gKGludCkgY3VycmVudCgkYik7DQogICAgICAgIGlmICgkYyA+IDApIHsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQogICAgfQ0KfQ0K</file>
	<file name='zb_system\function\lib\database\pdo_sqlite.php' crc32='C5B146B2'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KLyoqDQogKiBwZG9fU1FMaXRl5pWw5o2u5bqT5pON5L2c57G7Lg0KICovDQpjbGFzcyBEYXRhYmFzZV9fUERPX1NRTGl0ZSBpbXBsZW1lbnRzIERhdGFiYXNlX19JbnRlcmZhY2UNCnsNCiAgICBwdWJsaWMgJHR5cGUgPSAnc3FsaXRlJzsNCiAgICBwdWJsaWMgJHZlcnNpb24gPSAnMyc7DQoNCiAgICAvKioNCiAgICAgKiBAdmFyIHN0cmluZ3xudWxsIOaVsOaNruW6k+WQjeWJjee8gA0KICAgICAqLw0KICAgIHB1YmxpYyAkZGJwcmUgPSBudWxsOw0KICAgIHByaXZhdGUgJGRiID0gbnVsbDsgLy/mlbDmja7lupPov57mjqXlrp7kvosNCiAgICAvKioNCiAgICAgKiBAdmFyIHN0cmluZ3xudWxsIOaVsOaNruW6k+WQjQ0KICAgICAqLw0KICAgIHB1YmxpYyAkZGJuYW1lID0gbnVsbDsNCiAgICAvKioNCiAgICAgKiBAdmFyIERiU3FsfG51bGwgRGJTcWzlrp7kvosNCiAgICAgKi8NCiAgICBwdWJsaWMgJHNxbCA9IG51bGw7DQoNCiAgICAvKioNCiAgICAgKiDmnoTpgKDlh73mlbDvvIzlrp7kvovljJYkc3Fs5Y+C5pWwLg0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBfX2NvbnN0cnVjdCgpDQogICAgew0KICAgICAgICAkdGhpcy0+c3FsID0gbmV3IERiU3FsKCR0aGlzKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHMNCiAgICAgKg0KICAgICAqIEByZXR1cm4gc3RyaW5nDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEVzY2FwZVN0cmluZygkcykNCiAgICB7DQogICAgICAgIHJldHVybiBzdHJfaXJlcGxhY2UoJ1wnJywgJ1wnXCcnLCAkcyk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRhcnJheQ0KICAgICAqDQogICAgICogQHJldHVybiBib29sDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIE9wZW4oJGFycmF5KQ0KICAgIHsNCiAgICAgICAgJGRiX2xpbmsgPSBuZXcgUERPKCdzcWxpdGU6JyAuICRhcnJheVswXSk7DQogICAgICAgICR0aGlzLT5kYiA9ICRkYl9saW5rOw0KICAgICAgICAkdGhpcy0+ZGJwcmUgPSAkYXJyYXlbMV07DQogICAgICAgICR0aGlzLT5kYm5hbWUgPSAkYXJyYXlbMF07DQoNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5YWz6Zet5pWw5o2u5bqT6L+e5o6lLg0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBDbG9zZSgpDQogICAgew0KICAgICAgICAkdGhpcy0+ZGIgPSBudWxsOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOaJp+ihjOWkmuihjFNRTOivreWPpS4NCiAgICAgKg0KICAgICAqIEBwYXJhbSAkcw0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBRdWVyeU11bGl0KCRzKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuICR0aGlzLT5RdWVyeU11bHRpKCRzKTsNCiAgICB9DQoNCiAgICAvL+mUmeWIq+Wtl+WHveaVsO+8jOWOhuWPsuWOn+WboOS/neeVmeS4i+adpQ0KDQogICAgcHVibGljIGZ1bmN0aW9uIFF1ZXJ5TXVsdGkoJHMpDQogICAgew0KICAgICAgICAvLyRhPWV4cGxvZGUoJzsnLHN0cl9yZXBsYWNlKCclcHJlJScsICR0aGlzLT5kYnByZSwgJHMpKTsNCiAgICAgICAgJGEgPSBleHBsb2RlKCc7JywgJHMpOw0KICAgICAgICBmb3JlYWNoICgkYSBhcyAkcykgew0KICAgICAgICAgICAgJHMgPSB0cmltKCRzKTsNCiAgICAgICAgICAgIGlmICgkcyAhPSAnJykgew0KICAgICAgICAgICAgICAgICR0aGlzLT5kYi0+ZXhlYygkdGhpcy0+c3FsLT5GaWx0ZXIoJHMpKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkcXVlcnkNCiAgICAgKg0KICAgICAqIEByZXR1cm4gYXJyYXkNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gUXVlcnkoJHF1ZXJ5KQ0KICAgIHsNCiAgICAgICAgLy8kcXVlcnk9c3RyX3JlcGxhY2UoJyVwcmUlJywgJHRoaXMtPmRicHJlLCAkcXVlcnkpOw0KICAgICAgICAvLyDpgY3ljoblh7rmnaUNCiAgICAgICAgJHJlc3VsdHMgPSAkdGhpcy0+ZGItPnF1ZXJ5KCR0aGlzLT5zcWwtPkZpbHRlcigkcXVlcnkpKTsNCiAgICAgICAgLy9mZXRjaCB8fCBmZXRjaEFsbA0KICAgICAgICBpZiAoaXNfb2JqZWN0KCRyZXN1bHRzKSkgew0KICAgICAgICAgICAgcmV0dXJuICRyZXN1bHRzLT5mZXRjaEFsbCgpOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgcmV0dXJuIGFycmF5KCRyZXN1bHRzKTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkcXVlcnkNCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbHxteXNxbGlfcmVzdWx0DQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFVwZGF0ZSgkcXVlcnkpDQogICAgew0KICAgICAgICAvLyRxdWVyeT1zdHJfcmVwbGFjZSgnJXByZSUnLCAkdGhpcy0+ZGJwcmUsICRxdWVyeSk7DQogICAgICAgIHJldHVybiAkdGhpcy0+ZGItPnF1ZXJ5KCR0aGlzLT5zcWwtPkZpbHRlcigkcXVlcnkpKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHF1ZXJ5DQogICAgICoNCiAgICAgKiBAcmV0dXJuIGJvb2x8bXlzcWxpX3Jlc3VsdA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBEZWxldGUoJHF1ZXJ5KQ0KICAgIHsNCiAgICAgICAgLy8kcXVlcnk9c3RyX3JlcGxhY2UoJyVwcmUlJywgJHRoaXMtPmRicHJlLCAkcXVlcnkpOw0KICAgICAgICByZXR1cm4gJHRoaXMtPmRiLT5xdWVyeSgkdGhpcy0+c3FsLT5GaWx0ZXIoJHF1ZXJ5KSk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRxdWVyeQ0KICAgICAqDQogICAgICogQHJldHVybiBpbnQNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gSW5zZXJ0KCRxdWVyeSkNCiAgICB7DQogICAgICAgIC8vJHF1ZXJ5PXN0cl9yZXBsYWNlKCclcHJlJScsICR0aGlzLT5kYnByZSwgJHF1ZXJ5KTsNCiAgICAgICAgJHRoaXMtPmRiLT5leGVjKCR0aGlzLT5zcWwtPkZpbHRlcigkcXVlcnkpKTsNCg0KICAgICAgICByZXR1cm4gJHRoaXMtPmRiLT5sYXN0SW5zZXJ0SWQoKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHRhYmxlDQogICAgICogQHBhcmFtICRkYXRhaW5mbw0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBDcmVhdGVUYWJsZSgkdGFibGUsICRkYXRhaW5mbykNCiAgICB7DQogICAgICAgICR0aGlzLT5RdWVyeU11bGl0KCR0aGlzLT5zcWwtPkNyZWF0ZVRhYmxlKCR0YWJsZSwgJGRhdGFpbmZvKSk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICR0YWJsZQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBEZWxUYWJsZSgkdGFibGUpDQogICAgew0KICAgICAgICAkdGhpcy0+UXVlcnlNdWxpdCgkdGhpcy0+c3FsLT5EZWxUYWJsZSgkdGFibGUpKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHRhYmxlDQogICAgICoNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gRXhpc3RUYWJsZSgkdGFibGUpDQogICAgew0KICAgICAgICAkYSA9ICR0aGlzLT5RdWVyeSgkdGhpcy0+c3FsLT5FeGlzdFRhYmxlKCR0YWJsZSwgJHRoaXMtPmRibmFtZSkpOw0KICAgICAgICBpZiAoIWlzX2FycmF5KCRhKSkgew0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQoNCiAgICAgICAgJGIgPSBjdXJyZW50KCRhKTsNCiAgICAgICAgaWYgKCFpc19hcnJheSgkYikpIHsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KDQogICAgICAgICRjID0gKGludCkgY3VycmVudCgkYik7DQogICAgICAgIGlmICgkYyA+IDApIHsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQogICAgfQ0KfQ0K</file>
	<file name='zb_system\function\lib\database\postgresql.php' crc32='E764B9CD'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KLyoqDQogKiBQZ1NRTOaVsOaNruW6k+aTjeS9nOexuy4NCiAqLw0KY2xhc3MgRGF0YWJhc2VfX1Bvc3RncmVTUUwgaW1wbGVtZW50cyBEYXRhYmFzZV9fSW50ZXJmYWNlDQp7DQogICAgcHVibGljICR0eXBlID0gJ3Bvc3RncmVzcWwnOw0KICAgIHB1YmxpYyAkdmVyc2lvbiA9ICcnOw0KDQogICAgLyoqDQogICAgICogQHZhciBzdHJpbmd8bnVsbCDmlbDmja7lupPlkI3liY3nvIANCiAgICAgKi8NCiAgICBwdWJsaWMgJGRicHJlID0gbnVsbDsNCiAgICBwcml2YXRlICRkYiA9IG51bGw7IC8v5pWw5o2u5bqT6L+e5o6lDQogICAgLyoqDQogICAgICogQHZhciBzdHJpbmd8bnVsbCDmlbDmja7lupPlkI0NCiAgICAgKi8NCiAgICBwdWJsaWMgJGRibmFtZSA9IG51bGw7DQogICAgLyoqDQogICAgICogQHZhciBEYlNxbHxudWxsIERiU3Fs5a6e5L6LDQogICAgICovDQogICAgcHVibGljICRzcWwgPSBudWxsOw0KDQogICAgLyoqDQogICAgICog5p6E6YCg5Ye95pWw77yM5a6e5L6L5YyWJHNxbOWPguaVsC4NCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gX19jb25zdHJ1Y3QoKQ0KICAgIHsNCiAgICAgICAgJHRoaXMtPnNxbCA9IG5ldyBEYlNxbCgkdGhpcyk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5a+55a2X56ym5Liy6L+b6KGM6L2s5LmJ77yM5Zyo5oyH5a6a55qE5a2X56ym5YmN5re75Yqg5Y+N5pac5p2g77yM5Y2z5omn6KGMYWRkc2xhc2hlc+WHveaVsC4NCiAgICAgKg0KICAgICAqIEB1c2UgYWRkc2xhc2hlcw0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAkcw0KICAgICAqDQogICAgICogQHJldHVybiBzdHJpbmcNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gRXNjYXBlU3RyaW5nKCRzKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuIHBnX2VzY2FwZV9zdHJpbmcoJHMpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOi/nuaOpeaVsOaNruW6ky4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBhcnJheSAkYXJyYXkg5pWw5o2u5bqT6L+e5o6l6YWN572uDQogICAgICogICAgICAgICAgICAgICAgICAgICAkYXJyYXk9YXJyYXkoDQogICAgICogICAgICAgICAgICAgICAgICAgICAncGdzcWxfc2VydmVyJywNCiAgICAgKiAgICAgICAgICAgICAgICAgICAgICdwZ3NxbF91c2VybmFtZScsDQogICAgICogICAgICAgICAgICAgICAgICAgICAncGdzcWxfcGFzc3dvcmQnLA0KICAgICAqICAgICAgICAgICAgICAgICAgICAgJ3Bnc3FsX25hbWUnLA0KICAgICAqICAgICAgICAgICAgICAgICAgICAgJ3Bnc3FsX3ByZScsDQogICAgICogICAgICAgICAgICAgICAgICAgICAncGdzcWxfcG9ydCcsDQogICAgICogICAgICAgICAgICAgICAgICAgICAncGVyc2lzdGVudCcpDQogICAgICogICAgICAgICAgICAgICAgICAgICApDQogICAgICoNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gT3BlbigkYXJyYXkpDQogICAgew0KICAgICAgICAkcyA9ICJob3N0PXskYXJyYXlbMF19IHBvcnQ9eyRhcnJheVs1XX0gZGJuYW1lPXskYXJyYXlbM119IHVzZXI9eyRhcnJheVsxXX0gcGFzc3dvcmQ9eyRhcnJheVsyXX0gb3B0aW9ucz0nLS1jbGllbnRfZW5jb2Rpbmc9VVRGOCciOw0KICAgICAgICBpZiAoZmFsc2UgPT0gJGFycmF5WzVdKSB7DQogICAgICAgICAgICAkZGJfbGluayA9IHBnX2Nvbm5lY3QoJHMpOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgJGRiX2xpbmsgPSBwZ19wY29ubmVjdCgkcyk7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoISRkYl9saW5rKSB7DQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAkdGhpcy0+ZGJwcmUgPSAkYXJyYXlbNF07DQogICAgICAgICAgICAkdGhpcy0+ZGIgPSAkZGJfbGluazsNCiAgICAgICAgICAgICR2ID0gcGdfdmVyc2lvbigkZGJfbGluayk7DQogICAgICAgICAgICAkdGhpcy0+dmVyc2lvbiA9ICR2WydjbGllbnQnXTsNCg0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDlhbPpl63mlbDmja7lupPov57mjqUuDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIENsb3NlKCkNCiAgICB7DQogICAgICAgIGlmIChpc19yZXNvdXJjZSgkdGhpcy0+ZGIpKSB7DQogICAgICAgICAgICBwZ19jbG9zZSgkdGhpcy0+ZGIpOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5omn6KGM5aSa6KGMU1FM6K+t5Y+lLg0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAkcyDku6U75Y+35YiG6ZqU55qE5aSa5p2hU1FM6K+t5Y+lDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFF1ZXJ5TXVsaXQoJHMpDQogICAgew0KICAgICAgICByZXR1cm4gJHRoaXMtPlF1ZXJ5TXVsdGkoJHMpOw0KICAgIH0NCg0KICAgIC8v6ZSZ5Yir5a2X5Ye95pWw77yM5Y6G5Y+y5Y6f5Zug5L+d55WZ5LiL5p2lDQoNCiAgICBwdWJsaWMgZnVuY3Rpb24gUXVlcnlNdWx0aSgkcykNCiAgICB7DQogICAgICAgIC8vJGE9ZXhwbG9kZSgnOycsc3RyX3JlcGxhY2UoJyVwcmUlJywgJHRoaXMtPmRicHJlLCRzKSk7DQogICAgICAgICRhID0gZXhwbG9kZSgnOycsICRzKTsNCiAgICAgICAgZm9yZWFjaCAoJGEgYXMgJHMpIHsNCiAgICAgICAgICAgICRzID0gdHJpbSgkcyk7DQogICAgICAgICAgICBpZiAoJHMgIT0gJycpIHsNCiAgICAgICAgICAgICAgICBwZ19xdWVyeSgkdGhpcy0+ZGIsICR0aGlzLT5zcWwtPkZpbHRlcigkcykpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5omn6KGMU1FM5p+l6K+i6K+t5Y+lLg0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAkcXVlcnkNCiAgICAgKg0KICAgICAqIEByZXR1cm4gYXJyYXkg6L+U5Zue5pWw5o2u5pWw57uEDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFF1ZXJ5KCRxdWVyeSkNCiAgICB7DQogICAgICAgIC8vJHF1ZXJ5PXN0cl9yZXBsYWNlKCclcHJlJScsICR0aGlzLT5kYnByZSwgJHF1ZXJ5KTsNCiAgICAgICAgbG9ncygkdGhpcy0+c3FsLT5GaWx0ZXIoJHF1ZXJ5KSk7DQogICAgICAgICRyZXN1bHRzID0gcGdfcXVlcnkoJHRoaXMtPmRiLCAkdGhpcy0+c3FsLT5GaWx0ZXIoJHF1ZXJ5KSk7DQogICAgICAgIC8vaWYobXlzcWxfZXJybm8oKSl0cmlnZ2VyX2Vycm9yKG15c3FsX2Vycm9yKCR0aGlzLT5kYiksRV9VU0VSX05PVElDRSk7DQogICAgICAgICRkYXRhID0gYXJyYXkoKTsNCiAgICAgICAgaWYgKGlzX3Jlc291cmNlKCRyZXN1bHRzKSkgew0KICAgICAgICAgICAgd2hpbGUgKCRyb3cgPSBwZ19mZXRjaF9hc3NvYygkcmVzdWx0cykpIHsNCiAgICAgICAgICAgICAgICAkZGF0YVtdID0gJHJvdzsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICRkYXRhW10gPSAkcmVzdWx0czsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiAkZGF0YTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmm7TmlrDmlbDmja4uDQogICAgICoNCiAgICAgKiBAcGFyYW0gc3RyaW5nICRxdWVyeSBTUUzor63lj6UNCiAgICAgKg0KICAgICAqIEByZXR1cm4gcmVzb3VyY2UNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gVXBkYXRlKCRxdWVyeSkNCiAgICB7DQogICAgICAgIC8vJHF1ZXJ5PXN0cl9yZXBsYWNlKCclcHJlJScsICR0aGlzLT5kYnByZSwgJHF1ZXJ5KTsNCiAgICAgICAgcmV0dXJuIHBnX3F1ZXJ5KCR0aGlzLT5kYiwgJHRoaXMtPnNxbC0+RmlsdGVyKCRxdWVyeSkpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOWIoOmZpOaVsOaNri4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJHF1ZXJ5IFNRTOivreWPpQ0KICAgICAqDQogICAgICogQHJldHVybiByZXNvdXJjZQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBEZWxldGUoJHF1ZXJ5KQ0KICAgIHsNCiAgICAgICAgLy8kcXVlcnk9c3RyX3JlcGxhY2UoJyVwcmUlJywgJHRoaXMtPmRicHJlLCAkcXVlcnkpOw0KICAgICAgICByZXR1cm4gcGdfcXVlcnkoJHRoaXMtPmRiLCAkdGhpcy0+c3FsLT5GaWx0ZXIoJHF1ZXJ5KSk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5o+S5YWl5pWw5o2uLg0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAkcXVlcnkgU1FM6K+t5Y+lDQogICAgICoNCiAgICAgKiBAcmV0dXJuIGludCDov5Tlm55JROW6j+WIl+WPtw0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBJbnNlcnQoJHF1ZXJ5KQ0KICAgIHsNCiAgICAgICAgLy8kcXVlcnk9c3RyX3JlcGxhY2UoJyVwcmUlJywgJHRoaXMtPmRicHJlLCAkcXVlcnkpOw0KICAgICAgICBwZ19xdWVyeSgkdGhpcy0+ZGIsICR0aGlzLT5zcWwtPkZpbHRlcigkcXVlcnkpKTsNCiAgICAgICAgJHNlcSA9IGV4cGxvZGUoJyAnLCAkcXVlcnksIDQpOw0KICAgICAgICAkc2VxID0gJHNlcVsyXSAuICdfc2VxJzsNCiAgICAgICAgJHIgPSBwZ19xdWVyeSgnU0VMRUNUIENVUlJWQUwoXCcnIC4gJHNlcSAuICdcJyknKTsNCiAgICAgICAgJGlkID0gcGdfZmV0Y2hfcmVzdWx0KCRyLCAwLCAwKTsNCg0KICAgICAgICByZXR1cm4gKGludCkgJGlkOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOaWsOW7uuihqC4NCiAgICAgKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJHRhYmxlbmFtZSDooajlkI0NCiAgICAgKiBAcGFyYW0gYXJyYXkgICRkYXRhaW5mbyAg6KGo57uT5p6EDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIENyZWF0ZVRhYmxlKCR0YWJsZSwgJGRhdGFpbmZvKQ0KICAgIHsNCiAgICAgICAgJHRoaXMtPlF1ZXJ5TXVsaXQoJHRoaXMtPnNxbC0+Q3JlYXRlVGFibGUoJHRhYmxlLCAkZGF0YWluZm8pKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDliKDpmaTooaguDQogICAgICoNCiAgICAgKiBAcGFyYW0gc3RyaW5nICR0YWJsZSDooajlkI0NCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gRGVsVGFibGUoJHRhYmxlKQ0KICAgIHsNCiAgICAgICAgJHRoaXMtPlF1ZXJ5TXVsaXQoJHRoaXMtPnNxbC0+RGVsVGFibGUoJHRhYmxlKSk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5Yik5pat5pWw5o2u6KGo5piv5ZCm5a2Y5ZyoLg0KICAgICAqDQogICAgICogQHBhcmFtIHN0cmluZyAkdGFibGUg6KGo5ZCNDQogICAgICoNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gRXhpc3RUYWJsZSgkdGFibGUpDQogICAgew0KICAgICAgICAkYSA9ICR0aGlzLT5RdWVyeSgkdGhpcy0+c3FsLT5FeGlzdFRhYmxlKCR0YWJsZSwgJHRoaXMtPmRibmFtZSkpOw0KICAgICAgICBpZiAoIWlzX2FycmF5KCRhKSkgew0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQoNCiAgICAgICAgJGIgPSBjdXJyZW50KCRhKTsNCiAgICAgICAgaWYgKCFpc19hcnJheSgkYikpIHsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KDQogICAgICAgICRjID0gKGludCkgY3VycmVudCgkYik7DQogICAgICAgIGlmICgkYyA+IDApIHsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQogICAgfQ0KfQ0K</file>
	<file name='zb_system\function\lib\database\sqlite.php' crc32='8497F920'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KLyoqDQogKiBTUUxpdGUy5pWw5o2u5bqT5pON5L2c57G7Lg0KICovDQpjbGFzcyBEYXRhYmFzZV9fU1FMaXRlIGltcGxlbWVudHMgRGF0YWJhc2VfX0ludGVyZmFjZQ0Kew0KICAgIHB1YmxpYyAkdHlwZSA9ICdzcWxpdGUnOw0KICAgIHB1YmxpYyAkdmVyc2lvbiA9ICcyJzsNCg0KICAgIC8qKg0KICAgICAqIEB2YXIgc3RyaW5nfG51bGwg5pWw5o2u5bqT5ZCN5YmN57yADQogICAgICovDQogICAgcHVibGljICRkYnByZSA9IG51bGw7DQogICAgcHJpdmF0ZSAkZGIgPSBudWxsOyAvL+aVsOaNruW6k+i/nuaOpeWunuS+iw0KICAgIC8qKg0KICAgICAqIEB2YXIgc3RyaW5nfG51bGwg5pWw5o2u5bqT5ZCNDQogICAgICovDQogICAgcHVibGljICRkYm5hbWUgPSBudWxsOw0KICAgIC8qKg0KICAgICAqIEB2YXIgRGJTcWx8bnVsbA0KICAgICAqLw0KICAgIHB1YmxpYyAkc3FsID0gbnVsbDsNCg0KICAgIC8qKg0KICAgICAqIOaehOmAoOWHveaVsO+8jOWunuS+i+WMliRzcWzlj4LmlbAuDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIF9fY29uc3RydWN0KCkNCiAgICB7DQogICAgICAgICR0aGlzLT5zcWwgPSBuZXcgRGJTcWwoJHRoaXMpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkcw0KICAgICAqDQogICAgICogQHJldHVybiBzdHJpbmcNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gRXNjYXBlU3RyaW5nKCRzKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuIHNxbGl0ZV9lc2NhcGVfc3RyaW5nKCRzKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJGFycmF5DQogICAgICoNCiAgICAgKiBAcmV0dXJuIGJvb2wNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gT3BlbigkYXJyYXkpDQogICAgew0KICAgICAgICBpZiAoJHRoaXMtPmRiID0gc3FsaXRlX29wZW4oJGFycmF5WzBdLCAwNjY2LCAkc3FsaXRlZXJyb3IpKSB7DQogICAgICAgICAgICAkdGhpcy0+ZGJwcmUgPSAkYXJyYXlbMV07DQogICAgICAgICAgICAkdGhpcy0+ZGJuYW1lID0gJGFycmF5WzBdOw0KDQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOWFs+mXreaVsOaNruW6k+i/nuaOpS4NCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gQ2xvc2UoKQ0KICAgIHsNCiAgICAgICAgc3FsaXRlX2Nsb3NlKCR0aGlzLT5kYik7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRzDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFF1ZXJ5TXVsaXQoJHMpDQogICAgew0KICAgICAgICByZXR1cm4gJHRoaXMtPlF1ZXJ5TXVsdGkoJHMpOw0KICAgIH0NCg0KICAgIC8v6ZSZ5Yir5a2X5Ye95pWw77yM5Y6G5Y+y5Y6f5Zug5L+d55WZ5LiL5p2lDQoNCiAgICBwdWJsaWMgZnVuY3Rpb24gUXVlcnlNdWx0aSgkcykNCiAgICB7DQogICAgICAgIC8vJGE9ZXhwbG9kZSgnOycsc3RyX3JlcGxhY2UoJyVwcmUlJywgJHRoaXMtPmRicHJlLCAkcykpOw0KICAgICAgICAkYSA9IGV4cGxvZGUoJzsnLCAkcyk7DQogICAgICAgIGZvcmVhY2ggKCRhIGFzICRzKSB7DQogICAgICAgICAgICAkcyA9IHRyaW0oJHMpOw0KICAgICAgICAgICAgaWYgKCRzICE9ICcnKSB7DQogICAgICAgICAgICAgICAgc3FsaXRlX3F1ZXJ5KCR0aGlzLT5kYiwgJHRoaXMtPnNxbC0+RmlsdGVyKCRzKSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHF1ZXJ5DQogICAgICoNCiAgICAgKiBAcmV0dXJuIGFycmF5DQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFF1ZXJ5KCRxdWVyeSkNCiAgICB7DQogICAgICAgIC8vJHF1ZXJ5PXN0cl9yZXBsYWNlKCclcHJlJScsICR0aGlzLT5kYnByZSwgJHF1ZXJ5KTsNCiAgICAgICAgLy8g6YGN5Y6G5Ye65p2lDQogICAgICAgICRyZXN1bHRzID0gc3FsaXRlX3F1ZXJ5KCR0aGlzLT5kYiwgJHRoaXMtPnNxbC0+RmlsdGVyKCRxdWVyeSkpOw0KICAgICAgICAkZGF0YSA9IGFycmF5KCk7DQogICAgICAgIGlmIChpc19yZXNvdXJjZSgkcmVzdWx0cykpIHsNCiAgICAgICAgICAgIHdoaWxlICgkcm93ID0gc3FsaXRlX2ZldGNoX2FycmF5KCRyZXN1bHRzKSkgew0KICAgICAgICAgICAgICAgICRkYXRhW10gPSAkcm93Ow0KICAgICAgICAgICAgfQ0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgJGRhdGFbXSA9ICRyZXN1bHRzOw0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuICRkYXRhOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkcXVlcnkNCiAgICAgKg0KICAgICAqIEByZXR1cm4gU1FMaXRlUmVzdWx0DQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFVwZGF0ZSgkcXVlcnkpDQogICAgew0KICAgICAgICAvLyRxdWVyeT1zdHJfcmVwbGFjZSgnJXByZSUnLCAkdGhpcy0+ZGJwcmUsICRxdWVyeSk7DQogICAgICAgIHJldHVybiBzcWxpdGVfcXVlcnkoJHRoaXMtPmRiLCAkdGhpcy0+c3FsLT5GaWx0ZXIoJHF1ZXJ5KSk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtICRxdWVyeQ0KICAgICAqDQogICAgICogQHJldHVybiBTUUxpdGVSZXN1bHQNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gRGVsZXRlKCRxdWVyeSkNCiAgICB7DQogICAgICAgIC8vJHF1ZXJ5PXN0cl9yZXBsYWNlKCclcHJlJScsICR0aGlzLT5kYnByZSwgJHF1ZXJ5KTsNCiAgICAgICAgcmV0dXJuIHNxbGl0ZV9xdWVyeSgkdGhpcy0+ZGIsICR0aGlzLT5zcWwtPkZpbHRlcigkcXVlcnkpKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHF1ZXJ5DQogICAgICoNCiAgICAgKiBAcmV0dXJuIGludA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBJbnNlcnQoJHF1ZXJ5KQ0KICAgIHsNCiAgICAgICAgLy8kcXVlcnk9c3RyX3JlcGxhY2UoJyVwcmUlJywgJHRoaXMtPmRicHJlLCAkcXVlcnkpOw0KICAgICAgICBzcWxpdGVfcXVlcnkoJHRoaXMtPmRiLCAkdGhpcy0+c3FsLT5GaWx0ZXIoJHF1ZXJ5KSk7DQoNCiAgICAgICAgcmV0dXJuIHNxbGl0ZV9sYXN0X2luc2VydF9yb3dpZCgkdGhpcy0+ZGIpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkdGFibGUNCiAgICAgKiBAcGFyYW0gJGRhdGFpbmZvDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIENyZWF0ZVRhYmxlKCR0YWJsZSwgJGRhdGFpbmZvKQ0KICAgIHsNCiAgICAgICAgJHRoaXMtPlF1ZXJ5TXVsaXQoJHRoaXMtPnNxbC0+Q3JlYXRlVGFibGUoJHRhYmxlLCAkZGF0YWluZm8pKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHRhYmxlDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIERlbFRhYmxlKCR0YWJsZSkNCiAgICB7DQogICAgICAgICR0aGlzLT5RdWVyeU11bGl0KCR0aGlzLT5zcWwtPkRlbFRhYmxlKCR0YWJsZSkpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkdGFibGUNCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBFeGlzdFRhYmxlKCR0YWJsZSkNCiAgICB7DQogICAgICAgICRhID0gJHRoaXMtPlF1ZXJ5KCR0aGlzLT5zcWwtPkV4aXN0VGFibGUoJHRhYmxlKSk7DQogICAgICAgIGlmICghaXNfYXJyYXkoJGEpKSB7DQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0NCg0KICAgICAgICAkYiA9IGN1cnJlbnQoJGEpOw0KICAgICAgICBpZiAoIWlzX2FycmF5KCRiKSkgew0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQoNCiAgICAgICAgJGMgPSAoaW50KSBjdXJyZW50KCRiKTsNCiAgICAgICAgaWYgKCRjID4gMCkgew0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0NCiAgICB9DQp9DQo=</file>
	<file name='zb_system\function\lib\database\sqlite3.php' crc32='44976CFE'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KLyoqDQogKiBTUUxpdGUz5pWw5o2u5bqT5pON5L2c57G7Lg0KICovDQpjbGFzcyBEYXRhYmFzZV9fU1FMaXRlMyBpbXBsZW1lbnRzIERhdGFiYXNlX19JbnRlcmZhY2UNCnsNCiAgICBwdWJsaWMgJHR5cGUgPSAnc3FsaXRlJzsNCiAgICBwdWJsaWMgJHZlcnNpb24gPSAnMyc7DQoNCiAgICAvKioNCiAgICAgKiBAdmFyIHN0cmluZ3xudWxsIOaVsOaNruW6k+WQjeWJjee8gA0KICAgICAqLw0KICAgIHB1YmxpYyAkZGJwcmUgPSBudWxsOw0KICAgIHByaXZhdGUgJGRiID0gbnVsbDsgLy/mlbDmja7lupPov57mjqXlrp7kvosNCiAgICAvKioNCiAgICAgKiBAdmFyIHN0cmluZ3xudWxsIOaVsOaNruW6k+WQjQ0KICAgICAqLw0KICAgIHB1YmxpYyAkZGJuYW1lID0gbnVsbDsNCiAgICAvKioNCiAgICAgKiBAdmFyIERiU3FsfG51bGwNCiAgICAgKi8NCiAgICBwdWJsaWMgJHNxbCA9IG51bGw7DQoNCiAgICAvKioNCiAgICAgKiDmnoTpgKDlh73mlbDvvIzlrp7kvovljJYkc3Fs5Y+C5pWwLg0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBfX2NvbnN0cnVjdCgpDQogICAgew0KICAgICAgICAkdGhpcy0+c3FsID0gbmV3IERiU3FsKCR0aGlzKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHMNCiAgICAgKg0KICAgICAqIEByZXR1cm4gc3RyaW5nDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEVzY2FwZVN0cmluZygkcykNCiAgICB7DQogICAgICAgIHJldHVybiBTUUxpdGUzOjplc2NhcGVTdHJpbmcoJHMpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkYXJyYXkNCiAgICAgKg0KICAgICAqIEByZXR1cm4gYm9vbA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBPcGVuKCRhcnJheSkNCiAgICB7DQogICAgICAgIGlmICgkdGhpcy0+ZGIgPSBuZXcgU1FMaXRlMygkYXJyYXlbMF0pKSB7DQogICAgICAgICAgICAkdGhpcy0+ZGJwcmUgPSAkYXJyYXlbMV07DQogICAgICAgICAgICAkdGhpcy0+ZGJuYW1lID0gJGFycmF5WzBdOw0KDQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOWFs+mXreaVsOaNruW6k+i/nuaOpS4NCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gQ2xvc2UoKQ0KICAgIHsNCiAgICAgICAgJHRoaXMtPmRiLT5jbG9zZSgpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkcw0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBRdWVyeU11bGl0KCRzKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuICR0aGlzLT5RdWVyeU11bHRpKCRzKTsNCiAgICB9DQoNCiAgICAvL+mUmeWIq+Wtl+WHveaVsO+8jOWOhuWPsuWOn+WboOS/neeVmeS4i+adpQ0KDQogICAgcHVibGljIGZ1bmN0aW9uIFF1ZXJ5TXVsdGkoJHMpDQogICAgew0KICAgICAgICAvLyRhPWV4cGxvZGUoJzsnLHN0cl9yZXBsYWNlKCclcHJlJScsICR0aGlzLT5kYnByZSwgJHMpKTsNCiAgICAgICAgJGEgPSBleHBsb2RlKCc7JywgJHMpOw0KICAgICAgICBmb3JlYWNoICgkYSBhcyAkcykgew0KICAgICAgICAgICAgJHMgPSB0cmltKCRzKTsNCiAgICAgICAgICAgIGlmICgkcyAhPSAnJykgew0KICAgICAgICAgICAgICAgICR0aGlzLT5kYi0+cXVlcnkoJHRoaXMtPnNxbC0+RmlsdGVyKCRzKSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHF1ZXJ5DQogICAgICoNCiAgICAgKiBAcmV0dXJuIGFycmF5DQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFF1ZXJ5KCRxdWVyeSkNCiAgICB7DQogICAgICAgIC8vJHF1ZXJ5PXN0cl9yZXBsYWNlKCclcHJlJScsICR0aGlzLT5kYnByZSwgJHF1ZXJ5KTsNCiAgICAgICAgLy8g6YGN5Y6G5Ye65p2lDQogICAgICAgICRyZXN1bHRzID0gJHRoaXMtPmRiLT5xdWVyeSgkdGhpcy0+c3FsLT5GaWx0ZXIoJHF1ZXJ5KSk7DQogICAgICAgICRkYXRhID0gYXJyYXkoKTsNCiAgICAgICAgaWYgKCEoJHJlc3VsdHMgaW5zdGFuY2VvZiBTcWxpdGUzUmVzdWx0KSkgew0KICAgICAgICAgICAgcmV0dXJuICRkYXRhOw0KICAgICAgICB9DQogICAgICAgIGlmICgkcmVzdWx0cy0+bnVtQ29sdW1ucygpID4gMCkgew0KICAgICAgICAgICAgd2hpbGUgKCRyb3cgPSAkcmVzdWx0cy0+ZmV0Y2hBcnJheSgpKSB7DQogICAgICAgICAgICAgICAgJGRhdGFbXSA9ICRyb3c7DQogICAgICAgICAgICB9DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAkZGF0YVtdID0gJHJlc3VsdHMtPm51bUNvbHVtbnMoKTsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiAkZGF0YTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHF1ZXJ5DQogICAgICoNCiAgICAgKiBAcmV0dXJuIG1peGVkDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIFVwZGF0ZSgkcXVlcnkpDQogICAgew0KICAgICAgICAvLyRxdWVyeT1zdHJfcmVwbGFjZSgnJXByZSUnLCAkdGhpcy0+ZGJwcmUsICRxdWVyeSk7DQogICAgICAgIHJldHVybiAkdGhpcy0+ZGItPnF1ZXJ5KCR0aGlzLT5zcWwtPkZpbHRlcigkcXVlcnkpKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHF1ZXJ5DQogICAgICoNCiAgICAgKiBAcmV0dXJuIG1peGVkDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIERlbGV0ZSgkcXVlcnkpDQogICAgew0KICAgICAgICAvLyRxdWVyeT1zdHJfcmVwbGFjZSgnJXByZSUnLCAkdGhpcy0+ZGJwcmUsICRxdWVyeSk7DQogICAgICAgIHJldHVybiAkdGhpcy0+ZGItPnF1ZXJ5KCR0aGlzLT5zcWwtPkZpbHRlcigkcXVlcnkpKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHF1ZXJ5DQogICAgICoNCiAgICAgKiBAcmV0dXJuIG1peGVkDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIEluc2VydCgkcXVlcnkpDQogICAgew0KICAgICAgICAvLyRxdWVyeT1zdHJfcmVwbGFjZSgnJXByZSUnLCAkdGhpcy0+ZGJwcmUsICRxdWVyeSk7DQogICAgICAgICR0aGlzLT5kYi0+cXVlcnkoJHRoaXMtPnNxbC0+RmlsdGVyKCRxdWVyeSkpOw0KDQogICAgICAgIHJldHVybiAkdGhpcy0+ZGItPmxhc3RJbnNlcnRSb3dJRCgpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkdGFibGUNCiAgICAgKiBAcGFyYW0gJGRhdGFpbmZvDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIENyZWF0ZVRhYmxlKCR0YWJsZSwgJGRhdGFpbmZvKQ0KICAgIHsNCiAgICAgICAgJHRoaXMtPlF1ZXJ5TXVsaXQoJHRoaXMtPnNxbC0+Q3JlYXRlVGFibGUoJHRhYmxlLCAkZGF0YWluZm8pKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJHRhYmxlDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIERlbFRhYmxlKCR0YWJsZSkNCiAgICB7DQogICAgICAgICR0aGlzLT5RdWVyeU11bGl0KCR0aGlzLT5zcWwtPkRlbFRhYmxlKCR0YWJsZSkpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkdGFibGUNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gRXhpc3RUYWJsZSgkdGFibGUpDQogICAgew0KICAgICAgICAkYSA9ICR0aGlzLT5RdWVyeSgkdGhpcy0+c3FsLT5FeGlzdFRhYmxlKCR0YWJsZSkpOw0KICAgICAgICBpZiAoIWlzX2FycmF5KCRhKSkgew0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQoNCiAgICAgICAgJGIgPSBjdXJyZW50KCRhKTsNCiAgICAgICAgaWYgKCFpc19hcnJheSgkYikpIHsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KDQogICAgICAgICRjID0gKGludCkgY3VycmVudCgkYik7DQogICAgICAgIGlmICgkYyA+IDApIHsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQogICAgfQ0KfQ0K</file>
	<file name='zb_system\function\lib\network\curl.php' crc32='E4788F16'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\network\filegetcontents.php' crc32='F621A439'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\network\fsockopen.php' crc32='2080D7E3'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\network\interface.php' crc32='39C0D5D6'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KDQovKioNCiAqIOe9kee7nOi/nuaOpeaOpeWPoy4NCiAqDQogKiBAcHJvcGVydHkgaW50ICRyZWFkeVN0YXRlIOeKtuaAgQ0KICogQHByb3BlcnR5IG1peGVkICRyZXNwb25zZUJvZHkg6L+U5Zue55qE5LqM6L+b5Yi2DQogKiBAcHJvcGVydHkgc3RyaW5nICRyZXNwb25zZVRleHQg6L+U5Zue55qE5a2X56ym5LiyDQogKiBAcHJvcGVydHkgU2ltcGxlWE1MRWxlbWVudCAkcmVzcG9uc2VYTUwg6L+U5Zue55qEWE1MIERPTQ0KICogQHByb3BlcnR5IGludCAkc3RhdHVzIOeKtuaAgeeggQ0KICogQHByb3BlcnR5IHN0cmluZyAkc3RhdHVzVGV4dCDnirbmgIHnoIHmlofmnKwNCiAqIEBwcm9wZXJ0eSBzdHJpbmcgJHJlc3BvbnNlVmVyc2lvbiBIVFRQ54mI5pys5Y+3DQogKiBAcHJvcGVydHkgc3RyaW5nW10gJHJlc3BvbnNlSGVhZGVyIOi/lOWbnueahCBIVFRQIOWTjeW6lOWktA0KICovDQppbnRlcmZhY2UgTmV0d29ya19fSW50ZXJmYWNlDQp7DQogICAgLyoqDQogICAgICogQHJldHVybiBtaXhlZA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBhYm9ydCgpOw0KDQogICAgLyoqDQogICAgICogQHJldHVybiBtaXhlZA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBnZXRBbGxSZXNwb25zZUhlYWRlcnMoKTsNCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkYnN0ckhlYWRlcg0KICAgICAqDQogICAgICogQHJldHVybiBtaXhlZA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBnZXRSZXNwb25zZUhlYWRlcigkYnN0ckhlYWRlcik7DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gJGJzdHJNZXRob2QNCiAgICAgKiBAcGFyYW0gJGJzdHJVcmwNCiAgICAgKiBAcGFyYW0gYm9vbCAgICR2YXJBc3luYw0KICAgICAqIEBwYXJhbSBzdHJpbmcgJGJzdHJVc2VyDQogICAgICogQHBhcmFtIHN0cmluZyAkYnN0clBhc3N3b3JkDQogICAgICoNCiAgICAgKiBAcmV0dXJuIG1peGVkDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIG9wZW4oJGJzdHJNZXRob2QsICRic3RyVXJsLCAkdmFyQXN5bmMgPSB0cnVlLCAkYnN0clVzZXIgPSAnJywgJGJzdHJQYXNzd29yZCA9ICcnKTsNCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSBzdHJpbmcgJHZhckJvZHkNCiAgICAgKg0KICAgICAqIEByZXR1cm4gbWl4ZWQNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gc2VuZCgkdmFyQm9keSA9ICcnKTsNCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkYnN0ckhlYWRlcg0KICAgICAqIEBwYXJhbSAkYnN0clZhbHVlDQogICAgICoNCiAgICAgKiBAcmV0dXJuIG1peGVkDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIHNldFJlcXVlc3RIZWFkZXIoJGJzdHJIZWFkZXIsICRic3RyVmFsdWUpOw0KDQogICAgLyoqDQogICAgICogQHJldHVybiBtaXhlZA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBlbmFibGVHemlwKCk7DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0gaW50ICRuDQogICAgICoNCiAgICAgKiBAcmV0dXJuIG1peGVkDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIHNldE1heFJlZGlycygkbiA9IDApOw0KDQogICAgLyoqDQogICAgICogQHBhcmFtIHN0cmluZyAkbmFtZQ0KICAgICAqIEBwYXJhbSBzdHJpbmcgJGVudGl0eQ0KICAgICAqDQogICAgICogQHJldHVybiBtaXhlZA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBhZGRCaW5hcnkoJG5hbWUsICRlbnRpdHkpOw0KDQogICAgLyoqDQogICAgICogQHBhcmFtIHN0cmluZyAkbmFtZQ0KICAgICAqIEBwYXJhbSBzdHJpbmcgJGVudGl0eQ0KICAgICAqDQogICAgICogQHJldHVybiBtaXhlZA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBhZGRUZXh0KCRuYW1lLCAkZW50aXR5KTsNCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSAkcmVzb2x2ZVRpbWVvdXQNCiAgICAgKiBAcGFyYW0gJGNvbm5lY3RUaW1lb3V0DQogICAgICogQHBhcmFtICRzZW5kVGltZW91dA0KICAgICAqIEBwYXJhbSAkcmVjZWl2ZVRpbWVvdXQNCiAgICAgKg0KICAgICAqIEByZXR1cm4gbWl4ZWQNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gc2V0VGltZU91dHMoJHJlc29sdmVUaW1lb3V0LCAkY29ubmVjdFRpbWVvdXQsICRzZW5kVGltZW91dCwgJHJlY2VpdmVUaW1lb3V0KTsNCn0NCg==</file>
	<file name='zb_system\function\lib\sql\global.php' crc32='E3FECE8F'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\sql\mysql.php' crc32='3D3D3E06'  dt:dt='bin.base64'></file>
	<file name='zb_system\function\lib\sql\postgresql.php' crc32='10822077'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KY2xhc3MgU1FMX19Qb3N0Z3JlU1FMIGV4dGVuZHMgU1FMX19HbG9iYWwNCnsNCiAgICAvKioNCiAgICAgKiBAb3ZlcnJpZGUNCiAgICAgKi8NCiAgICBwdWJsaWMgJGNsYXNzTmFtZSA9IF9fQ0xBU1NfXzsNCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSBvYmplY3QgJGRiDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIF9fY29uc3RydWN0KCYkZGIgPSBudWxsKQ0KICAgIHsNCiAgICAgICAgcGFyZW50OjpfX2NvbnN0cnVjdCgkZGIpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEB0b2RvDQogICAgICogQG92ZXJyaWRlDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIGV4aXN0KCR0YWJsZSwgJGRibmFtZSA9ICcnKQ0KICAgIHsNCiAgICAgICAgJHRoaXMtPl9zcWwgPSBhcnJheSgiU0VMRUNUIENPVU5UKCopIEZST00gaW5mb3JtYXRpb25fc2NoZW1hLnRhYmxlcyBXSEVSRSB0YWJsZV9zY2hlbWE9J3B1YmxpYycgQU5EICB0YWJsZV9uYW1lID0nJHRhYmxlJyIpOw0KDQogICAgICAgIHJldHVybiAkdGhpczsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAdG9kbw0KICAgICAqIEBvdmVycmlkZQ0KICAgICAqLw0KICAgIHByb3RlY3RlZCBmdW5jdGlvbiBidWlsZENyZWF0ZSgpDQogICAgew0KICAgICAgICAkc3FsQWxsID0gYXJyYXkoKTsNCiAgICAgICAgZm9yZWFjaCAoJHRoaXMtPnRhYmxlIGFzICR0YWJsZUluZGV4ID0+ICR0YWJsZSkgew0KICAgICAgICAgICAgJHNxbCA9IGFycmF5KCk7DQogICAgICAgICAgICAkc3FsW10gPSAnQ1JFQVRFIFNFUVVFTkNFICcgLiAkdGFibGUgLiAnX3NlcTsnOw0KICAgICAgICAgICAgJHNxbFtdID0gJ0NSRUFURSBUQUJMRSAnIC4gJHRhYmxlIC4gJyAoJzsNCiAgICAgICAgICAgICRpZG5hbWUgPSBHZXRWYWx1ZUluQXJyYXlCeUN1cnJlbnQoJHRoaXMtPmRhdGEsIDApOw0KDQogICAgICAgICAgICAkaSA9IDA7DQogICAgICAgICAgICBmb3JlYWNoICgkdGhpcy0+ZGF0YSBhcyAka2V5ID0+ICR2YWx1ZSkgew0KICAgICAgICAgICAgICAgIGlmICgkdmFsdWVbMV0gPT0gJ2ludGVnZXInKSB7DQogICAgICAgICAgICAgICAgICAgIGlmICgkaSA9PSAwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAkc3FsW10gPSAkdmFsdWVbMF0gLiAnIElOVCBOT1QgTlVMTCBERUZBVUxUIG5leHR2YWwoXCcnIC4gJHRhYmxlIC4gJ19zZXFcJyknIC4gJywnOw0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCR2YWx1ZVsyXSA9PSAnJykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzcWxbXSA9ICR2YWx1ZVswXSAuICcgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUIFwnJyAuICR2YWx1ZVszXSAuICdcJycgLiAnLCc7DQogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2VpZiAoJHZhbHVlWzJdID09ICd0aW55aW50Jykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzcWxbXSA9ICR2YWx1ZVswXSAuICcgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUIFwnJyAuICR2YWx1ZVszXSAuICdcJycgLiAnLCc7DQogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2VpZiAoJHZhbHVlWzJdID09ICdzbWFsbGludCcpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc3FsW10gPSAkdmFsdWVbMF0gLiAnIHNtYWxsaW50IE5PVCBOVUxMIERFRkFVTFQgXCcnIC4gJHZhbHVlWzNdIC4gJ1wnJyAuICcsJzsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZWlmICgkdmFsdWVbMl0gPT0gJ21lZGl1bWludCcpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc3FsW10gPSAkdmFsdWVbMF0gLiAnIGludGVnZXIgTk9UIE5VTEwgREVGQVVMVCBcJycgLiAkdmFsdWVbM10gLiAnXCcnIC4gJywnOw0KICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlaWYgKCR2YWx1ZVsyXSA9PSAnaW50Jykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzcWxbXSA9ICR2YWx1ZVswXSAuICcgaW50ZWdlciBOT1QgTlVMTCBERUZBVUxUIFwnJyAuICR2YWx1ZVszXSAuICdcJycgLiAnLCc7DQogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2VpZiAoJHZhbHVlWzJdID09ICdiaWdpbnQnKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNxbFtdID0gJHZhbHVlWzBdIC4gJyBiaWdpbnQgTk9UIE5VTEwgREVGQVVMVCBcJycgLiAkdmFsdWVbM10gLiAnXCcnIC4gJywnOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGlmICgkdmFsdWVbMV0gPT0gJ2Jvb2xlYW4nKSB7DQogICAgICAgICAgICAgICAgICAgICRzcWxbXSA9ICR2YWx1ZVswXSAuICcgY2hhcigxKSBOT1QgTlVMTCBERUZBVUxUIFwnJyAuIChpbnQpICR2YWx1ZVszXSAuICdcJycgLiAnLCc7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGlmICgkdmFsdWVbMV0gPT0gJ3N0cmluZycpIHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKCR2YWx1ZVsyXSAhPSAnJykgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0cnBvcygkdmFsdWVbMl0sICdjaGFyJykgIT09IGZhbHNlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNxbFtdID0gJHZhbHVlWzBdIC4gJyBjaGFyKCcgLiBzdHJfcmVwbGFjZSgnY2hhcicsICcnLCAkdmFsdWVbMl0pIC4gJykgTk9UIE5VTEwgREVGQVVMVCBcJycgLiAkdmFsdWVbM10gLiAnXCcnIC4gJywnOw0KICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlaWYgKGlzX2ludCgkdmFsdWVbMl0pKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNxbFtdID0gJHZhbHVlWzBdIC4gJyB2YXJjaGFyKCcgLiAkdmFsdWVbMl0gLiAnKSBOT1QgTlVMTCBERUZBVUxUIFwnJyAuICR2YWx1ZVszXSAuICdcJycgLiAnLCc7DQogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzcWxbXSA9ICR2YWx1ZVswXSAuICcgdGV4dCBOT1QgTlVMTCBERUZBVUxUIFwnXCcsJzsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICRzcWxbXSA9ICR2YWx1ZVswXSAuICcgdGV4dCBOT1QgTlVMTCBERUZBVUxUIFwnXCcsJzsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBpZiAoJHZhbHVlWzFdID09ICdkb3VibGUnKSB7DQogICAgICAgICAgICAgICAgICAgICRzcWxbXSA9ICR2YWx1ZVswXSAuICIgZG91YmxlIHByZWNpc2lvbiBOT1QgTlVMTCBERUZBVUxUIDAiIC4gJywnOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBpZiAoJHZhbHVlWzFdID09ICdmbG9hdCcpIHsNCiAgICAgICAgICAgICAgICAgICAgJHNxbFtdID0gJHZhbHVlWzBdIC4gIiByZWFsIE5PVCBOVUxMIERFRkFVTFQgMCIgLiAnLCc7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGlmICgkdmFsdWVbMV0gPT0gJ2RhdGUnIHx8ICR2YWx1ZVsxXSA9PSAndGltZScpIHsNCiAgICAgICAgICAgICAgICAgICAgJHNxbFtdID0gJHZhbHVlWzBdIC4gIiAkdmFsdWVbMV0gTk9UIE5VTEwsIjsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgaWYgKCR2YWx1ZVsxXSA9PSAnZGF0ZXRpbWUnKSB7DQogICAgICAgICAgICAgICAgICAgICRzcWxbXSA9ICR2YWx1ZVswXSAuICIgdGltZSBOT1QgTlVMTCwiOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBpZiAoJHZhbHVlWzFdID09ICd0aW1lc3RhbXAnKSB7DQogICAgICAgICAgICAgICAgICAgICRzcWxbXSA9ICR2YWx1ZVswXSAuICIgJHZhbHVlWzFdIE5PVCBOVUxMIERFRkFVTFQgQ1VSUkVOVF9USU1FU1RBTVAsIjsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgJGkgKz0gMTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgICRzcWxbXSA9ICdQUklNQVJZIEtFWSAoJyAuICRpZG5hbWUgLiAnKSc7DQoNCiAgICAgICAgICAgICRzcWxbXSA9ICcpOyc7DQogICAgICAgICAgICAkc3FsW10gPSAnQ1JFQVRFIElOREVYICcgLiAkdGFibGUgLiAnX2l4X2lkIG9uICcgLiAkdGFibGUgLiAnKCcgLiAkaWRuYW1lIC4gJyk7JzsNCiAgICAgICAgICAgICRzcWxBbGxbXSA9IGltcGxvZGUoJHNxbCwgJyAnKTsNCiAgICAgICAgfQ0KICAgICAgICAkdGhpcy0+X3NxbCA9ICRzcWxBbGw7DQogICAgfQ0KDQogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIGJ1aWxkRHJvcCgpDQogICAgew0KICAgICAgICBmb3JlYWNoICgkdGhpcy0+dGFibGUgYXMgJHRhYmxlSW5kZXggPT4gJHRhYmxlKSB7DQogICAgICAgICAgICAkc3FsID0gYXJyYXkoKTsNCiAgICAgICAgICAgICRzcWxbXSA9ICdEUk9QIFRBQkxFICcgLiAkdGFibGUgLiAnOyc7DQogICAgICAgICAgICAkc3FsW10gPSAnRFJPUCBTRVFVRU5DRSAnIC4gJHRhYmxlIC4gJ19zZXE7JzsNCiAgICAgICAgfQ0KICAgICAgICAkdGhpcy0+X3NxbCA9ICRzcWw7DQogICAgfQ0KfQ0K</file>
	<file name='zb_system\function\lib\sql\sqlite.php' crc32='20AD574B'  dt:dt='bin.base64'>PD9waHANCg0KaWYgKCFkZWZpbmVkKCdaQlBfUEFUSCcpKSB7DQogICAgZXhpdCgnQWNjZXNzIGRlbmllZCcpOw0KfQ0KY2xhc3MgU1FMX19TUUxpdGUgZXh0ZW5kcyBTUUxfX0dsb2JhbA0Kew0KICAgIC8qKg0KICAgICAqIEBvdmVycmlkZQ0KICAgICAqLw0KICAgIHB1YmxpYyAkY2xhc3NOYW1lID0gX19DTEFTU19fOw0KDQogICAgLyoqDQogICAgICogQHBhcmFtIG9iamVjdCAkZGINCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gX19jb25zdHJ1Y3QoJiRkYiA9IG51bGwpDQogICAgew0KICAgICAgICBwYXJlbnQ6Ol9fY29uc3RydWN0KCRkYik7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHRvZG8NCiAgICAgKiBAb3ZlcnJpZGUNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gZXhpc3QoJHRhYmxlLCAkZGJuYW1lID0gJycpDQogICAgew0KICAgICAgICAkdGhpcy0+X3NxbCA9IGFycmF5KCJTRUxFQ1QgQ09VTlQoKikgRlJPTSBzcWxpdGVfbWFzdGVyIFdIRVJFIHR5cGU9J3RhYmxlJyBBTkQgbmFtZT0nJHRhYmxlJyIpOw0KDQogICAgICAgIHJldHVybiAkdGhpczsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAdG9kbw0KICAgICAqIEBvdmVycmlkZQ0KICAgICAqLw0KICAgIHByb3RlY3RlZCBmdW5jdGlvbiBidWlsZENyZWF0ZSgpDQogICAgew0KICAgICAgICAkc3FsQWxsID0gYXJyYXkoKTsNCiAgICAgICAgZm9yZWFjaCAoJHRoaXMtPnRhYmxlIGFzICR0YWJsZUluZGV4ID0+ICR0YWJsZSkgew0KICAgICAgICAgICAgJHNxbCA9IGFycmF5KCk7DQoNCiAgICAgICAgICAgICRzcWxbXSA9ICdDUkVBVEUgVEFCTEUgJyAuICR0YWJsZTsNCiAgICAgICAgICAgICRzcWxbXSA9ICcgKCc7DQogICAgICAgICAgICAkY3JlYXRlRGF0YSA9IGFycmF5KCk7DQoNCiAgICAgICAgICAgICRpZG5hbWUgPSBHZXRWYWx1ZUluQXJyYXlCeUN1cnJlbnQoJHRoaXMtPmRhdGEsIDApOw0KDQogICAgICAgICAgICAkaSA9IDA7DQogICAgICAgICAgICBmb3JlYWNoICgkdGhpcy0+ZGF0YSBhcyAka2V5ID0+ICR2YWx1ZSkgew0KICAgICAgICAgICAgICAgIGlmICgkdmFsdWVbMV0gPT0gJ2ludGVnZXInKSB7DQogICAgICAgICAgICAgICAgICAgIGlmICgkaSA9PSAwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAkY3JlYXRlRGF0YVtdID0gJHZhbHVlWzBdIC4gJyBpbnRlZ2VyIHByaW1hcnkga2V5JyAuICgkdGhpcy0+ZGJjbGFzcyA9PSAnRGJTUUxpdGUnID8gJycgOiAnIGF1dG9pbmNyZW1lbnQnKTsNCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICRjcmVhdGVEYXRhW10gPSAkdmFsdWVbMF0gLiAnIGludGVnZXIgTk9UIE5VTEwgREVGQVVMVCBcJycgLiAkdmFsdWVbM10gLiAnXCcnOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGlmICgkdmFsdWVbMV0gPT0gJ2Jvb2xlYW4nKSB7DQogICAgICAgICAgICAgICAgICAgICRjcmVhdGVEYXRhW10gPSAkdmFsdWVbMF0gLiAnIGJpdCBOT1QgTlVMTCBERUZBVUxUIFwnJyAuIChpbnQpICR2YWx1ZVszXSAuICdcJyc7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGlmICgkdmFsdWVbMV0gPT0gJ3N0cmluZycpIHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKCR2YWx1ZVsyXSAhPSAnJykgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0cnBvcygkdmFsdWVbMl0sICdjaGFyJykgIT09IGZhbHNlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNyZWF0ZURhdGFbXSA9ICR2YWx1ZVswXSAuICcgY2hhcignIC4gc3RyX3JlcGxhY2UoJ2NoYXInLCAnJywgJHZhbHVlWzJdKSAuICcpIE5PVCBOVUxMIERFRkFVTFQgXCcnIC4gJHZhbHVlWzNdIC4gJ1wnJzsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZWlmIChpc19pbnQoJHZhbHVlWzJdKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjcmVhdGVEYXRhW10gPSAkdmFsdWVbMF0gLiAnIHZhcmNoYXIoJyAuICR2YWx1ZVsyXSAuICcpIE5PVCBOVUxMIERFRkFVTFQgXCcnIC4gJHZhbHVlWzNdIC4gJ1wnJzsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNyZWF0ZURhdGFbXSA9ICR2YWx1ZVswXSAuICcgdGV4dCBOT1QgTlVMTCBERUZBVUxUIFwnXCcnOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgJGNyZWF0ZURhdGFbXSA9ICR2YWx1ZVswXSAuICcgdGV4dCBOT1QgTlVMTCBERUZBVUxUIFwnXCcnOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGlmICgkdmFsdWVbMV0gPT0gJ2RvdWJsZScgfHwgJHZhbHVlWzFdID09ICdmbG9hdCcpIHsNCiAgICAgICAgICAgICAgICAgICAgJGNyZWF0ZURhdGFbXSA9ICR2YWx1ZVswXSAuICIgJHZhbHVlWzFdIE5PVCBOVUxMIERFRkFVTFQgMCI7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGlmICgkdmFsdWVbMV0gPT0gJ2RhdGUnIHx8ICR2YWx1ZVsxXSA9PSAnZGF0ZXRpbWUnKSB7DQogICAgICAgICAgICAgICAgICAgICRjcmVhdGVEYXRhW10gPSAkdmFsdWVbMF0gLiAiICR2YWx1ZVsxXSBOT1QgTlVMTCI7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGlmICgkdmFsdWVbMV0gPT0gJ3RpbWVzdGFtcCcpIHsNCiAgICAgICAgICAgICAgICAgICAgJGNyZWF0ZURhdGFbXSA9ICR2YWx1ZVswXSAuICIgJHZhbHVlWzFdIE5PVCBOVUxMIERFRkFVTFQgQ1VSUkVOVF9USU1FU1RBTVAiOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAkaSArPSAxOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgJHNxbFtdID0gaW1wbG9kZSgnLCAnLCAkY3JlYXRlRGF0YSk7DQogICAgICAgICAgICAkc3FsW10gPSAnKTsnOw0KICAgICAgICAgICAgJHNxbFtdID0gJ0NSRUFURSBVTklRVUUgSU5ERVggJyAuICR0YWJsZSAuICdfJyAuICRpZG5hbWU7DQogICAgICAgICAgICAkc3FsW10gPSAnIG9uICcgLiAkdGFibGUgLiAnICgnIC4gJGlkbmFtZSAuICcpOyc7DQogICAgICAgICAgICAkc3FsQWxsW10gPSBpbXBsb2RlKCRzcWwsICcgJyk7DQogICAgICAgIH0NCiAgICAgICAgJHRoaXMtPl9zcWwgPSAkc3FsQWxsOw0KICAgIH0NCn0NCg==</file>
	<file name='zb_system\image\filetype\LICENSE' crc32='2BD24886'  dt:dt='bin.base64'>VGhlIE1JVCBMaWNlbnNlIChNSVQpDQoNClBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uDQpmaWxlcyAodGhlICJTb2Z0d2FyZSIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LA0KbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlDQpTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOg0KDQpUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZQ0KU29mdHdhcmUuDQoNClRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCAiQVMgSVMiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFDQpXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1INCkNPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLA0KQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS4NCg==</file>
	<file name='zb_system\image\filetype\README.md' crc32='1A12A48F'  dt:dt='bin.base64'>RnJlZSBJY29uIFNldCBmb3IgZmlsZXMNCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQoNCkEgZnJlZSBpY29uIHNldCB3aXRoIHZlY3RvciBpbWFnZXMgZm9yIHBvcHVsYXIgZXh0ZW5zaW9uczoNCkFBQywgQUksIEFJRkYsIEFWSSwgQywgQ1BQLCBDU1MsIERBVCwgRE1HLCBET0MsIEVYRSwgRkxWLCBHSUYsIEgsIEhQUCwgSFRNTCwNCklDUywgSkFWQSwgSlBHLCBLRVksIE1JRCwgTVAzLCBNUDQsIE1QRywgUERGLCBQSFAsIFBORywgUFBULCBQU0QsIFBZLCBRVCwNClJBUiwgUkIsIFJURiwgU1FMLCBUSUZGLCBUWFQsIFdBViwgWExTLCBYTUwsIFlNTCwgWklQLg0KDQpBbGwgaWNvbnMgYXJlIGFsc28gb2ZmZXJlZCBpbiA1MTJ4NTEycHgsIDQ4eDQ4cHgsIDMyeDMycHguDQoNClRoZXNlIGljb25zIGFyZSBhbiBleHRyYWN0IG9mIFtUZWFtYm94IHByb2plY3QgbWFuYWdlcl0oaHR0cDovL3d3dy50ZWFtYm94LmNvbS8gIlByb2plY3QgTWFuYWdlbWVudCIpLg0KRGVzaWduZWQgZm9yIFRlYW1ib3ggVGVjaG5vbG9naWVzIFMuTC4gKDIwMDkpDQoNClRlYW1ib3ggaXMgYSBjb2xsYWJvcmF0aW9uIHdlYiBhcHBsaWNhdGlvbiBidWlsdCBvbiBSdWJ5IG9uIFJhaWxzLg0KDQpWaXNpdCBbVGVhbWJveCB3ZWJzaXRlXShodHRwOi8vdGVhbWJveC5jb20vICJQcm9qZWN0IE1hbmFnZW1lbnQiKQ0KZm9yIGRvY3VtZW50YXRpb24sIGNvbW11bml0eSBhbmQgc3VwcG9ydDogPGh0dHA6Ly90ZWFtYm94LmNvbS8+DQoNClRlYW1ib3g6IFByb2plY3QgTWFuYWdlbWVudCBhbmQgQ29sbGFib3JhdGlvbiBzb2Z0d2FyZQ0KLS0tLS0tLQ0KDQotIFdlYnNpdGU6IDxodHRwOi8vdGVhbWJveC5jb20vPg0KLSBDb3B5cmlnaHQ6IChjYykgMjAwOSBUZWFtYm94IFRlY2hub2xvZ2llcw0KLSBMaWNlbnNlOiBNSVQgTGljZW5zZQ0KDQpMSUNFTlNFDQotLS0tLS0tDQoNCkNvcHlyaWdodCAoQykgMjAwOS4gVGVhbWJveCBUZWNobm9sb2dpZXMsIFMuTC4NCg0KVGhlIE1JVCBMaWNlbnNlIChNSVQpDQoNClBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkNCm9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlICJTb2Z0d2FyZSIpLCB0byBkZWFsDQppbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzDQp0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsDQpjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMNCmZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6DQoNClRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluDQphbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4NCg0KVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1INCklNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLA0KRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFDQpBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSDQpMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLA0KT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTg0KVEhFIFNPRlRXQVJFLg0K</file>
	<file name='zb_system\script\common.js' crc32='17F3A8D7'  dt:dt='bin.base64'>KGZ1bmN0aW9uKCl7dmFyIGI9IiI7dHJ5e3Rocm93IEVycm9yKCJUcnkgdG8gZ2V0IEphdmFTY3JpcHQgUGF0aCIpO31jYXRjaChkKXtpZihkLnN0YWNrKWI9ZC5zdGFjay5tYXRjaCgvKGF0Lit8XEApKGh0dHAuKz8pXDpcZCtcOlxkKy8pWzJdO2Vsc2V7dmFyIGE9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInNjcmlwdCIpLGM7Zm9yKGMgaW4gYSlhW2NdLnNyYyYmYVtjXS5zcmMubWF0Y2goImNvbW1vbi5qcyQiKSYmKGI9YVtjXS5zcmMpfX1iPWIucmVwbGFjZSgvY29tbW9uXC5qcyQvLCIiKTthPWZ1bmN0aW9uKGEpe2RvY3VtZW50LndyaXRlKCc8c2NyaXB0IHNyYz0iJytiK2ErJyI+XHgzYy9zY3JpcHQ+Jyl9O2EoImpxdWVyeS0xLjguMy5taW4uanMiKTthKCJ6YmxvZ3BocC5qcyIpfSkoKTsNCnZhciBTZXRDb29raWU9ZnVuY3Rpb24oKXtyZXR1cm4gemJwLmNvb2tpZS5zZXQuYXBwbHkobnVsbCxhcmd1bWVudHMpfSxHZXRDb29raWU9ZnVuY3Rpb24oKXtyZXR1cm4gemJwLmNvb2tpZS5nZXQuYXBwbHkobnVsbCxhcmd1bWVudHMpfSxMb2FkUmVtZW1iZXJJbmZvPWZ1bmN0aW9uKCl7emJwLnVzZXJpbmZvLm91dHB1dC5hcHBseShudWxsKTtyZXR1cm4hMX0sU2F2ZVJlbWVtYmVySW5mbz1mdW5jdGlvbigpe3picC51c2VyaW5mby5zYXZlRnJvbUh0bWwuYXBwbHkobnVsbCk7cmV0dXJuITF9LFJldmVydENvbW1lbnQ9ZnVuY3Rpb24oKXt6YnAuY29tbWVudC5yZXBseS5hcHBseShudWxsLGFyZ3VtZW50cyk7cmV0dXJuITF9LEdldENvbW1lbnRzPWZ1bmN0aW9uKCl7emJwLmNvbW1lbnQuZ2V0LmFwcGx5KG51bGwsYXJndW1lbnRzKTtyZXR1cm4hMX0sVmVyaWZ5TWVzc2FnZT1mdW5jdGlvbigpe3picC5jb21tZW50LnBvc3QuYXBwbHkobnVsbCk7cmV0dXJuITF9Ow0K</file>
	<file name='zb_system\script\c_admin_js_add.php' crc32='D5549B06'  dt:dt='bin.base64'></file>
	<file name='zb_system\script\c_html_js_add.php' crc32='DCA8D9C7'  dt:dt='bin.base64'>PD9waHANCi8qKg0KICogWi1CbG9nIHdpdGggUEhQLg0KICoNCiAqIEBhdXRob3INCiAqIEBjb3B5cmlnaHQgKEMpIFJhaW5ib3dTb2Z0IFN0dWRpbw0KICoNCiAqIEB2ZXJzaW9uIDIuMCAyMDEzLTA2LTE0DQogKi8NCnJlcXVpcmUgJy4uL2Z1bmN0aW9uL2Nfc3lzdGVtX2Jhc2UucGhwJzsNCg0Kb2JfY2xlYW4oKTsNCg0KPz4NCnZhciB6YnAgPSBuZXcgWkJQKHsNCiAgICBibG9naG9zdDogIjw/cGhwIGVjaG8gJHpicC0+aG9zdDsgPz4iLA0KICAgIGFqYXh1cmw6ICI8P3BocCBlY2hvICR6YnAtPmFqYXh1cmw7ID8+IiwNCiAgICBjb29raWVwYXRoOiAiPD9waHAgZWNobyAkemJwLT5jb29raWVzcGF0aDsgPz4iLA0KICAgIGxhbmc6IHsNCiAgICAgICAgZXJyb3I6IHsNCiAgICAgICAgICAgIDcyOiAiPD9waHAgZWNobyAkbGFuZ1snZXJyb3InXVsnNzInXTsgPz4iLA0KICAgICAgICAgICAgMjk6ICI8P3BocCBlY2hvICRsYW5nWydlcnJvciddWycyOSddOyA/PiIsDQogICAgICAgICAgICA0NjogIjw/cGhwIGVjaG8gJGxhbmdbJ2Vycm9yJ11bJzQ2J107ID8+Ig0KICAgICAgICB9DQogICAgfQ0KfSk7DQoNCnZhciBibG9naG9zdCA9IHpicC5vcHRpb25zLmJsb2dob3N0Ow0KdmFyIGNvb2tpZXNwYXRoID0gemJwLm9wdGlvbnMuY29va2llcGF0aDsNCnZhciBhamF4dXJsID0gemJwLm9wdGlvbnMuYWpheHVybDsNCnZhciBsYW5nX2NvbW1lbnRfbmFtZV9lcnJvciA9IHpicC5vcHRpb25zLmxhbmcuZXJyb3JbNzJdOw0KdmFyIGxhbmdfY29tbWVudF9lbWFpbF9lcnJvciA9IHpicC5vcHRpb25zLmxhbmcuZXJyb3JbMjldOw0KdmFyIGxhbmdfY29tbWVudF9jb250ZW50X2Vycm9yID0gemJwLm9wdGlvbnMubGFuZy5lcnJvcls0Nl07DQoNCjw/cGhwDQppZiAoIWlzc2V0KCRfR0VUWydwbHVnaW5vbmx5J10pKSB7DQogICAgPz4NCiQoZnVuY3Rpb24gKCkgew0KDQogICAgemJwLmNvb2tpZS5zZXQoInRpbWV6b25lIiwgKG5ldyBEYXRlKCkuZ2V0VGltZXpvbmVPZmZzZXQoKS82MCkqKC0xKSk7DQogICAgdmFyICRjcExvZ2luID0gJCgiLmNwLWxvZ2luIikuZmluZCgiYSIpOw0KICAgIHZhciAkY3BWcnMgPSAkKCIuY3AtdnJzIikuZmluZCgiYSIpOw0KICAgIHZhciAkYWRkaW5mbyA9IHpicC5jb29raWUuZ2V0KCJhZGRpbmZvPD9waHAgZWNobyBzdHJfcmVwbGFjZSgnLycsICcnLCAkemJwLT5jb29raWVzcGF0aCk7ID8+Iik7DQogICAgaWYgKCEkYWRkaW5mbyl7DQogICAgICAgIHJldHVybiA7DQogICAgfQ0KICAgICRhZGRpbmZvID0gSlNPTi5wYXJzZSgkYWRkaW5mbyk7DQoNCiAgICBpZiAoJGFkZGluZm8uY2hrYWRtaW4pew0KICAgICAgICAkKCIuY3AtaGVsbG8iKS5odG1sKCI8P3BocCBlY2hvICR6YnAtPmxhbmdbJ21zZyddWyd3ZWxjb21lJ107ID8+ICIgKyAkYWRkaW5mby51c2VyYWxpYXMgKyAiICgiICsgJGFkZGluZm8ubGV2ZWxuYW1lICArICIpIik7DQogICAgICAgIGlmICgkY3BMb2dpbi5sZW5ndGggPT0gMSAmJiAkY3BMb2dpbi5odG1sKCkuaW5kZXhPZigiWyIpID4gLTEpIHsNCiAgICAgICAgICAgICRjcExvZ2luLmh0bWwoIls8P3BocCBlY2hvICR6YnAtPmxhbmdbJ21zZyddWydhZG1pbiddOyA/Pl0iKTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICRjcExvZ2luLmh0bWwoIjw/cGhwIGVjaG8gJHpicC0+bGFuZ1snbXNnJ11bJ2FkbWluJ107ID8+Iik7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICBpZigkYWRkaW5mby5jaGthcnRpY2xlKXsNCiAgICAgICAgaWYgKCRjcExvZ2luLmxlbmd0aCA9PSAxICYmICRjcFZycy5odG1sKCkuaW5kZXhPZigiWyIpID4gLTEpIHsNCiAgICAgICAgICAgICRjcFZycy5odG1sKCJbPD9waHAgZWNobyAkemJwLT5sYW5nWydtc2cnXVsnbmV3X2FydGljbGUnXTsgPz5dIik7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAkY3BWcnMuaHRtbCgiPD9waHAgZWNobyAkemJwLT5sYW5nWydtc2cnXVsnbmV3X2FydGljbGUnXTsgPz4iKTsNCiAgICAgICAgfQ0KICAgICAgICAkY3BWcnMuYXR0cigiaHJlZiIsIHpicC5vcHRpb25zLmJsb2dob3N0ICsgInpiX3N5c3RlbS9jbWQucGhwP2FjdD1BcnRpY2xlRWR0Iik7DQogICAgfQ0KDQp9KTsNCjw/cGhwDQp9DQpmb3JlYWNoICgkR0xPQkFMU1snaG9va3MnXVsnRmlsdGVyX1BsdWdpbl9IdG1sX0pzX0FkZCddIGFzICRmcG5hbWUgPT4gJiRmcHNpZ25hbCkgew0KICAgICRmcG5hbWUoKTsNCn0NCg0KJHMgPSBvYl9nZXRfY2xlYW4oKTsNCiRtID0gJ1cvJyAuIG1kNSgkcyk7DQoNCmhlYWRlcignQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQ7IGNoYXJzZXQ9dXRmLTgnKTsNCg0KaWYgKCR6YnAtPm9wdGlvblsnWkNfSlNfMzA0X0VOQUJMRSddKSB7DQogICAgaWYgKGlzc2V0KCRfU0VSVkVSWyJIVFRQX0lGX05PTkVfTUFUQ0giXSkgJiYgJF9TRVJWRVJbIkhUVFBfSUZfTk9ORV9NQVRDSCJdID09ICRtKSB7DQogICAgICAgIFNldEh0dHBTdGF0dXNDb2RlKDMwNCk7DQogICAgICAgIGRpZTsNCiAgICB9DQogICAgaGVhZGVyKCdFdGFnOiAnIC4gJG0pOw0KfQ0KDQokemJwLT5DaGVja0d6aXAoKTsNCiR6YnAtPlN0YXJ0R3ppcCgpOw0KDQplY2hvICRzOw0KDQpkaWUoKTsNCj8+DQo=</file>
	<file name='zb_system\script\c_validcode.php' crc32='58CA59C0'  dt:dt='bin.base64'>PD9waHANCi8qKg0KICogWi1CbG9nIHdpdGggUEhQLg0KICoNCiAqIEBhdXRob3INCiAqIEBjb3B5cmlnaHQgKEMpIFJhaW5ib3dTb2Z0IFN0dWRpbw0KICoNCiAqIEB2ZXJzaW9uDQogKi8NCnJlcXVpcmUgJy4uL2Z1bmN0aW9uL2Nfc3lzdGVtX2Jhc2UucGhwJzsNCiR6YnAtPkxvYWQoKTsNCm9iX2NsZWFuKCk7DQoNCiR6YnAtPlNob3dWYWxpZENvZGUoR2V0VmFycygnaWQnLCAnR0VUJykpOw0K</file>
	<file name='zb_system\script\jquery-2.2.4.min.js' crc32='6B11883'  dt:dt='bin.base64'></file>
	<file name='zb_system\script\jquery.tagto.js' crc32='977FB4F5'  dt:dt='bin.base64'>Ly9BdXRob3I6IFJlYWxhenkNCi8vaHR0cDovL3JlYWxhenkub3JnL2Jsb2cvIChjaGluZXNlKQ0KDQpqUXVlcnkuYXJyUmVtb3ZlID0gZnVuY3Rpb24gKGFyciwgcm0pIHsNCiAgICBmb3IgKHZhciBpID0gMCwgbiA9IDA7IGkgPCBhcnIubGVuZ3RoOyArK2kpIHsNCiAgICAgICAgaWYgKGFycltpXSAhPSBybSkgew0KICAgICAgICAgICAgYXJyW24rK10gPSBhcnJbaV07DQogICAgICAgIH0NCiAgICB9DQogICAgYXJyLmxlbmd0aC0tOw0KfQ0KDQovL3VzYWdlOiBqUXVlcnkoZnJvbSkudGFnVG8odGFyZ2V0LCBzZXBlcmF0b3IpDQovL2Zyb20gY29udGFpbiB0aGUgdGFncyh1c2UgYSBsaW5rcyksIHRhcmdldCBtdXN0IGJlIGFzc2lnbmVkIGFuZCBpdHMgdHlwZSBtdXN0IGJlIGlucHV0IHR5cGU9InRleHQiIG9yIHRleHRhcmVhDQovL3NlcGVyYXRvciBjYW4gYmUgIi0iLCAiLCIgYW5kIHNwYWNlIGV0YywgaWYgbm90IGFzc2lnbiwgdGhlIGRlZmF1bHQgc2VwZXJhdG9yIGlzICIsIg0KLy90Y2xhc3MgaXMgdGhlIGNsYXNzIG5hbWUgb2YgdGhlIHRhZyB3aGljaCBpcyBjdXJyZW50bHkgc2VsZWN0ZWQsIGlmIG5vdCBhc3NpZ24sIHRoZSBkZWZhdWx0IGNsYXNzIG5hbWUgaXMgInNlbGVjdGVkIg0KDQpqUXVlcnkuZm4udGFnVG8gPSBmdW5jdGlvbiAodGFyZ2V0LCBzZXBlcmF0b3IsIHRjbGFzcykgew0KICAgIGlmICgic3RyaW5nIiA9PSB0eXBlb2YgdGFyZ2V0KSB7DQogICAgICAgIHRhcmdldCA9IGpRdWVyeSh0YXJnZXQpOw0KICAgIH0NCiAgICBzZXBlcmF0b3IgPSBhcmd1bWVudHNbMV0gfHwgIiwiOw0KICAgIHRjbGFzcyA9IGFyZ3VtZW50c1syXSB8fCAic2VsZWN0ZWQiOw0KDQogICAgdmFyIHRhZ25hbWUgPSB0YXJnZXQuZ2V0KDApLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7DQogICAgaWYgKHRhZ25hbWUgPT0gImlucHV0IiB8fCB0YWduYW1lID09ICJ0ZXh0YXJlYSIpIHsNCiAgICAgICAgalF1ZXJ5KCdhJywgdGhpcykuY2xpY2soZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgaWYgKGpRdWVyeS50cmltKHRhcmdldC52YWwoKSkgPT0gJycpIHsNCiAgICAgICAgICAgICAgICB0YXJnZXQudmFsKGpRdWVyeSh0aGlzKS50ZXh0KCkpOw0KICAgICAgICAgICAgICAgIGpRdWVyeSh0aGlzKS5hZGRDbGFzcyh0Y2xhc3MpOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICB2YXIgYXJyID0gdGFyZ2V0LnZhbCgpLnNwbGl0KHNlcGVyYXRvcik7DQogICAgICAgICAgICAgICAgdmFyIGlzSW5BcnIgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICB2YXIgcG9zaXRpb247DQogICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIG4gPSBhcnIubGVuZ3RoOyBpIDwgbjsgKytpKSB7DQogICAgICAgICAgICAgICAgICAgIGlmIChqUXVlcnkudHJpbShhcnJbaV0pID09IGpRdWVyeSh0aGlzKS50ZXh0KCkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlzSW5BcnIgPSB0cnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb24gPSBpOw0KICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgaWYgKGlzSW5BcnIgPT0gdHJ1ZSkgew0KICAgICAgICAgICAgICAgICAgICBqUXVlcnkuYXJyUmVtb3ZlKGFyciwgYXJyW3Bvc2l0aW9uXSk7DQogICAgICAgICAgICAgICAgICAgIGpRdWVyeSh0aGlzKS5yZW1vdmVDbGFzcyh0Y2xhc3MpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIGFyci5wdXNoKGpRdWVyeSh0aGlzKS50ZXh0KCkpOw0KICAgICAgICAgICAgICAgICAgICBqUXVlcnkodGhpcykuYWRkQ2xhc3ModGNsYXNzKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgdGFyZ2V0LnZhbChhcnIuam9pbihzZXBlcmF0b3IpKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfSk7DQogICAgfSBlbHNlIHsNCiAgICAgICAgdGhyb3cgInRhcmdldCBtdXN0IGJlIGFuIHRleHQgYXJlYSI7DQogICAgfQ0KfQ0KDQo=</file>
	<file name='zb_system\script\md5.js' crc32='7CABC1FA'  dt:dt='bin.base64'></file>
	<file name='zb_system\script\zblogphp.js' crc32='1A1CF179'  dt:dt='bin.base64'></file>
	<file name='zb_system\xml-rpc\index.php' crc32='2679A756'  dt:dt='bin.base64'>PD9waHANCi8qKg0KICogWE1MLVJQQ+aOpeWPoy4NCiAqDQogKiBAY29weXJpZ2h0IChDKSBSYWluYm93U29mdCBTdHVkaW8NCiAqIGh0dHBzOi8vY29kZXgud29yZHByZXNzLm9yZy9YTUwtUlBDX1dvcmRQcmVzc19BUEkNCiAqIGh0dHBzOi8vY29kZXgud29yZHByZXNzLm9yZy9YTUwtUlBDX01ldGFXZWJsb2dfQVBJDQogKiBodHRwOi8vY29kZXgud29yZHByZXNzLm9yZy5jbi9YTUwtUlBDX01ldGFXZWJsb2dfQVBJDQogKi8NCnJlcXVpcmUgJy4uL2Z1bmN0aW9uL2Nfc3lzdGVtX2Jhc2UucGhwJzsNCg0KaWYgKGlzc2V0KCRfR0VUWydyc2QnXSkpIHsNCiAgICBoZWFkZXIoJ0NvbnRlbnQtVHlwZTogdGV4dC94bWw7IGNoYXJzZXQ9VVRGLTgnKTsNCiAgICBlY2hvICc8P3htbCB2ZXJzaW9uPSIxLjAiIGVuY29kaW5nPSJVVEYtOCI/PicgLiAiXG4iOw0KICAgIGVjaG8gJzxyc2QgdmVyc2lvbj0iMS4wIiB4bWxucz0iaHR0cDovL2FyY2hpcGVsYWdvLnBocmFzZXdpc2UuY29tL3JzZCI+JyAuICJcbiI7DQogICAgZWNobyAnICA8c2VydmljZT4nIC4gIlxuIjsNCiAgICBlY2hvICcgICAgPGVuZ2luZU5hbWU+Wi1CbG9nUEhQPC9lbmdpbmVOYW1lPicgLiAiXG4iOw0KICAgIGVjaG8gJyAgICA8ZW5naW5lTGluaz5odHRwOi8vd3d3LnpibG9nY24uY29tLzwvZW5naW5lTGluaz4nIC4gIlxuIjsNCiAgICBlY2hvICcgICAgPGhvbWVQYWdlTGluaz4nIC4gJHpicC0+aG9zdCAuICc8L2hvbWVQYWdlTGluaz4nIC4gIlxuIjsNCiAgICBlY2hvICcgICAgPGFwaXM+JyAuICJcbiI7DQogICAgZWNobyAnICAgICAgPGFwaSBuYW1lPSJXb3JkUHJlc3MiIGJsb2dJRD0iMSIgcHJlZmVycmVkPSJ0cnVlIiBhcGlMaW5rPSInIC4gJHpicC0+eG1scnBjdXJsIC4gJyIgLz4nIC4gIlxuIjsNCiAgICBlY2hvICcgICAgICA8YXBpIG5hbWU9Ik1vdmFibGUgVHlwZSIgYmxvZ0lEPSIxIiBwcmVmZXJyZWQ9ImZhbHNlIiBhcGlMaW5rPSInIC4gJHpicC0+eG1scnBjdXJsIC4gJyIgLz4nIC4gIlxuIjsNCiAgICBlY2hvICcgICAgICA8YXBpIG5hbWU9Ik1ldGFXZWJsb2ciIGJsb2dJRD0iMSIgcHJlZmVycmVkPSJmYWxzZSIgYXBpTGluaz0iJyAuICR6YnAtPnhtbHJwY3VybCAuICciIC8+JyAuICJcbiI7DQogICAgZWNobyAnICAgICAgPGFwaSBuYW1lPSJCbG9nZ2VyIiBibG9nSUQ9IjEiIHByZWZlcnJlZD0iZmFsc2UiIGFwaUxpbms9IicgLiAkemJwLT54bWxycGN1cmwgLiAnIiAvPicgLiAiXG4iOw0KICAgIGVjaG8gJyAgICA8L2FwaXM+JyAuICJcbiI7DQogICAgZWNobyAnICA8L3NlcnZpY2U+JyAuICJcbiI7DQogICAgZWNobyAnPC9yc2Q+JyAuICJcbiI7DQoNCiAgICBkaWUoKTsNCn0NCg0KLyoqDQogKiBYTUwtUlBDIOiOt+WPlueUqOaIt+ermeeCueWfuuacrOS/oeaBry4NCiAqDQogKiDovpPlh7rnlKjmiLfnq5nngrnlnLDlnYAsZ3VpZCznvZHnq5nlkI14bWwNCiAqIGFycmF5DQogKiBzdHJ1Y3QNCiAqIHN0cmluZyBibG9naWQNCiAqIHN0cmluZyB1cmw6IEhvbWVwYWdlIFVSTCBmb3IgdGhpcyBibG9nLg0KICogc3RyaW5nIGJsb2dOYW1lDQogKiBib29sIGlzQWRtaW4NCiAqIHN0cmluZyB4bWxycGM6IFVSTCBlbmRwb2ludCB0byB1c2UgZm9yIFhNTC1SUEMgcmVxdWVzdHMgb24gdGhpcyBibG9nLg0KICovDQpmdW5jdGlvbiB4bWxycGNfZ2V0VXNlcnNCbG9ncygpDQp7DQogICAgZ2xvYmFsICR6YnA7DQoNCiAgICAkc3RyWE1MID0gJzw/eG1sIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9IlVURi04Ij8+PG1ldGhvZFJlc3BvbnNlPjxwYXJhbXM+PHBhcmFtPjx2YWx1ZT48YXJyYXk+PGRhdGE+PHZhbHVlPjxzdHJ1Y3Q+PG1lbWJlcj48bmFtZT51cmw8L25hbWU+PHZhbHVlPjxzdHJpbmc+JCUjMSMlJDwvc3RyaW5nPjwvdmFsdWU+PC9tZW1iZXI+PG1lbWJlcj48bmFtZT5ibG9naWQ8L25hbWU+PHZhbHVlPjxzdHJpbmc+JCUjMiMlJDwvc3RyaW5nPjwvdmFsdWU+PC9tZW1iZXI+PG1lbWJlcj48bmFtZT5ibG9nTmFtZTwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSMzIyUkPC9zdHJpbmc+PC92YWx1ZT48L21lbWJlcj48L3N0cnVjdD48L3ZhbHVlPjwvZGF0YT48L2FycmF5PjwvdmFsdWU+PC9wYXJhbT48L3BhcmFtcz48L21ldGhvZFJlc3BvbnNlPic7DQoNCiAgICAkc3RyWE1MID0gc3RyX3JlcGxhY2UoIiQlIzEjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR6YnAtPmhvc3QpLCAkc3RyWE1MKTsNCiAgICAkc3RyWE1MID0gc3RyX3JlcGxhY2UoIiQlIzIjJSQiLCBodG1sc3BlY2lhbGNoYXJzKG1kNSgkemJwLT5ndWlkIC4gc2hhMSgkemJwLT5wYXRoKSkpLCAkc3RyWE1MKTsNCiAgICAkc3RyWE1MID0gc3RyX3JlcGxhY2UoIiQlIzMjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR6YnAtPm5hbWUpLCAkc3RyWE1MKTsNCg0KICAgIGVjaG8gJHN0clhNTDsNCn0NCi8qDQphcnJheQ0Kc3RydWN0DQpzdHJpbmcgYmxvZ2lkDQpzdHJpbmcgYmxvZ05hbWUNCnN0cmluZyB1cmwNCnN0cmluZyB4bWxycGM6IFhNTC1SUEMgZW5kcG9pbnQgZm9yIHRoZSBibG9nLg0KYm9vbCBpc0FkbWluDQoqLw0KZnVuY3Rpb24geG1scnBjX3dwX2dldFVzZXJzQmxvZ3MoKQ0Kew0KICAgIGdsb2JhbCAkemJwOw0KDQogICAgJHN0clhNTCA9ICc8P3htbCB2ZXJzaW9uPSIxLjAiIGVuY29kaW5nPSJVVEYtOCI/PjxtZXRob2RSZXNwb25zZT48cGFyYW1zPjxwYXJhbT48dmFsdWU+PGFycmF5PjxkYXRhPjx2YWx1ZT48c3RydWN0Pg0KPG1lbWJlcj48bmFtZT5pc0FkbWluPC9uYW1lPjx2YWx1ZT48Ym9vbGVhbj4kJSMxIyUkPC9ib29sZWFuPjwvdmFsdWU+PC9tZW1iZXI+DQo8bWVtYmVyPjxuYW1lPnVybDwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSMyIyUkPC9zdHJpbmc+PC92YWx1ZT48L21lbWJlcj4NCjxtZW1iZXI+PG5hbWU+YmxvZ2lkPC9uYW1lPjx2YWx1ZT48c3RyaW5nPiQlIzMjJSQ8L3N0cmluZz48L3ZhbHVlPjwvbWVtYmVyPg0KPG1lbWJlcj48bmFtZT5ibG9nTmFtZTwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSM0IyUkPC9zdHJpbmc+PC92YWx1ZT48L21lbWJlcj4NCjxtZW1iZXI+PG5hbWU+eG1scnBjPC9uYW1lPjx2YWx1ZT48c3RyaW5nPiQlIzUjJSQ8L3N0cmluZz48L3ZhbHVlPjwvbWVtYmVyPg0KPC9zdHJ1Y3Q+PC92YWx1ZT48L2RhdGE+PC9hcnJheT48L3ZhbHVlPjwvcGFyYW0+PC9wYXJhbXM+PC9tZXRob2RSZXNwb25zZT4nOw0KICAgICRzdHJYTUwgPSBzdHJfcmVwbGFjZSgiJCUjMSMlJCIsICR6YnAtPnVzZXItPkxldmVsID09PSAxLCAkc3RyWE1MKTsNCiAgICAkc3RyWE1MID0gc3RyX3JlcGxhY2UoIiQlIzIjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR6YnAtPmhvc3QpLCAkc3RyWE1MKTsNCiAgICAkc3RyWE1MID0gc3RyX3JlcGxhY2UoIiQlIzMjJSQiLCBodG1sc3BlY2lhbGNoYXJzKG1kNSgkemJwLT5ndWlkIC4gc2hhMSgkemJwLT5wYXRoKSkpLCAkc3RyWE1MKTsNCiAgICAkc3RyWE1MID0gc3RyX3JlcGxhY2UoIiQlIzQjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR6YnAtPm5hbWUpLCAkc3RyWE1MKTsNCiAgICAkc3RyWE1MID0gc3RyX3JlcGxhY2UoIiQlIzUjJSQiLCAkemJwLT5ob3N0IC4gJ3piX3N5c3RlbS94bWwtcnBjL2luZGV4LnBocCcsICRzdHJYTUwpOw0KICAgIGVjaG8gJHN0clhNTDsNCn0NCg0KLyoqDQogKiBYTUwtUlBDIOiOt+WPluWIhuexu+WIl+ihqC4NCiAqDQogKiDovpPlh7rliIbnsbvliJfooah4bWwNCiAqIHdwLmdldENhdGVnb3JpZXMNCiAqIGFycmF5DQogKiBzdHJ1Y3QNCiAqIHN0cmluZyBjYXRlZ29yeUlkDQogKiBzdHJpbmcgcGFyZW50SWQNCiAqIHN0cmluZyBjYXRlZ29yeU5hbWUNCiAqIHN0cmluZyBjYXRlZ29yeURlc2NyaXB0aW9uDQogKiBzdHJpbmcgZGVzY3JpcHRpb246IE5hbWUgb2YgdGhlIGNhdGVnb3J5LCBlcXVpdmFsZW50IHRvIGNhdGVnb3J5TmFtZS4NCiAqIHN0cmluZyBodG1sVXJsDQogKiBzdHJpbmcgcnNzVXJsDQogKi8NCmZ1bmN0aW9uIHhtbHJwY19nZXRDYXRlZ29yaWVzKCkNCnsNCiAgICBnbG9iYWwgJHpicDsNCg0KICAgICRzdHJYTUwgPSAnPG1ldGhvZFJlc3BvbnNlPjxwYXJhbXM+PHBhcmFtPjx2YWx1ZT48YXJyYXk+PGRhdGE+JCUjMSMlJDwvZGF0YT48L2FycmF5PjwvdmFsdWU+PC9wYXJhbT48L3BhcmFtcz48L21ldGhvZFJlc3BvbnNlPic7DQogICAgJHN0clNpbmdsZSA9ICc8dmFsdWU+PHN0cnVjdD4NCjxtZW1iZXI+PG5hbWU+Y2F0ZWdvcnlJZDwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSMxIyUkPC9zdHJpbmc+PC92YWx1ZT48L21lbWJlcj4NCjxtZW1iZXI+PG5hbWU+cGFyZW50SWQ8L25hbWU+PHZhbHVlPjxzdHJpbmc+JCUjMiMlJDwvc3RyaW5nPjwvdmFsdWU+PC9tZW1iZXI+DQo8bWVtYmVyPjxuYW1lPmNhdGVnb3J5TmFtZTwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSMzIyUkPC9zdHJpbmc+PC92YWx1ZT48L21lbWJlcj4NCjxtZW1iZXI+PG5hbWU+ZGVzY3JpcHRpb248L25hbWU+PHZhbHVlPjxzdHJpbmc+JCUjNCMlJDwvc3RyaW5nPjwvdmFsdWU+PC9tZW1iZXI+DQo8bWVtYmVyPjxuYW1lPmh0dHBVcmw8L25hbWU+PHZhbHVlPjxzdHJpbmc+JCUjNSMlJDwvc3RyaW5nPjwvdmFsdWU+PC9tZW1iZXI+DQo8bWVtYmVyPjxuYW1lPmNhdGVnb3J5RGVzY3JpcHRpb248L25hbWU+PHZhbHVlPjxzdHJpbmc+JCUjNiMlJDwvc3RyaW5nPjwvdmFsdWU+PC9tZW1iZXI+DQo8L3N0cnVjdD48L3ZhbHVlPic7DQoNCiAgICAkc3RyQWxsID0gJyc7DQoNCiAgICBmb3JlYWNoICgkemJwLT5jYXRlZ29yaWVzYnlvcmRlciBhcyAka2V5ID0+ICR2YWx1ZSkgew0KICAgICAgICAkcyA9ICRzdHJTaW5nbGU7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzEjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+SUQpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzIjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+UGFyZW50SUQpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzMjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+TmFtZSksICRzKTsNCiAgICAgICAgJHMgPSBzdHJfcmVwbGFjZSgiJCUjNCMlJCIsIGh0bWxzcGVjaWFsY2hhcnMoJHZhbHVlLT5JbnRybyksICRzKTsNCiAgICAgICAgJHMgPSBzdHJfcmVwbGFjZSgiJCUjNSMlJCIsIGh0bWxzcGVjaWFsY2hhcnMoJHZhbHVlLT5VcmwpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzYjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+TmFtZSksICRzKTsNCg0KICAgICAgICAkc3RyQWxsIC49ICRzOw0KICAgIH0NCg0KICAgICRzdHJYTUwgPSBzdHJfcmVwbGFjZSgiJCUjMSMlJCIsICRzdHJBbGwsICRzdHJYTUwpOw0KICAgIGVjaG8gJHN0clhNTDsNCn0NCg0KLyoqDQogKiBYTUwtUlBDIOiOt+WPluagh+etvuWIl+ihqC4NCiAqDQogKiDovpPlh7rmoIfnrb7liJfooah4bWwNCiAqIHdwLmdldFRhZ3MNCiAqIGFycmF5DQogKiBzdHJ1Y3QNCiAqIGludCB0YWdfaWQNCiAqIHN0cmluZyBuYW1lDQogKiBzdHJpbmcgc2x1Zw0KICogaW50IGNvdW50DQogKiBzdHJpbmcgaHRtbF91cmwNCiAqIHN0cmluZyByc3NfdXJsDQogKi8NCmZ1bmN0aW9uIHhtbHJwY19nZXRUYWdzKCkNCnsNCiAgICBnbG9iYWwgJHpicDsNCg0KICAgICRzdHJYTUwgPSAnPG1ldGhvZFJlc3BvbnNlPjxwYXJhbXM+PHBhcmFtPjx2YWx1ZT48YXJyYXk+PGRhdGE+JCUjMSMlJDwvZGF0YT48L2FycmF5PjwvdmFsdWU+PC9wYXJhbT48L3BhcmFtcz48L21ldGhvZFJlc3BvbnNlPic7DQogICAgJHN0clNpbmdsZSA9ICc8dmFsdWU+PHN0cnVjdD4NCjxtZW1iZXI+PG5hbWU+dGFnX2lkPC9uYW1lPjx2YWx1ZT48c3RyaW5nPiQlIzEjJSQ8L3N0cmluZz48L3ZhbHVlPjwvbWVtYmVyPg0KPG1lbWJlcj48bmFtZT5uYW1lPC9uYW1lPjx2YWx1ZT48c3RyaW5nPiQlIzIjJSQ8L3N0cmluZz48L3ZhbHVlPjwvbWVtYmVyPg0KPG1lbWJlcj48bmFtZT5jb3VudDwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSMzIyUkPC9zdHJpbmc+PC92YWx1ZT48L21lbWJlcj4NCjxtZW1iZXI+PG5hbWU+c2x1ZzwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSM0IyUkPC9zdHJpbmc+PC92YWx1ZT48L21lbWJlcj4NCjxtZW1iZXI+PG5hbWU+aHRtbF91cmw8L25hbWU+PHZhbHVlPjxzdHJpbmc+JCUjNSMlJDwvc3RyaW5nPjwvdmFsdWU+PC9tZW1iZXI+DQo8bWVtYmVyPjxuYW1lPnJzc191cmw8L25hbWU+PHZhbHVlPjxzdHJpbmc+JCUjNiMlJDwvc3RyaW5nPjwvdmFsdWU+PC9tZW1iZXI+DQo8L3N0cnVjdD48L3ZhbHVlPic7DQoNCiAgICAkc3RyQWxsID0gJyc7DQoNCiAgICAkYXJyYXkgPSAkemJwLT5HZXRUYWdMaXN0KA0KICAgICAgICAnJywNCiAgICAgICAgJycsDQogICAgICAgIGFycmF5KCd0YWdfQ291bnQnID0+ICdERVNDJywgJ3RhZ19JRCcgPT4gJ0FTQycpLA0KICAgICAgICBhcnJheSg1MCksDQogICAgICAgICcnDQogICAgKTsNCg0KICAgIGZvcmVhY2ggKCRhcnJheSBhcyAka2V5ID0+ICR2YWx1ZSkgew0KICAgICAgICAkcyA9ICRzdHJTaW5nbGU7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzEjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+SUQpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzIjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+TmFtZSksICRzKTsNCiAgICAgICAgJHMgPSBzdHJfcmVwbGFjZSgiJCUjMyMlJCIsIGh0bWxzcGVjaWFsY2hhcnMoJHZhbHVlLT5Db3VudCksICRzKTsNCiAgICAgICAgJHMgPSBzdHJfcmVwbGFjZSgiJCUjNCMlJCIsIGh0bWxzcGVjaWFsY2hhcnMoJHZhbHVlLT5VcmwpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzUjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+VXJsKSwgJHMpOw0KICAgICAgICAkcyA9IHN0cl9yZXBsYWNlKCIkJSM2IyUkIiwgaHRtbHNwZWNpYWxjaGFycygkdmFsdWUtPlVybCksICRzKTsNCg0KICAgICAgICAkc3RyQWxsIC49ICRzOw0KICAgIH0NCg0KICAgICRzdHJYTUwgPSBzdHJfcmVwbGFjZSgiJCUjMSMlJCIsICRzdHJBbGwsICRzdHJYTUwpOw0KICAgIGVjaG8gJHN0clhNTDsNCn0NCg0KLyoqDQogKiBYTUwtUlBDIOiOt+WPlueUqOaIt+WIl+ihqC4NCiAqDQogKiDovpPlh7rnlKjmiLfliJfooah4bWwNCiAqIHdwLmdldEF1dGhvcnMNCiAqIGFycmF5DQogKiBzdHJ1Y3QNCiAqIHN0cmluZyB1c2VyX2lkDQogKiBzdHJpbmcgdXNlcl9sb2dpbg0KICogc3RyaW5nIGRpc3BsYXlfbmFtZQ0KICovDQpmdW5jdGlvbiB4bWxycGNfZ2V0QXV0aG9ycygpDQp7DQogICAgZ2xvYmFsICR6YnA7DQoNCiAgICAkc3RyWE1MID0gJzxtZXRob2RSZXNwb25zZT48cGFyYW1zPjxwYXJhbT48dmFsdWU+PGFycmF5PjxkYXRhPiQlIzEjJSQ8L2RhdGE+PC9hcnJheT48L3ZhbHVlPjwvcGFyYW0+PC9wYXJhbXM+PC9tZXRob2RSZXNwb25zZT4nOw0KICAgICRzdHJTaW5nbGUgPSAnPHZhbHVlPjxzdHJ1Y3Q+DQo8bWVtYmVyPjxuYW1lPnVzZXJfaWQ8L25hbWU+PHZhbHVlPjxzdHJpbmc+JCUjMSMlJDwvc3RyaW5nPjwvdmFsdWU+PC9tZW1iZXI+DQo8bWVtYmVyPjxuYW1lPnVzZXJfbG9naW48L25hbWU+PHZhbHVlPjxzdHJpbmc+JCUjMiMlJDwvc3RyaW5nPjwvdmFsdWU+PC9tZW1iZXI+DQo8bWVtYmVyPjxuYW1lPmRpc3BsYXlfbmFtZTwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSMzIyUkPC9zdHJpbmc+PC92YWx1ZT48L21lbWJlcj4NCjwvc3RydWN0PjwvdmFsdWU+JzsNCg0KICAgICRzdHJBbGwgPSAnJzsNCg0KICAgIGZvcmVhY2ggKCR6YnAtPm1lbWJlcnMgYXMgJGtleSA9PiAkdmFsdWUpIHsNCiAgICAgICAgJHMgPSAkc3RyU2luZ2xlOw0KICAgICAgICAkcyA9IHN0cl9yZXBsYWNlKCIkJSMxIyUkIiwgaHRtbHNwZWNpYWxjaGFycygkdmFsdWUtPklEKSwgJHMpOw0KICAgICAgICAkcyA9IHN0cl9yZXBsYWNlKCIkJSMyIyUkIiwgaHRtbHNwZWNpYWxjaGFycygkdmFsdWUtPk5hbWUpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzMjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+QWxpYXMpLCAkcyk7DQogICAgICAgICRzdHJBbGwgLj0gJHM7DQogICAgfQ0KDQogICAgJHN0clhNTCA9IHN0cl9yZXBsYWNlKCIkJSMxIyUkIiwgJHN0ckFsbCwgJHN0clhNTCk7DQogICAgZWNobyAkc3RyWE1MOw0KfQ0KDQovKioNCiAqIFhNTC1SUEMg6I635Y+W5oyH5a6a55So5oi35Yib5bu655qE6aG16Z2iLg0KICoNCiAqIOi+k+WHuumhtemdouWIl+ihqHhtbA0KICoNCiAqIEBwYXJhbSBpbnQgJG4g55So5oi3SUQNCiAqLw0KZnVuY3Rpb24geG1scnBjX2dldFBhZ2VzKCRuKQ0Kew0KICAgIGdsb2JhbCAkemJwOw0KDQogICAgJHN0clhNTCA9ICc8bWV0aG9kUmVzcG9uc2U+PHBhcmFtcz48cGFyYW0+PHZhbHVlPjxhcnJheT48ZGF0YT4kJSMxIyUkPC9kYXRhPjwvYXJyYXk+PC92YWx1ZT48L3BhcmFtPjwvcGFyYW1zPjwvbWV0aG9kUmVzcG9uc2U+JzsNCiAgICAkc3RyU2luZ2xlID0gJzx2YWx1ZT48c3RydWN0Pg0KPG1lbWJlcj48bmFtZT5kYXRlQ3JlYXRlZDwvbmFtZT48dmFsdWU+PGRhdGVUaW1lLmlzbzg2MDE+JCUjMSMlJDwvZGF0ZVRpbWUuaXNvODYwMT48L3ZhbHVlPjwvbWVtYmVyPg0KPG1lbWJlcj48bmFtZT51c2VyaWQ8L25hbWU+PHZhbHVlPjxzdHJpbmc+JCUjMiMlJDwvc3RyaW5nPjwvdmFsdWU+PC9tZW1iZXI+DQo8bWVtYmVyPjxuYW1lPnBhZ2VfaWQ8L25hbWU+PHZhbHVlPjxpbnQ+JCUjMyMlJDwvaW50PjwvdmFsdWU+PC9tZW1iZXI+DQo8bWVtYmVyPjxuYW1lPnBhZ2Vfc3RhdHVzPC9uYW1lPjx2YWx1ZT48c3RyaW5nPiQlIzQjJSQ8L3N0cmluZz48L3ZhbHVlPjwvbWVtYmVyPg0KPG1lbWJlcj48bmFtZT5kZXNjcmlwdGlvbjwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSM1IyUkPC9zdHJpbmc+PC92YWx1ZT48L21lbWJlcj4NCjxtZW1iZXI+PG5hbWU+dGl0bGU8L25hbWU+PHZhbHVlPjxzdHJpbmc+JCUjNiMlJDwvc3RyaW5nPjwvdmFsdWU+PC9tZW1iZXI+DQo8bWVtYmVyPjxuYW1lPmxpbms8L25hbWU+PHZhbHVlPjxzdHJpbmc+JCUjNyMlJDwvc3RyaW5nPjwvdmFsdWU+PC9tZW1iZXI+DQo8bWVtYmVyPjxuYW1lPnBlcm1hTGluazwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSM4IyUkPC9zdHJpbmc+PC92YWx1ZT48L21lbWJlcj4NCjxtZW1iZXI+PG5hbWU+bXRfYWxsb3dfY29tbWVudHM8L25hbWU+PHZhbHVlPjxpbnQ+JCUjOSMlJDwvaW50PjwvdmFsdWU+PC9tZW1iZXI+DQo8bWVtYmVyPjxuYW1lPndwX3NsdWc8L25hbWU+PHZhbHVlPjxzdHJpbmc+JCUjMTAjJSQ8L3N0cmluZz48L3ZhbHVlPjwvbWVtYmVyPg0KPC9zdHJ1Y3Q+PC92YWx1ZT4nOw0KDQogICAgJHN0ckFsbCA9ICcnOw0KDQogICAgJHcgPSBhcnJheSgpOw0KICAgIGlmICghJHpicC0+Q2hlY2tSaWdodHMoJ1BhZ2VBbGwnKSkgew0KICAgICAgICAkd1tdID0gYXJyYXkoJz0nLCAnbG9nX0F1dGhvcklEJywgJHpicC0+dXNlci0+SUQpOw0KICAgIH0NCg0KICAgICRhcnJheSA9ICR6YnAtPkdldFBhZ2VMaXN0KA0KICAgICAgICAnJywNCiAgICAgICAgJHcsDQogICAgICAgIGFycmF5KCdsb2dfUG9zdFRpbWUnID0+ICdERVNDJyksDQogICAgICAgIGFycmF5KCRuKSwNCiAgICAgICAgJycNCiAgICApOw0KDQogICAgZm9yZWFjaCAoJGFycmF5IGFzICRrZXkgPT4gJHZhbHVlKSB7DQogICAgICAgICRzID0gJHN0clNpbmdsZTsNCiAgICAgICAgJHMgPSBzdHJfcmVwbGFjZSgiJCUjMSMlJCIsIGh0bWxzcGVjaWFsY2hhcnMoJHZhbHVlLT5UaW1lKCdjJykpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzIjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+QXV0aG9ySUQpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzMjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+SUQpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzQjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+U3RhdHVzID09IDAgPyAncHVibGlzaCcgOiAnZHJhZnQnKSwgJHMpOw0KICAgICAgICAkcyA9IHN0cl9yZXBsYWNlKCIkJSM1IyUkIiwgaHRtbHNwZWNpYWxjaGFycygkdmFsdWUtPkNvbnRlbnQpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzYjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+VGl0bGUpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzcjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+VXJsKSwgJHMpOw0KICAgICAgICAkcyA9IHN0cl9yZXBsYWNlKCIkJSM4IyUkIiwgaHRtbHNwZWNpYWxjaGFycygkdmFsdWUtPlVybCksICRzKTsNCiAgICAgICAgJHMgPSBzdHJfcmVwbGFjZSgiJCUjOSMlJCIsIGh0bWxzcGVjaWFsY2hhcnMoJHZhbHVlLT5Jc0xvY2sgPyAnMicgOiAnMScpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzEwIyUkIiwgaHRtbHNwZWNpYWxjaGFycygkdmFsdWUtPkFsaWFzKSwgJHMpOw0KDQogICAgICAgICRzdHJBbGwgLj0gJHM7DQogICAgfQ0KDQogICAgJHN0clhNTCA9IHN0cl9yZXBsYWNlKCIkJSMxIyUkIiwgJHN0ckFsbCwgJHN0clhNTCk7DQogICAgZWNobyAkc3RyWE1MOw0KfQ0KDQovKioNCiAqIFhNTC1SUEMg6I635Y+W5oyH5a6aSUTpobXpnaIuDQogKg0KICog6L6T5Ye66aG16Z2i5YiX6KGoeG1sDQogKg0KICogQHBhcmFtIGludCAkaWQg6aG16Z2iSUQNCiAqLw0KZnVuY3Rpb24geG1scnBjX2dldFBhZ2UoJGlkKQ0Kew0KICAgIGdsb2JhbCAkemJwOw0KDQogICAgJHN0clhNTCA9ICc8bWV0aG9kUmVzcG9uc2U+PHBhcmFtcz48cGFyYW0+JCUjMSMlJDwvcGFyYW0+PC9wYXJhbXM+PC9tZXRob2RSZXNwb25zZT4nOw0KICAgICRzdHJTaW5nbGUgPSAnPHZhbHVlPjxzdHJ1Y3Q+DQo8bWVtYmVyPjxuYW1lPmRhdGVDcmVhdGVkPC9uYW1lPjx2YWx1ZT48ZGF0ZVRpbWUuaXNvODYwMT4kJSMxIyUkPC9kYXRlVGltZS5pc284NjAxPjwvdmFsdWU+PC9tZW1iZXI+DQo8bWVtYmVyPjxuYW1lPnVzZXJpZDwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSMyIyUkPC9zdHJpbmc+PC92YWx1ZT48L21lbWJlcj4NCjxtZW1iZXI+PG5hbWU+cGFnZV9pZDwvbmFtZT48dmFsdWU+PGludD4kJSMzIyUkPC9pbnQ+PC92YWx1ZT48L21lbWJlcj4NCjxtZW1iZXI+PG5hbWU+cGFnZV9zdGF0dXM8L25hbWU+PHZhbHVlPjxzdHJpbmc+JCUjNCMlJDwvc3RyaW5nPjwvdmFsdWU+PC9tZW1iZXI+DQo8bWVtYmVyPjxuYW1lPmRlc2NyaXB0aW9uPC9uYW1lPjx2YWx1ZT48c3RyaW5nPiQlIzUjJSQ8L3N0cmluZz48L3ZhbHVlPjwvbWVtYmVyPg0KPG1lbWJlcj48bmFtZT50aXRsZTwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSM2IyUkPC9zdHJpbmc+PC92YWx1ZT48L21lbWJlcj4NCjxtZW1iZXI+PG5hbWU+bGluazwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSM3IyUkPC9zdHJpbmc+PC92YWx1ZT48L21lbWJlcj4NCjxtZW1iZXI+PG5hbWU+cGVybWFMaW5rPC9uYW1lPjx2YWx1ZT48c3RyaW5nPiQlIzgjJSQ8L3N0cmluZz48L3ZhbHVlPjwvbWVtYmVyPg0KPG1lbWJlcj48bmFtZT5tdF9hbGxvd19jb21tZW50czwvbmFtZT48dmFsdWU+PGludD4kJSM5IyUkPC9pbnQ+PC92YWx1ZT48L21lbWJlcj4NCjxtZW1iZXI+PG5hbWU+d3Bfc2x1ZzwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSMxMCMlJDwvc3RyaW5nPjwvdmFsdWU+PC9tZW1iZXI+DQo8L3N0cnVjdD48L3ZhbHVlPic7DQoNCiAgICAkc3RyQWxsID0gJyc7DQoNCiAgICAkYXJ0aWNsZSA9IG5ldyBQb3N0KCk7DQogICAgJGFydGljbGUtPkxvYWRJbmZvQnlJRCgkaWQpOw0KICAgIGlmICgoJGFydGljbGUtPkF1dGhvcklEICE9ICR6YnAtPnVzZXItPklEKSAmJiAoISR6YnAtPkNoZWNrUmlnaHRzKCdQYWdlQWxsJykpKSB7DQogICAgICAgIHhtbHJwY19TaG93RXJyb3IoMTEsIF9fRklMRV9fLCBfX0xJTkVfXyk7DQogICAgfQ0KDQogICAgJGFycmF5ID0gYXJyYXkoKTsNCiAgICAkYXJyYXlbXSA9ICRhcnRpY2xlOw0KDQogICAgZm9yZWFjaCAoJGFycmF5IGFzICRrZXkgPT4gJHZhbHVlKSB7DQogICAgICAgICRzID0gJHN0clNpbmdsZTsNCiAgICAgICAgJHMgPSBzdHJfcmVwbGFjZSgiJCUjMSMlJCIsIGh0bWxzcGVjaWFsY2hhcnMoJHZhbHVlLT5UaW1lKCdjJykpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzIjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+QXV0aG9ySUQpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzMjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+SUQpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzQjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+U3RhdHVzID09IDAgPyAncHVibGlzaCcgOiAnZHJhZnQnKSwgJHMpOw0KICAgICAgICAkcyA9IHN0cl9yZXBsYWNlKCIkJSM1IyUkIiwgaHRtbHNwZWNpYWxjaGFycygkdmFsdWUtPkNvbnRlbnQpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzYjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+VGl0bGUpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzcjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+VXJsKSwgJHMpOw0KICAgICAgICAkcyA9IHN0cl9yZXBsYWNlKCIkJSM4IyUkIiwgaHRtbHNwZWNpYWxjaGFycygkdmFsdWUtPlVybCksICRzKTsNCiAgICAgICAgJHMgPSBzdHJfcmVwbGFjZSgiJCUjOSMlJCIsIGh0bWxzcGVjaWFsY2hhcnMoJHZhbHVlLT5Jc0xvY2sgPyAnMicgOiAnMScpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzEwIyUkIiwgaHRtbHNwZWNpYWxjaGFycygkdmFsdWUtPkFsaWFzKSwgJHMpOw0KDQogICAgICAgICRzdHJBbGwgLj0gJHM7DQogICAgfQ0KDQogICAgJHN0clhNTCA9IHN0cl9yZXBsYWNlKCIkJSMxIyUkIiwgJHN0ckFsbCwgJHN0clhNTCk7DQogICAgZWNobyAkc3RyWE1MOw0KfQ0KDQovKioNCiAqIFhNTC1SUEMg6I635Y+W5oyH5a6a55So5oi35pyA5paw5paH56ug5YiX6KGoLg0KICoNCiAqIOi+k+WHuuaWh+eroOWIl+ihqHhtbA0KICoNCiAqIEBwYXJhbSBpbnQgJG4g55So5oi3SUQNCiAqLw0KZnVuY3Rpb24geG1scnBjX2dldFJlY2VudFBvc3RzKCRuKQ0Kew0KICAgIGdsb2JhbCAkemJwOw0KDQogICAgJHN0clhNTCA9ICc8bWV0aG9kUmVzcG9uc2U+PHBhcmFtcz48cGFyYW0+PHZhbHVlPjxhcnJheT48ZGF0YT4kJSMxIyUkPC9kYXRhPjwvYXJyYXk+PC92YWx1ZT48L3BhcmFtPjwvcGFyYW1zPjwvbWV0aG9kUmVzcG9uc2U+JzsNCiAgICAkc3RyU2luZ2xlID0gJzx2YWx1ZT48c3RydWN0Pg0KPG1lbWJlcj48bmFtZT50aXRsZTwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSMxIyUkPC9zdHJpbmc+PC92YWx1ZT48L21lbWJlcj4NCjxtZW1iZXI+PG5hbWU+ZGVzY3JpcHRpb248L25hbWU+PHZhbHVlPjxzdHJpbmc+JCUjMiMlJDwvc3RyaW5nPjwvdmFsdWU+PC9tZW1iZXI+DQo8bWVtYmVyPjxuYW1lPmRhdGVDcmVhdGVkPC9uYW1lPjx2YWx1ZT48ZGF0ZVRpbWUuaXNvODYwMT4kJSMzIyUkPC9kYXRlVGltZS5pc284NjAxPjwvdmFsdWU+PC9tZW1iZXI+DQo8bWVtYmVyPjxuYW1lPmNhdGVnb3JpZXM8L25hbWU+PHZhbHVlPjxhcnJheT48ZGF0YT48dmFsdWU+PHN0cmluZz4kJSM0IyUkPC9zdHJpbmc+PC92YWx1ZT48L2RhdGE+PC9hcnJheT48L3ZhbHVlPjwvbWVtYmVyPg0KPG1lbWJlcj48bmFtZT5wb3N0aWQ8L25hbWU+PHZhbHVlPjxzdHJpbmc+JCUjNSMlJDwvc3RyaW5nPjwvdmFsdWU+PC9tZW1iZXI+DQo8bWVtYmVyPjxuYW1lPnVzZXJpZDwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSM2IyUkPC9zdHJpbmc+PC92YWx1ZT48L21lbWJlcj4NCjxtZW1iZXI+PG5hbWU+bGluazwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSM3IyUkPC9zdHJpbmc+PC92YWx1ZT48L21lbWJlcj4NCjxtZW1iZXI+PG5hbWU+cGVybWFMaW5rPC9uYW1lPjx2YWx1ZT48c3RyaW5nPiQlIzgjJSQ8L3N0cmluZz48L3ZhbHVlPjwvbWVtYmVyPg0KPG1lbWJlcj48bmFtZT5tdF9rZXl3b3JkczwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSM5IyUkPC9zdHJpbmc+PC92YWx1ZT48L21lbWJlcj4NCjxtZW1iZXI+PG5hbWU+d3Bfc2x1ZzwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSMxMCMlJDwvc3RyaW5nPjwvdmFsdWU+PC9tZW1iZXI+DQo8bWVtYmVyPjxuYW1lPm10X2V4Y2VycHQ8L25hbWU+PHZhbHVlPjxzdHJpbmc+JCUjMTEjJSQ8L3N0cmluZz48L3ZhbHVlPjwvbWVtYmVyPg0KPG1lbWJlcj48bmFtZT5tdF90ZXh0X21vcmU8L25hbWU+PHZhbHVlPjxzdHJpbmc+JCUjMTIjJSQ8L3N0cmluZz48L3ZhbHVlPjwvbWVtYmVyPg0KPG1lbWJlcj48bmFtZT5tdF9iYXNuYW1lPC9uYW1lPjx2YWx1ZT48c3RyaW5nPiQlIzEzIyUkPC9zdHJpbmc+PC92YWx1ZT48L21lbWJlcj4NCjxtZW1iZXI+PG5hbWU+bXRfYWxsb3dfY29tbWVudHM8L25hbWU+PHZhbHVlPjxpbnQ+JCUjMTQjJSQ8L2ludD48L3ZhbHVlPjwvbWVtYmVyPg0KPG1lbWJlcj48bmFtZT5wYWdlX3N0YXR1czwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSMxNSMlJDwvc3RyaW5nPjwvdmFsdWU+PC9tZW1iZXI+DQo8L3N0cnVjdD48L3ZhbHVlPic7DQoNCiAgICAkc3RyQWxsID0gJyc7DQoNCiAgICAkdyA9IGFycmF5KCk7DQogICAgaWYgKCEkemJwLT5DaGVja1JpZ2h0cygnQXJ0aWNsZUFsbCcpKSB7DQogICAgICAgICR3W10gPSBhcnJheSgnPScsICdsb2dfQXV0aG9ySUQnLCAkemJwLT51c2VyLT5JRCk7DQogICAgfQ0KDQogICAgJGFycmF5ID0gJHpicC0+R2V0QXJ0aWNsZUxpc3QoDQogICAgICAgICcnLA0KICAgICAgICAkdywNCiAgICAgICAgYXJyYXkoJ2xvZ19Qb3N0VGltZScgPT4gJ0RFU0MnKSwNCiAgICAgICAgYXJyYXkoJG4pLA0KICAgICAgICAnJw0KICAgICk7DQoNCiAgICBmb3JlYWNoICgkYXJyYXkgYXMgJGtleSA9PiAkdmFsdWUpIHsNCiAgICAgICAgJHMgPSAkc3RyU2luZ2xlOw0KICAgICAgICAkZGVzY3JpcHRpb24gPSAnJzsNCiAgICAgICAgJG10X2V4Y2VycHQgPSAnJzsNCiAgICAgICAgJG10X3RleHRfbW9yZSA9ICcnOw0KICAgICAgICBpZiAoc3RycG9zKCR2YWx1ZS0+Q29udGVudCwgJzwhLS1tb3JlLS0+JykgIT09IGZhbHNlKSB7DQogICAgICAgICAgICAkZGVzY3JpcHRpb24gPSBHZXRWYWx1ZUluQXJyYXkoZXhwbG9kZSgnPCEtLW1vcmUtLT4nLCAkdmFsdWUtPkNvbnRlbnQpLCAxKTsNCiAgICAgICAgICAgICRtdF90ZXh0X21vcmUgPSBHZXRWYWx1ZUluQXJyYXkoZXhwbG9kZSgnPCEtLW1vcmUtLT4nLCAkdmFsdWUtPkNvbnRlbnQpLCAwKTsNCiAgICAgICAgLy8kZGVzY3JpcHRpb249JHZhbHVlLT5Db250ZW50Ow0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgJGRlc2NyaXB0aW9uID0gJHZhbHVlLT5Db250ZW50Ow0KICAgICAgICAgICAgJG10X2V4Y2VycHQgPSAkdmFsdWUtPkludHJvOw0KICAgICAgICB9DQoNCiAgICAgICAgJHMgPSBzdHJfcmVwbGFjZSgiJCUjMSMlJCIsIGh0bWxzcGVjaWFsY2hhcnMoJHZhbHVlLT5UaXRsZSksICRzKTsNCiAgICAgICAgJHMgPSBzdHJfcmVwbGFjZSgiJCUjMiMlJCIsIGh0bWxzcGVjaWFsY2hhcnMoJGRlc2NyaXB0aW9uKSwgJHMpOw0KICAgICAgICAkcyA9IHN0cl9yZXBsYWNlKCIkJSMzIyUkIiwgaHRtbHNwZWNpYWxjaGFycygkdmFsdWUtPlRpbWUoJ2MnKSksICRzKTsNCiAgICAgICAgJHMgPSBzdHJfcmVwbGFjZSgiJCUjNCMlJCIsIGh0bWxzcGVjaWFsY2hhcnMoJHZhbHVlLT5DYXRlZ29yeS0+TmFtZSksICRzKTsNCiAgICAgICAgJHMgPSBzdHJfcmVwbGFjZSgiJCUjNSMlJCIsIGh0bWxzcGVjaWFsY2hhcnMoJHZhbHVlLT5JRCksICRzKTsNCiAgICAgICAgJHMgPSBzdHJfcmVwbGFjZSgiJCUjNiMlJCIsIGh0bWxzcGVjaWFsY2hhcnMoJHZhbHVlLT5BdXRob3JJRCksICRzKTsNCiAgICAgICAgJHMgPSBzdHJfcmVwbGFjZSgiJCUjNyMlJCIsIGh0bWxzcGVjaWFsY2hhcnMoJHZhbHVlLT5VcmwpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzgjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+VXJsKSwgJHMpOw0KICAgICAgICAkcyA9IHN0cl9yZXBsYWNlKCIkJSM5IyUkIiwgaHRtbHNwZWNpYWxjaGFycygkdmFsdWUtPlRhZ3NUb05hbWVTdHJpbmcoKSksICRzKTsNCiAgICAgICAgJHMgPSBzdHJfcmVwbGFjZSgiJCUjMTAjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+QWxpYXMpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzExIyUkIiwgaHRtbHNwZWNpYWxjaGFycygkbXRfZXhjZXJwdCksICRzKTsNCiAgICAgICAgJHMgPSBzdHJfcmVwbGFjZSgiJCUjMTIjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCRtdF90ZXh0X21vcmUpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzEzIyUkIiwgaHRtbHNwZWNpYWxjaGFycygkdmFsdWUtPkFsaWFzKSwgJHMpOw0KICAgICAgICAkcyA9IHN0cl9yZXBsYWNlKCIkJSMxNCMlJCIsIGh0bWxzcGVjaWFsY2hhcnMoJHZhbHVlLT5Jc0xvY2sgPyAnMicgOiAnMScpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzE1IyUkIiwgaHRtbHNwZWNpYWxjaGFycygkdmFsdWUtPlN0YXR1cyA9PSAwID8gJ3B1Ymxpc2gnIDogJ2RyYWZ0JyksICRzKTsNCiAgICAgICAgJHN0ckFsbCAuPSAkczsNCiAgICB9DQoNCiAgICAkc3RyWE1MID0gc3RyX3JlcGxhY2UoIiQlIzEjJSQiLCAkc3RyQWxsLCAkc3RyWE1MKTsNCiAgICBlY2hvICRzdHJYTUw7DQp9DQoNCi8qKg0KICogWE1MLVJQQyDliKDpmaTpobXpnaIuDQogKg0KICog6L6T5Ye65pON5L2c57uT5p6cDQogKg0KICogQHBhcmFtIGludCAkaWQg6aG16Z2iSUQNCiAqDQogKiBAdGhyb3dzIEV4Y2VwdGlvbg0KICovDQpmdW5jdGlvbiB4bWxycGNfZGVsUGFnZSgkaWQpDQp7DQogICAgJHN0clhNTCA9ICc8bWV0aG9kUmVzcG9uc2U+PHBhcmFtcz48cGFyYW0+PHZhbHVlPjxib29sZWFuPiQlIzEjJSQ8L2Jvb2xlYW4+PC92YWx1ZT48L3BhcmFtPjwvcGFyYW1zPjwvbWV0aG9kUmVzcG9uc2U+JzsNCg0KICAgICRfR0VUWydpZCddID0gJGlkOw0KDQogICAgaWYgKERlbFBhZ2UoKSA9PSB0cnVlKSB7DQogICAgICAgICRzdHJYTUwgPSBzdHJfcmVwbGFjZSgiJCUjMSMlJCIsIDEsICRzdHJYTUwpOw0KICAgICAgICBlY2hvICRzdHJYTUw7DQogICAgfSBlbHNlIHsNCiAgICAgICAgeG1scnBjX1Nob3dFcnJvcigwLCBfX0ZJTEVfXywgX19MSU5FX18pOw0KICAgIH0NCn0NCg0KLyoqDQogKiBYTUwtUlBDIOWIoOmZpOaWh+eroC4NCiAqDQogKiDovpPlh7rmk43kvZznu5PmnpwNCiAqDQogKiBAcGFyYW0gaW50ICRpZCDmlofnq6BJRA0KICoNCiAqIEB0aHJvd3MgRXhjZXB0aW9uDQogKi8NCmZ1bmN0aW9uIHhtbHJwY19kZWxldGVQb3N0KCRpZCkNCnsNCiAgICAkc3RyWE1MID0gJzxtZXRob2RSZXNwb25zZT48cGFyYW1zPjxwYXJhbT48dmFsdWU+PGJvb2xlYW4+JCUjMSMlJDwvYm9vbGVhbj48L3ZhbHVlPjwvcGFyYW0+PC9wYXJhbXM+PC9tZXRob2RSZXNwb25zZT4nOw0KDQogICAgJF9HRVRbJ2lkJ10gPSAkaWQ7DQoNCiAgICBpZiAoRGVsQXJ0aWNsZSgpID09IHRydWUpIHsNCiAgICAgICAgJHN0clhNTCA9IHN0cl9yZXBsYWNlKCIkJSMxIyUkIiwgMSwgJHN0clhNTCk7DQogICAgICAgIGVjaG8gJHN0clhNTDsNCiAgICB9IGVsc2Ugew0KICAgICAgICB4bWxycGNfU2hvd0Vycm9yKDAsIF9fRklMRV9fLCBfX0xJTkVfXyk7DQogICAgfQ0KfQ0KDQovKioNCiAqIFhNTC1SUEMg6I635Y+W5oyH5a6a5paH56ugLg0KICoNCiAqIOi+k+WHuuaWh+eroOaVsOaNrnhtbA0KICoNCiAqIEBwYXJhbSBpbnQgJGlkIOaWh+eroElEDQogKi8NCmZ1bmN0aW9uIHhtbHJwY19nZXRQb3N0KCRpZCkNCnsNCiAgICBnbG9iYWwgJHpicDsNCg0KICAgICRzdHJYTUwgPSAnPG1ldGhvZFJlc3BvbnNlPjxwYXJhbXM+PHBhcmFtPiQlIzEjJSQ8L3BhcmFtPjwvcGFyYW1zPjwvbWV0aG9kUmVzcG9uc2U+JzsNCiAgICAkc3RyU2luZ2xlID0gJzx2YWx1ZT48c3RydWN0Pg0KPG1lbWJlcj48bmFtZT50aXRsZTwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSMxIyUkPC9zdHJpbmc+PC92YWx1ZT48L21lbWJlcj4NCjxtZW1iZXI+PG5hbWU+ZGVzY3JpcHRpb248L25hbWU+PHZhbHVlPjxzdHJpbmc+JCUjMiMlJDwvc3RyaW5nPjwvdmFsdWU+PC9tZW1iZXI+DQo8bWVtYmVyPjxuYW1lPmRhdGVDcmVhdGVkPC9uYW1lPjx2YWx1ZT48ZGF0ZVRpbWUuaXNvODYwMT4kJSMzIyUkPC9kYXRlVGltZS5pc284NjAxPjwvdmFsdWU+PC9tZW1iZXI+DQo8bWVtYmVyPjxuYW1lPmNhdGVnb3JpZXM8L25hbWU+PHZhbHVlPjxhcnJheT48ZGF0YT48dmFsdWU+PHN0cmluZz4kJSM0IyUkPC9zdHJpbmc+PC92YWx1ZT48L2RhdGE+PC9hcnJheT48L3ZhbHVlPjwvbWVtYmVyPg0KPG1lbWJlcj48bmFtZT5wb3N0aWQ8L25hbWU+PHZhbHVlPjxzdHJpbmc+JCUjNSMlJDwvc3RyaW5nPjwvdmFsdWU+PC9tZW1iZXI+DQo8bWVtYmVyPjxuYW1lPnVzZXJpZDwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSM2IyUkPC9zdHJpbmc+PC92YWx1ZT48L21lbWJlcj4NCjxtZW1iZXI+PG5hbWU+bGluazwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSM3IyUkPC9zdHJpbmc+PC92YWx1ZT48L21lbWJlcj4NCjxtZW1iZXI+PG5hbWU+cGVybWFMaW5rPC9uYW1lPjx2YWx1ZT48c3RyaW5nPiQlIzgjJSQ8L3N0cmluZz48L3ZhbHVlPjwvbWVtYmVyPg0KPG1lbWJlcj48bmFtZT5tdF9rZXl3b3JkczwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSM5IyUkPC9zdHJpbmc+PC92YWx1ZT48L21lbWJlcj4NCjxtZW1iZXI+PG5hbWU+d3Bfc2x1ZzwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSMxMCMlJDwvc3RyaW5nPjwvdmFsdWU+PC9tZW1iZXI+DQo8bWVtYmVyPjxuYW1lPm10X2V4Y2VycHQ8L25hbWU+PHZhbHVlPjxzdHJpbmc+JCUjMTEjJSQ8L3N0cmluZz48L3ZhbHVlPjwvbWVtYmVyPg0KPG1lbWJlcj48bmFtZT5tdF90ZXh0X21vcmU8L25hbWU+PHZhbHVlPjxzdHJpbmc+JCUjMTIjJSQ8L3N0cmluZz48L3ZhbHVlPjwvbWVtYmVyPg0KPG1lbWJlcj48bmFtZT5tdF9iYXNuYW1lPC9uYW1lPjx2YWx1ZT48c3RyaW5nPiQlIzEzIyUkPC9zdHJpbmc+PC92YWx1ZT48L21lbWJlcj4NCjxtZW1iZXI+PG5hbWU+bXRfYWxsb3dfY29tbWVudHM8L25hbWU+PHZhbHVlPjxpbnQ+JCUjMTQjJSQ8L2ludD48L3ZhbHVlPjwvbWVtYmVyPg0KPG1lbWJlcj48bmFtZT5wYWdlX3N0YXR1czwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSMxNSMlJDwvc3RyaW5nPjwvdmFsdWU+PC9tZW1iZXI+DQo8L3N0cnVjdD48L3ZhbHVlPic7DQoNCiAgICAkc3RyQWxsID0gJyc7DQoNCiAgICAkYXJ0aWNsZSA9IG5ldyBQb3N0KCk7DQogICAgJGFydGljbGUtPkxvYWRJbmZvQnlJRCgkaWQpOw0KICAgIGlmICgoJGFydGljbGUtPkF1dGhvcklEICE9ICR6YnAtPnVzZXItPklEKSAmJiAoISR6YnAtPkNoZWNrUmlnaHRzKCdBcnRpY2xlQWxsJykpKSB7DQogICAgICAgIHhtbHJwY19TaG93RXJyb3IoMTEsIF9fRklMRV9fLCBfX0xJTkVfXyk7DQogICAgfQ0KDQogICAgJGFycmF5ID0gYXJyYXkoKTsNCiAgICAkYXJyYXlbXSA9ICRhcnRpY2xlOw0KDQogICAgZm9yZWFjaCAoJGFycmF5IGFzICRrZXkgPT4gJHZhbHVlKSB7DQogICAgICAgICRzID0gJHN0clNpbmdsZTsNCiAgICAgICAgJGRlc2NyaXB0aW9uID0gJyc7DQogICAgICAgICRtdF9leGNlcnB0ID0gJyc7DQogICAgICAgICRtdF90ZXh0X21vcmUgPSAnJzsNCiAgICAgICAgaWYgKHN0cnBvcygkdmFsdWUtPkNvbnRlbnQsICc8IS0tbW9yZS0tPicpICE9PSBmYWxzZSkgew0KICAgICAgICAgICAgJGRlc2NyaXB0aW9uID0gR2V0VmFsdWVJbkFycmF5KGV4cGxvZGUoJzwhLS1tb3JlLS0+JywgJHZhbHVlLT5Db250ZW50KSwgMSk7DQogICAgICAgICAgICAkbXRfdGV4dF9tb3JlID0gR2V0VmFsdWVJbkFycmF5KGV4cGxvZGUoJzwhLS1tb3JlLS0+JywgJHZhbHVlLT5Db250ZW50KSwgMCk7DQogICAgICAgIC8vJGRlc2NyaXB0aW9uPSR2YWx1ZS0+Q29udGVudDsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICRkZXNjcmlwdGlvbiA9ICR2YWx1ZS0+Q29udGVudDsNCiAgICAgICAgICAgICRtdF9leGNlcnB0ID0gJHZhbHVlLT5JbnRybzsNCiAgICAgICAgfQ0KDQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzEjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+VGl0bGUpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzIjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCRkZXNjcmlwdGlvbiksICRzKTsNCiAgICAgICAgJHMgPSBzdHJfcmVwbGFjZSgiJCUjMyMlJCIsIGh0bWxzcGVjaWFsY2hhcnMoJHZhbHVlLT5UaW1lKCdjJykpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzQjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+Q2F0ZWdvcnktPk5hbWUpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzUjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+SUQpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzYjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+QXV0aG9ySUQpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzcjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+VXJsKSwgJHMpOw0KICAgICAgICAkcyA9IHN0cl9yZXBsYWNlKCIkJSM4IyUkIiwgaHRtbHNwZWNpYWxjaGFycygkdmFsdWUtPlVybCksICRzKTsNCiAgICAgICAgJHMgPSBzdHJfcmVwbGFjZSgiJCUjOSMlJCIsIGh0bWxzcGVjaWFsY2hhcnMoJHZhbHVlLT5UYWdzVG9OYW1lU3RyaW5nKCkpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzEwIyUkIiwgaHRtbHNwZWNpYWxjaGFycygkdmFsdWUtPkFsaWFzKSwgJHMpOw0KICAgICAgICAkcyA9IHN0cl9yZXBsYWNlKCIkJSMxMSMlJCIsIGh0bWxzcGVjaWFsY2hhcnMoJG10X2V4Y2VycHQpLCAkcyk7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzEyIyUkIiwgaHRtbHNwZWNpYWxjaGFycygkbXRfdGV4dF9tb3JlKSwgJHMpOw0KICAgICAgICAkcyA9IHN0cl9yZXBsYWNlKCIkJSMxMyMlJCIsIGh0bWxzcGVjaWFsY2hhcnMoJHZhbHVlLT5BbGlhcyksICRzKTsNCiAgICAgICAgJHMgPSBzdHJfcmVwbGFjZSgiJCUjMTQjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+SXNMb2NrID8gJzInIDogJzEnKSwgJHMpOw0KICAgICAgICAkcyA9IHN0cl9yZXBsYWNlKCIkJSMxNSMlJCIsIGh0bWxzcGVjaWFsY2hhcnMoJHZhbHVlLT5TdGF0dXMgPT0gMCA/ICdwdWJsaXNoJyA6ICdkcmFmdCcpLCAkcyk7DQogICAgICAgICRzdHJBbGwgLj0gJHM7DQogICAgfQ0KDQogICAgJHN0clhNTCA9IHN0cl9yZXBsYWNlKCIkJSMxIyUkIiwgJHN0ckFsbCwgJHN0clhNTCk7DQogICAgZWNobyAkc3RyWE1MOw0KfQ0KDQovKioNCiAqIFhNTC1SUEMg6I635Y+W5oyH5a6a5paH56ug5omA5bGe5YiG57G75L+h5oGvLg0KICoNCiAqIOi+k+WHuuaMh+WumuaWh+eroOaJgOWxnuWIhuexu+S/oeaBr3htbA0KICoNCiAqIEBwYXJhbSBpbnQgJGlkIOaWh+eroElEDQogKi8NCmZ1bmN0aW9uIHhtbHJwY19nZXRQb3N0Q2F0ZWdvcmllcygkaWQpDQp7DQogICAgZ2xvYmFsICR6YnA7DQoNCiAgICAkc3RyWE1MID0gJzxtZXRob2RSZXNwb25zZT48cGFyYW1zPjxwYXJhbT48dmFsdWU+PGFycmF5PjxkYXRhPiQlIzEjJSQ8L2RhdGE+PC9hcnJheT48L3ZhbHVlPjwvcGFyYW0+PC9wYXJhbXM+PC9tZXRob2RSZXNwb25zZT4nOw0KICAgICRzdHJTaW5nbGUgPSAnPHZhbHVlPjxzdHJ1Y3Q+DQo8bWVtYmVyPjxuYW1lPmNhdGVnb3J5TmFtZTwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSMxIyUkPC9zdHJpbmc+PC92YWx1ZT48L21lbWJlcj4NCjxtZW1iZXI+PG5hbWU+Y2F0ZWdvcnlJZDwvbmFtZT48dmFsdWU+PHN0cmluZz4kJSMyIyUkPC9zdHJpbmc+PC92YWx1ZT48L21lbWJlcj4NCjxtZW1iZXI+PG5hbWU+aXNQcmltYXJ5PC9uYW1lPjx2YWx1ZT48ZGF0ZVRpbWUuaXNvODYwMT4kJSMzIyUkPC9kYXRlVGltZS5pc284NjAxPjwvdmFsdWU+PC9tZW1iZXI+DQo8L3N0cnVjdD48L3ZhbHVlPic7DQoNCiAgICAkc3RyQWxsID0gJyc7DQoNCiAgICAkYXJ0aWNsZSA9IG5ldyBQb3N0KCk7DQogICAgJGFydGljbGUtPkxvYWRJbmZvQnlJRCgkaWQpOw0KDQogICAgJGFycmF5ID0gYXJyYXkoKTsNCiAgICAkYXJyYXlbXSA9ICRhcnRpY2xlLT5DYXRlZ29yeTsNCg0KICAgIGZvcmVhY2ggKCRhcnJheSBhcyAka2V5ID0+ICR2YWx1ZSkgew0KICAgICAgICAkcyA9ICRzdHJTaW5nbGU7DQogICAgICAgICRzID0gc3RyX3JlcGxhY2UoIiQlIzEjJSQiLCBodG1sc3BlY2lhbGNoYXJzKCR2YWx1ZS0+TmFtZSksICRzKTsNCiAgICAgICAgJHMgPSBzdHJfcmVwbGFjZSgiJCUjMiMlJCIsIGh0bWxzcGVjaWFsY2hhcnMoJHZhbHVlLT5JRCksICRzKTsNCiAgICAgICAgJHMgPSBzdHJfcmVwbGFjZSgiJCUjMyMlJCIsIGh0bWxzcGVjaWFsY2hhcnMoMSksICRzKTsNCg0KICAgICAgICAkc3RyQWxsIC49ICRzOw0KICAgIH0NCg0KICAgICRzdHJYTUwgPSBzdHJfcmVwbGFjZSgiJCUjMSMlJCIsICRzdHJBbGwsICRzdHJYTUwpOw0KICAgIGVjaG8gJHN0clhNTDsNCn0NCg0KLyoqDQogKiBYTUwtUlBDIOe8lui+keaMh+WumuaWh+eroC4NCiAqDQogKiDovpPlh7rmk43kvZznu5PmnpwNCiAqDQogKiBAcGFyYW0gaW50ICAgICAkaWQgICAgICAgIOaWh+eroElEDQogKiBAcGFyYW0gc3RyaW5nICAkeG1sc3RyaW5nIOaWh+eroOaVsOaNrnhtbA0KICogQHBhcmFtIGJvb2x2YWwgJHB1Ymxpc2ggICDmmK/lkKbnm7TmjqXlj5HluIMNCiAqDQogKiBAdGhyb3dzIEV4Y2VwdGlvbg0KICovDQpmdW5jdGlvbiB4bWxycGNfZWRpdFBvc3QoJGlkLCAkeG1sc3RyaW5nLCAkcHVibGlzaCkNCnsNCiAgICBnbG9iYWwgJHpicDsNCg0KICAgICR4bWwgPSBzaW1wbGV4bWxfbG9hZF9zdHJpbmcoJHhtbHN0cmluZyk7DQoNCiAgICBpZiAoJHhtbCkgew0KICAgICAgICAkcG9zdCA9IGFycmF5KCk7DQogICAgICAgIGZvcmVhY2ggKCR4bWwtPmNoaWxkcmVuKCkgYXMgJHgpIHsNCiAgICAgICAgICAgICRhID0gKHN0cmluZykgJHgtPm5hbWU7DQogICAgICAgICAgICBpZiAoJGEgPT0gJ2NhdGVnb3JpZXMnKSB7DQogICAgICAgICAgICAgICAgJGIgPSAkeC0+dmFsdWUtPmNoaWxkcmVuKCktPmFzWE1MKCk7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICRiID0gJHgtPnZhbHVlLT5jaGlsZHJlbigpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgJGIgPSBzdHJfcmVwbGFjZShhcnJheSgnPGFycmF5PicsICc8L2FycmF5PicsICc8ZGF0YT4nLCAnPC9kYXRhPicsICc8c3RyaW5nPicsICc8L3N0cmluZz4nKSwgYXJyYXkoJycpLCAkYik7DQogICAgICAgICAgICAkcG9zdFskYV0gPSAkYjsNCiAgICAgICAgfQ0KDQogICAgICAgICRfUE9TVFsnSUQnXSA9ICRpZDsNCg0KICAgICAgICAkX1BPU1RbJ1RpdGxlJ10gPSAkcG9zdFsndGl0bGUnXTsNCg0KICAgICAgICBpZiAoJHB1Ymxpc2gpIHsNCiAgICAgICAgICAgICRfUE9TVFsnU3RhdHVzJ10gPSAwOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgJF9QT1NUWydTdGF0dXMnXSA9IDE7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoaXNzZXQoJHBvc3RbJ210X2Jhc2VuYW1lJ10pKSB7DQogICAgICAgICAgICAkX1BPU1RbJ0FsaWFzJ10gPSAkcG9zdFsnbXRfYmFzZW5hbWUnXTsNCiAgICAgICAgfQ0KICAgICAgICBpZiAoaXNzZXQoJHBvc3RbJ2RhdGVDcmVhdGVkJ10pKSB7DQogICAgICAgICAgICBkYXRlX2RlZmF1bHRfdGltZXpvbmVfc2V0KCdHTVQnKTsNCiAgICAgICAgICAgICRfUE9TVFsnUG9zdFRpbWUnXSA9IHN0cnRvdGltZSgkcG9zdFsnZGF0ZUNyZWF0ZWQnXSk7DQogICAgICAgICAgICBkYXRlX2RlZmF1bHRfdGltZXpvbmVfc2V0KCR6YnAtPm9wdGlvblsnWkNfVElNRV9aT05FX05BTUUnXSk7DQogICAgICAgICAgICAkX1BPU1RbJ1Bvc3RUaW1lJ10gPSBkYXRlKCdjJywgJF9QT1NUWydQb3N0VGltZSddKTsNCiAgICAgICAgfQ0KICAgICAgICBpZiAoaXNzZXQoJHBvc3RbJ3dwX2F1dGhvcl9pZCddKSkgew0KICAgICAgICAgICAgJF9QT1NUWydBdXRob3JJRCddID0gJHBvc3RbJ3dwX2F1dGhvcl9pZCddOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgJF9QT1NUWydBdXRob3JJRCddID0gJHpicC0+dXNlci0+SUQ7DQogICAgICAgIH0NCiAgICAgICAgaWYgKGlzc2V0KCRwb3N0WydtdF9rZXl3b3JkcyddKSkgew0KICAgICAgICAgICAgJF9QT1NUWydUYWcnXSA9ICRwb3N0WydtdF9rZXl3b3JkcyddOw0KICAgICAgICB9DQogICAgICAgIGlmIChpc3NldCgkcG9zdFsnbXRfYWxsb3dfY29tbWVudHMnXSkpIHsNCiAgICAgICAgICAgIGlmICgkcG9zdFsnbXRfYWxsb3dfY29tbWVudHMnXSA+IDApIHsNCiAgICAgICAgICAgICAgICAkX1BPU1RbJ0lzTG9jayddID0gJHBvc3RbJ210X2FsbG93X2NvbW1lbnRzJ10gLSAxOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAkX1BPU1RbJ0lzTG9jayddID0gJHBvc3RbJ210X2FsbG93X2NvbW1lbnRzJ107DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgaWYgKGlzc2V0KCRwb3N0WydjYXRlZ29yaWVzJ10pKSB7DQogICAgICAgICAgICAkcG9zdFsnY2F0ZWdvcmllcyddID0gc3RyX3JlcGxhY2UoJzx2YWx1ZT4nLCAnJywgJHBvc3RbJ2NhdGVnb3JpZXMnXSk7DQogICAgICAgICAgICAkY2F0ZW5hbWUgPSB0cmltKEdldFZhbHVlSW5BcnJheShleHBsb2RlKCc8L3ZhbHVlPicsICRwb3N0WydjYXRlZ29yaWVzJ10pLCAwKSk7DQogICAgICAgICAgICAkX1BPU1RbJ0NhdGVJRCddID0gJHpicC0+R2V0Q2F0ZWdvcnlCeU5hbWUoJGNhdGVuYW1lKS0+SUQ7DQogICAgICAgIH0NCiAgICAgICAgaWYgKGlzc2V0KCRwb3N0WydtdF9leGNlcnB0J10pKSB7DQogICAgICAgICAgICAkX1BPU1RbJ0ludHJvJ10gPSAkcG9zdFsnbXRfZXhjZXJwdCddOw0KICAgICAgICB9DQogICAgICAgIGlmIChpc3NldCgkcG9zdFsnbXRfdGV4dF9tb3JlJ10pIHx8IGlzc2V0KCRwb3N0WydkZXNjcmlwdGlvbiddKSkgew0KICAgICAgICAgICAgaWYgKGlzc2V0KCRwb3N0WydtdF90ZXh0X21vcmUnXSkpIHsNCiAgICAgICAgICAgICAgICBpZiAoJHBvc3RbJ210X3RleHRfbW9yZSddICE9ICcnKSB7DQogICAgICAgICAgICAgICAgICAgICRfUE9TVFsnQ29udGVudCddID0gJHBvc3RbJ2Rlc2NyaXB0aW9uJ10gLiAnPCEtLW1vcmUtLT4nIC4gJHBvc3RbJ210X3RleHRfbW9yZSddOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICRfUE9TVFsnQ29udGVudCddID0gJHBvc3RbJ2Rlc2NyaXB0aW9uJ107DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAkX1BPU1RbJ0NvbnRlbnQnXSA9ICRwb3N0WydkZXNjcmlwdGlvbiddOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgJHN0clhNTCA9ICc8bWV0aG9kUmVzcG9uc2U+PHBhcmFtcz48cGFyYW0+PHZhbHVlPjxib29sZWFuPiQlIzEjJSQ8L2Jvb2xlYW4+PC92YWx1ZT48L3BhcmFtPjwvcGFyYW1zPjwvbWV0aG9kUmVzcG9uc2U+JzsNCg0KICAgICAgICBpZiAoUG9zdEFydGljbGUoKSA9PSB0cnVlKSB7DQogICAgICAgICAgICAkc3RyWE1MID0gc3RyX3JlcGxhY2UoIiQlIzEjJSQiLCAxLCAkc3RyWE1MKTsNCiAgICAgICAgICAgIGVjaG8gJHN0clhNTDsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIHhtbHJwY19TaG93RXJyb3IoMCwgX19GSUxFX18sIF9fTElORV9fKTsNCiAgICAgICAgfQ0KICAgIH0NCn0NCg0KLyoqDQogKiBYTUwtUlBDIOiuvue9ruaWh+eroOm7mOiupOWIhuexuy4NCiAqDQogKiDovpPlh7rpu5jorqTliIbnsbtpZD0xDQogKi8NCmZ1bmN0aW9uIHhtbHJwY19zZXRQb3N0Q2F0ZWdvcmllcygpDQp7DQogICAgJHN0clhNTCA9ICc8bWV0aG9kUmVzcG9uc2U+PHBhcmFtcz48cGFyYW0+PHZhbHVlPjxib29sZWFuPiQlIzEjJSQ8L2Jvb2xlYW4+PC92YWx1ZT48L3BhcmFtPjwvcGFyYW1zPjwvbWV0aG9kUmVzcG9uc2U+JzsNCiAgICAkc3RyWE1MID0gc3RyX3JlcGxhY2UoIiQlIzEjJSQiLCAxLCAkc3RyWE1MKTsNCiAgICBlY2hvICRzdHJYTUw7DQp9DQoNCi8qKg0KICogWE1MLVJQQyDnvJbovpHmjIflrprpobXpnaIuDQogKg0KICog6L6T5Ye65pON5L2c57uT5p6cDQogKg0KICogQHBhcmFtIGludCAgICAkaWQgICAgICAgIOmhtemdoklEDQogKiBAcGFyYW0gc3RyaW5nICR4bWxzdHJpbmcg6aG16Z2i5pWw5o2ueG1sDQogKiBAcGFyYW0gYm9vbCAgICRwdWJsaXNoICAg5piv5ZCm55u05o6l5Y+R5biDDQogKg0KICogQHRocm93cyBFeGNlcHRpb24NCiAqLw0KZnVuY3Rpb24geG1scnBjX2VkaXRQYWdlKCRpZCwgJHhtbHN0cmluZywgJHB1Ymxpc2gpDQp7DQogICAgZ2xvYmFsICR6YnA7DQoNCiAgICAkeG1sID0gc2ltcGxleG1sX2xvYWRfc3RyaW5nKCR4bWxzdHJpbmcpOw0KDQogICAgaWYgKCR4bWwpIHsNCiAgICAgICAgJHBvc3QgPSBhcnJheSgpOw0KICAgICAgICBmb3JlYWNoICgkeG1sLT5jaGlsZHJlbigpIGFzICR4KSB7DQogICAgICAgICAgICAkYSA9IChzdHJpbmcpICR4LT5uYW1lOw0KICAgICAgICAgICAgaWYgKCRhID09ICdjYXRlZ29yaWVzJykgew0KICAgICAgICAgICAgICAgICRiID0gJHgtPnZhbHVlLT5jaGlsZHJlbigpLT5hc1hNTCgpOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAkYiA9ICR4LT52YWx1ZS0+Y2hpbGRyZW4oKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgICRiID0gc3RyX3JlcGxhY2UoYXJyYXkoJzxhcnJheT4nLCAnPC9hcnJheT4nLCAnPGRhdGE+JywgJzwvZGF0YT4nLCAnPHN0cmluZz4nLCAnPC9zdHJpbmc+JyksIGFycmF5KCcnKSwgJGIpOw0KICAgICAgICAgICAgJHBvc3RbJGFdID0gJGI7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoJHpicC0+Q2hlY2tJdGVtVG9OYXZiYXIoJ3BhZ2UnLCAkaWQpKSB7DQogICAgICAgICAgICAkX1BPU1RbJ0FkZE5hdmJhciddID0gMTsNCiAgICAgICAgfQ0KDQogICAgICAgICRfUE9TVFsnSUQnXSA9ICRpZDsNCg0KICAgICAgICAkX1BPU1RbJ1RpdGxlJ10gPSAkcG9zdFsndGl0bGUnXTsNCg0KICAgICAgICAkX1BPU1RbJ0NvbnRlbnQnXSA9ICRwb3N0WydkZXNjcmlwdGlvbiddOw0KDQogICAgICAgICRfUE9TVFsnQXV0aG9ySUQnXSA9ICR6YnAtPnVzZXItPklEOw0KDQogICAgICAgIGlmICgkcHVibGlzaCkgew0KICAgICAgICAgICAgJF9QT1NUWydTdGF0dXMnXSA9IDA7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAkX1BPU1RbJ1N0YXR1cyddID0gMTsNCiAgICAgICAgfQ0KDQogICAgICAgIGlmIChpc3NldCgkcG9zdFsnbXRfYmFzZW5hbWUnXSkpIHsNCiAgICAgICAgICAgICRfUE9TVFsnQWxpYXMnXSA9ICRwb3N0WydtdF9iYXNlbmFtZSddOw0KICAgICAgICB9DQogICAgICAgIGlmIChpc3NldCgkcG9zdFsnd3BfYXV0aG9yX2lkJ10pKSB7DQogICAgICAgICAgICAkX1BPU1RbJ0F1dGhvcklEJ10gPSAkcG9zdFsnd3BfYXV0aG9yX2lkJ107DQogICAgICAgIH0NCiAgICAgICAgaWYgKGlzc2V0KCRwb3N0WydtdF9hbGxvd19jb21tZW50cyddKSkgew0KICAgICAgICAgICAgaWYgKCRwb3N0WydtdF9hbGxvd19jb21tZW50cyddID4gMCkgew0KICAgICAgICAgICAgICAgICRfUE9TVFsnSXNMb2NrJ10gPSAkcG9zdFsnbXRfYWxsb3dfY29tbWVudHMnXSAtIDE7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICRfUE9TVFsnSXNMb2NrJ10gPSAkcG9zdFsnbXRfYWxsb3dfY29tbWVudHMnXTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgICRzdHJYTUwgPSAnPG1ldGhvZFJlc3BvbnNlPjxwYXJhbXM+PHBhcmFtPjx2YWx1ZT48Ym9vbGVhbj4kJSMxIyUkPC9ib29sZWFuPjwvdmFsdWU+PC9wYXJhbT48L3BhcmFtcz48L21ldGhvZFJlc3BvbnNlPic7DQoNCiAgICAgICAgaWYgKFBvc3RQYWdlKCkgPT0gdHJ1ZSkgew0KICAgICAgICAgICAgJHN0clhNTCA9IHN0cl9yZXBsYWNlKCIkJSMxIyUkIiwgMSwgJHN0clhNTCk7DQogICAgICAgICAgICBlY2hvICRzdHJYTUw7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICB4bWxycGNfU2hvd0Vycm9yKDAsIF9fRklMRV9fLCBfX0xJTkVfXyk7DQogICAgICAgIH0NCiAgICB9DQp9DQoNCi8qKg0KICogWE1MLVJQQyDkuIrkvKDlqpLkvZPmlofku7YuDQogKg0KICog6L6T5Ye65pON5L2c57uT5p6cDQogKg0KICogQHBhcmFtIGludCAgICAkaWQgICAgICAgIOmhtemdoklEDQogKiBAcGFyYW0gc3RyaW5nICR4bWxzdHJpbmcg5LiK5Lyg5paH5Lu25pWw5o2ueG1sDQogKi8NCmZ1bmN0aW9uIHhtbHJwY19uZXdNZWRpYU9iamVjdCgkeG1sc3RyaW5nKQ0Kew0KICAgIGdsb2JhbCAkemJwOw0KDQogICAgJHhtbCA9IHNpbXBsZXhtbF9sb2FkX3N0cmluZygkeG1sc3RyaW5nKTsNCg0KICAgIGlmICgkeG1sKSB7DQogICAgICAgICRwb3N0ID0gYXJyYXkoKTsNCiAgICAgICAgZm9yZWFjaCAoJHhtbC0+Y2hpbGRyZW4oKSBhcyAkeCkgew0KICAgICAgICAgICAgJGEgPSAoc3RyaW5nKSAkeC0+bmFtZTsNCiAgICAgICAgICAgICRiID0gJHgtPnZhbHVlLT5jaGlsZHJlbigpOw0KICAgICAgICAgICAgJHBvc3RbJGFdID0gJGI7DQogICAgICAgIH0NCiAgICAgICAgJHVwbG9hZCA9IG5ldyBVcGxvYWQoKTsNCiAgICAgICAgJGYgPSBHZXRHdWlkKCkgLiBzdHJyY2hyKCRwb3N0WyduYW1lJ10sICcuJyk7DQogICAgICAgICR1cGxvYWQtPk5hbWUgPSAkZjsNCiAgICAgICAgJHVwbG9hZC0+U291cmNlTmFtZSA9ICRwb3N0WyduYW1lJ107DQogICAgICAgICR1cGxvYWQtPk1pbWVUeXBlID0gJHBvc3RbJ3R5cGUnXTsNCiAgICAgICAgJHVwbG9hZC0+U2l6ZSA9IDA7DQogICAgICAgICR1cGxvYWQtPkF1dGhvcklEID0gJHpicC0+dXNlci0+SUQ7DQogICAgICAgICR1cGxvYWQtPlNhdmVCYXNlNjRGaWxlKCRwb3N0WydiaXRzJ10pOw0KICAgICAgICAkdXBsb2FkLT5TYXZlKCk7DQoNCiAgICAgICAgJHN0clhNTCA9ICc8bWV0aG9kUmVzcG9uc2U+PHBhcmFtcz48cGFyYW0+PHZhbHVlPjxzdHJ1Y3Q+PG1lbWJlcj48bmFtZT51cmw8L25hbWU+PHZhbHVlPjxzdHJpbmc+JCUjMSMlJDwvc3RyaW5nPjwvdmFsdWU+PC9tZW1iZXI+PC9zdHJ1Y3Q+PC92YWx1ZT48L3BhcmFtPjwvcGFyYW1zPjwvbWV0aG9kUmVzcG9uc2U+JzsNCiAgICAgICAgJHN0clhNTCA9IHN0cl9yZXBsYWNlKCIkJSMxIyUkIiwgaHRtbHNwZWNpYWxjaGFycygkdXBsb2FkLT5VcmwpLCAkc3RyWE1MKTsNCiAgICAgICAgZWNobyAkc3RyWE1MOw0KICAgIH0NCn0NCg0KLyoqDQogKiBYTUwtUlBD6L6F5YqpLg0KICoNCiAqIOmqjOivgeeUqOaIt+eZu+W9lQ0KICoNCiAqIEBwYXJhbQ0KICogQHBhcmFtDQogKi8NCmZ1bmN0aW9uIHhtbHJwY19WZXJpZnkoJHVzZXJuYW1lLCAkcGFzc3dvcmQpDQp7DQogICAgZ2xvYmFsICR6YnA7DQogICAgaWYgKGlzc2V0KCR6YnAtPm9wdGlvblsnWkNfWE1MUlBDX1VTRV9XRUJUT0tFTiddKSAmJiAkemJwLT5vcHRpb25bJ1pDX1hNTFJQQ19VU0VfV0VCVE9LRU4nXSA9PSB0cnVlKSB7DQogICAgICAgIGlmICghJHpicC0+VmVyaWZ5X1Rva2VuKCR1c2VybmFtZSwgJHBhc3N3b3JkLCAneG1scnBjJywgJHpicC0+dXNlcikpIHsNCiAgICAgICAgICAgIHhtbHJwY19TaG93RXJyb3IoOCwgX19GSUxFX18sIF9fTElORV9fLCA0MDMpOw0KICAgICAgICAgICAgZGllOw0KICAgICAgICB9DQogICAgfSBlbHNlIHsNCiAgICAgICAgaWYgKCEkemJwLT5WZXJpZnlfT3JpZ2luYWwoJHVzZXJuYW1lLCAkcGFzc3dvcmQsICR6YnAtPnVzZXIpKSB7DQogICAgICAgICAgICB4bWxycGNfU2hvd0Vycm9yKDgsIF9fRklMRV9fLCBfX0xJTkVfXywgNDAzKTsNCiAgICAgICAgICAgIGRpZTsNCiAgICAgICAgfQ0KICAgIH0NCn0NCg0KZnVuY3Rpb24geG1scnBjX1Nob3dFcnJvcigkY29kZSwgJGZpbGUsICRsaW5lLCAkaHR0cGNvZGUgPSA0MDEpDQp7DQogICAgU2V0SHR0cFN0YXR1c0NvZGUoJGh0dHBjb2RlKTsNCiAgICBTaG93RXJyb3IoJGNvZGUsICRmaWxlLCAkbGluZSk7DQp9DQoNCi8veG1sLXJwYyBpbnB1dA0KDQokemJwLT5Mb2FkKCk7DQoNCmlmIChpc3NldCgkemJwLT5vcHRpb25bJ1pDX1hNTFJQQ19FTkFCTEUnXSkgJiYgJHpicC0+b3B0aW9uWydaQ19YTUxSUENfRU5BQkxFJ10gPT0gZmFsc2UpIHsNCiAgICBIdHRwNDA0KCk7DQogICAgZGllOw0KfQ0KDQpBZGRfRmlsdGVyX1BsdWdpbignRmlsdGVyX1BsdWdpbl9aYnBfU2hvd0Vycm9yJywgJ1Jlc3BvbmRFcnJvcicpOw0KDQokemJwLT5DaGVja1NpdGVDbG9zZWQoKTsNCg0KJHhtbHN0cmluZyA9IGZpbGVfZ2V0X2NvbnRlbnRzKCdwaHA6Ly9pbnB1dCcpOw0KLy9Mb2dzKCR4bWxzdHJpbmcpOw0KLy9kZWZlbnNlIFhYRQ0KbGlieG1sX2Rpc2FibGVfZW50aXR5X2xvYWRlcih0cnVlKTsNCiR4bWwgPSBzaW1wbGV4bWxfbG9hZF9zdHJpbmcoJHhtbHN0cmluZyk7DQoNCmlmICgkeG1sKSB7DQogICAgZm9yZWFjaCAoJEdMT0JBTFNbJ2hvb2tzJ11bJ0ZpbHRlcl9QbHVnaW5fWG1scnBjX0JlZ2luJ10gYXMgJGZwbmFtZSA9PiAmJGZwc2lnbmFsKSB7DQogICAgICAgICRmcHJldHVybiA9ICRmcG5hbWUoJHhtbCk7DQogICAgfQ0KICAgICRtZXRob2QgPSAoc3RyaW5nKSAkeG1sLT5tZXRob2ROYW1lOw0KICAgIHN3aXRjaCAoJG1ldGhvZCkgew0KICAgICAgICBjYXNlICdibG9nZ2VyLmdldFVzZXJzQmxvZ3MnOg0KICAgICAgICAgICAgJHVzZXJuYW1lID0gKHN0cmluZykgJHhtbC0+cGFyYW1zLT5wYXJhbVsxXS0+dmFsdWUtPnN0cmluZzsNCiAgICAgICAgICAgICRwYXNzd29yZCA9IChzdHJpbmcpICR4bWwtPnBhcmFtcy0+cGFyYW1bMl0tPnZhbHVlLT5zdHJpbmc7DQogICAgICAgICAgICB4bWxycGNfVmVyaWZ5KCR1c2VybmFtZSwgJHBhc3N3b3JkKTsNCiAgICAgICAgICAgIGlmICgkemJwLT5DaGVja1JpZ2h0cygnYWRtaW4nKSkgew0KICAgICAgICAgICAgICAgIHhtbHJwY19nZXRVc2Vyc0Jsb2dzKCk7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIHhtbHJwY19TaG93RXJyb3IoNiwgX19GSUxFX18sIF9fTElORV9fKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICBjYXNlICd3cC5nZXRDYXRlZ29yaWVzJzoNCiAgICAgICAgY2FzZSAnbWV0YVdlYmxvZy5nZXRDYXRlZ29yaWVzJzoNCiAgICAgICAgICAgICR1c2VybmFtZSA9IChzdHJpbmcpICR4bWwtPnBhcmFtcy0+cGFyYW1bMV0tPnZhbHVlLT5zdHJpbmc7DQogICAgICAgICAgICAkcGFzc3dvcmQgPSAoc3RyaW5nKSAkeG1sLT5wYXJhbXMtPnBhcmFtWzJdLT52YWx1ZS0+c3RyaW5nOw0KICAgICAgICAgICAgeG1scnBjX1ZlcmlmeSgkdXNlcm5hbWUsICRwYXNzd29yZCk7DQogICAgICAgICAgICBpZiAoJHpicC0+Q2hlY2tSaWdodHMoJ0FydGljbGVFZHQnKSkgew0KICAgICAgICAgICAgICAgIHhtbHJwY19nZXRDYXRlZ29yaWVzKCk7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIHhtbHJwY19TaG93RXJyb3IoNiwgX19GSUxFX18sIF9fTElORV9fKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICBjYXNlICdtdC5zZXRQb3N0Q2F0ZWdvcmllcyc6DQogICAgICAgICAgICAkdXNlcm5hbWUgPSAoc3RyaW5nKSAkeG1sLT5wYXJhbXMtPnBhcmFtWzFdLT52YWx1ZS0+c3RyaW5nOw0KICAgICAgICAgICAgJHBhc3N3b3JkID0gKHN0cmluZykgJHhtbC0+cGFyYW1zLT5wYXJhbVsyXS0+dmFsdWUtPnN0cmluZzsNCiAgICAgICAgICAgIHhtbHJwY19WZXJpZnkoJHVzZXJuYW1lLCAkcGFzc3dvcmQpOw0KICAgICAgICAgICAgaWYgKCR6YnAtPkNoZWNrUmlnaHRzKCdBcnRpY2xlRWR0JykpIHsNCiAgICAgICAgICAgICAgICB4bWxycGNfc2V0UG9zdENhdGVnb3JpZXMoKTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgeG1scnBjX1Nob3dFcnJvcig2LCBfX0ZJTEVfXywgX19MSU5FX18pOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgYnJlYWs7DQogICAgICAgIGNhc2UgJ210LmdldFBvc3RDYXRlZ29yaWVzJzoNCiAgICAgICAgICAgICR1c2VybmFtZSA9IChzdHJpbmcpICR4bWwtPnBhcmFtcy0+cGFyYW1bMV0tPnZhbHVlLT5zdHJpbmc7DQogICAgICAgICAgICAkcGFzc3dvcmQgPSAoc3RyaW5nKSAkeG1sLT5wYXJhbXMtPnBhcmFtWzJdLT52YWx1ZS0+c3RyaW5nOw0KICAgICAgICAgICAgeG1scnBjX1ZlcmlmeSgkdXNlcm5hbWUsICRwYXNzd29yZCk7DQogICAgICAgICAgICBpZiAoJHpicC0+Q2hlY2tSaWdodHMoJ0FydGljbGVFZHQnKSkgew0KICAgICAgICAgICAgICAgIHhtbHJwY19nZXRQb3N0Q2F0ZWdvcmllcygoaW50KSAkeG1sLT5wYXJhbXMtPnBhcmFtWzBdLT52YWx1ZS0+c3RyaW5nKTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgeG1scnBjX1Nob3dFcnJvcig2LCBfX0ZJTEVfXywgX19MSU5FX18pOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgYnJlYWs7DQogICAgICAgIGNhc2UgJ3dwLmdldFRhZ3MnOg0KICAgICAgICAgICAgJHVzZXJuYW1lID0gKHN0cmluZykgJHhtbC0+cGFyYW1zLT5wYXJhbVsxXS0+dmFsdWUtPnN0cmluZzsNCiAgICAgICAgICAgICRwYXNzd29yZCA9IChzdHJpbmcpICR4bWwtPnBhcmFtcy0+cGFyYW1bMl0tPnZhbHVlLT5zdHJpbmc7DQogICAgICAgICAgICB4bWxycGNfVmVyaWZ5KCR1c2VybmFtZSwgJHBhc3N3b3JkKTsNCiAgICAgICAgICAgIGlmICgkemJwLT5DaGVja1JpZ2h0cygnQXJ0aWNsZUVkdCcpKSB7DQogICAgICAgICAgICAgICAgeG1scnBjX2dldFRhZ3MoKTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgeG1scnBjX1Nob3dFcnJvcig2LCBfX0ZJTEVfXywgX19MSU5FX18pOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgYnJlYWs7DQogICAgICAgIGNhc2UgJ3dwLmdldEF1dGhvcnMnOg0KICAgICAgICAgICAgJHVzZXJuYW1lID0gKHN0cmluZykgJHhtbC0+cGFyYW1zLT5wYXJhbVsxXS0+dmFsdWUtPnN0cmluZzsNCiAgICAgICAgICAgICRwYXNzd29yZCA9IChzdHJpbmcpICR4bWwtPnBhcmFtcy0+cGFyYW1bMl0tPnZhbHVlLT5zdHJpbmc7DQogICAgICAgICAgICB4bWxycGNfVmVyaWZ5KCR1c2VybmFtZSwgJHBhc3N3b3JkKTsNCiAgICAgICAgICAgIGlmICgkemJwLT5DaGVja1JpZ2h0cygnQXJ0aWNsZUVkdCcpKSB7DQogICAgICAgICAgICAgICAgeG1scnBjX2dldEF1dGhvcnMoKTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgeG1scnBjX1Nob3dFcnJvcig2LCBfX0ZJTEVfXywgX19MSU5FX18pOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgYnJlYWs7DQogICAgICAgIGNhc2UgJ21ldGFXZWJsb2cuZ2V0UmVjZW50UG9zdHMnOg0KICAgICAgICAgICAgJHVzZXJuYW1lID0gKHN0cmluZykgJHhtbC0+cGFyYW1zLT5wYXJhbVsxXS0+dmFsdWUtPnN0cmluZzsNCiAgICAgICAgICAgICRwYXNzd29yZCA9IChzdHJpbmcpICR4bWwtPnBhcmFtcy0+cGFyYW1bMl0tPnZhbHVlLT5zdHJpbmc7DQogICAgICAgICAgICB4bWxycGNfVmVyaWZ5KCR1c2VybmFtZSwgJHBhc3N3b3JkKTsNCiAgICAgICAgICAgIGlmICgkemJwLT5DaGVja1JpZ2h0cygnQXJ0aWNsZUVkdCcpKSB7DQogICAgICAgICAgICAgICAgeG1scnBjX2dldFJlY2VudFBvc3RzKChpbnQpICR4bWwtPnBhcmFtcy0+cGFyYW1bM10tPnZhbHVlLT5pbnQpOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICB4bWxycGNfU2hvd0Vycm9yKDYsIF9fRklMRV9fLCBfX0xJTkVfXyk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBicmVhazsNCiAgICAgICAgY2FzZSAnbWV0YVdlYmxvZy5nZXRQb3N0JzoNCiAgICAgICAgICAgICR1c2VybmFtZSA9IChzdHJpbmcpICR4bWwtPnBhcmFtcy0+cGFyYW1bMV0tPnZhbHVlLT5zdHJpbmc7DQogICAgICAgICAgICAkcGFzc3dvcmQgPSAoc3RyaW5nKSAkeG1sLT5wYXJhbXMtPnBhcmFtWzJdLT52YWx1ZS0+c3RyaW5nOw0KICAgICAgICAgICAgeG1scnBjX1ZlcmlmeSgkdXNlcm5hbWUsICRwYXNzd29yZCk7DQogICAgICAgICAgICBpZiAoJHpicC0+Q2hlY2tSaWdodHMoJ0FydGljbGVFZHQnKSkgew0KICAgICAgICAgICAgICAgIHhtbHJwY19nZXRQb3N0KChpbnQpICR4bWwtPnBhcmFtcy0+cGFyYW1bMF0tPnZhbHVlLT5zdHJpbmcpOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICB4bWxycGNfU2hvd0Vycm9yKDYsIF9fRklMRV9fLCBfX0xJTkVfXyk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBicmVhazsNCiAgICAgICAgY2FzZSAnYmxvZ2dlci5kZWxldGVQb3N0JzoNCiAgICAgICAgICAgICR1c2VybmFtZSA9IChzdHJpbmcpICR4bWwtPnBhcmFtcy0+cGFyYW1bMl0tPnZhbHVlLT5zdHJpbmc7DQogICAgICAgICAgICAkcGFzc3dvcmQgPSAoc3RyaW5nKSAkeG1sLT5wYXJhbXMtPnBhcmFtWzNdLT52YWx1ZS0+c3RyaW5nOw0KICAgICAgICAgICAgeG1scnBjX1ZlcmlmeSgkdXNlcm5hbWUsICRwYXNzd29yZCk7DQogICAgICAgICAgICBpZiAoJHpicC0+Q2hlY2tSaWdodHMoJ0FydGljbGVEZWwnKSkgew0KICAgICAgICAgICAgICAgIHhtbHJwY19kZWxldGVQb3N0KChpbnQpICR4bWwtPnBhcmFtcy0+cGFyYW1bMV0tPnZhbHVlLT5zdHJpbmcpOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICB4bWxycGNfU2hvd0Vycm9yKDYsIF9fRklMRV9fLCBfX0xJTkVfXyk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBicmVhazsNCiAgICAgICAgY2FzZSAnbWV0YVdlYmxvZy5lZGl0UG9zdCc6DQogICAgICAgICAgICAkdXNlcm5hbWUgPSAoc3RyaW5nKSAkeG1sLT5wYXJhbXMtPnBhcmFtWzFdLT52YWx1ZS0+c3RyaW5nOw0KICAgICAgICAgICAgJHBhc3N3b3JkID0gKHN0cmluZykgJHhtbC0+cGFyYW1zLT5wYXJhbVsyXS0+dmFsdWUtPnN0cmluZzsNCiAgICAgICAgICAgIHhtbHJwY19WZXJpZnkoJHVzZXJuYW1lLCAkcGFzc3dvcmQpOw0KICAgICAgICAgICAgaWYgKCR6YnAtPkNoZWNrUmlnaHRzKCdBcnRpY2xlUHN0JykpIHsNCiAgICAgICAgICAgICAgICB4bWxycGNfZWRpdFBvc3QoKGludCkgJHhtbC0+cGFyYW1zLT5wYXJhbVswXS0+dmFsdWUtPnN0cmluZywNCiAgICAgICAgICAgICAgICAgICAgJHhtbC0+cGFyYW1zLT5wYXJhbVszXS0+dmFsdWUtPnN0cnVjdC0+YXNYTUwoKSwNCiAgICAgICAgICAgICAgICAgICAgKGJvb2wpICR4bWwtPnBhcmFtcy0+cGFyYW1bNF0tPnZhbHVlLT5ib29sZWFuLT5hc1hNTCgpKTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgeG1scnBjX1Nob3dFcnJvcig2LCBfX0ZJTEVfXywgX19MSU5FX18pOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgYnJlYWs7DQogICAgICAgIGNhc2UgJ21ldGFXZWJsb2cubmV3UG9zdCc6DQogICAgICAgICAgICAkdXNlcm5hbWUgPSAoc3RyaW5nKSAkeG1sLT5wYXJhbXMtPnBhcmFtWzFdLT52YWx1ZS0+c3RyaW5nOw0KICAgICAgICAgICAgJHBhc3N3b3JkID0gKHN0cmluZykgJHhtbC0+cGFyYW1zLT5wYXJhbVsyXS0+dmFsdWUtPnN0cmluZzsNCiAgICAgICAgICAgIHhtbHJwY19WZXJpZnkoJHVzZXJuYW1lLCAkcGFzc3dvcmQpOw0KICAgICAgICAgICAgaWYgKCR6YnAtPkNoZWNrUmlnaHRzKCdBcnRpY2xlUHN0JykpIHsNCiAgICAgICAgICAgICAgICB4bWxycGNfZWRpdFBvc3QoMCwNCiAgICAgICAgICAgICAgICAgICAgJHhtbC0+cGFyYW1zLT5wYXJhbVszXS0+dmFsdWUtPnN0cnVjdC0+YXNYTUwoKSwNCiAgICAgICAgICAgICAgICAgICAgKGJvb2wpICR4bWwtPnBhcmFtcy0+cGFyYW1bNF0tPnZhbHVlLT5ib29sZWFuLT5hc1hNTCgpKTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgeG1scnBjX1Nob3dFcnJvcig2LCBfX0ZJTEVfXywgX19MSU5FX18pOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgYnJlYWs7DQogICAgICAgIGNhc2UgJ3dwLm5ld1BhZ2UnOg0KICAgICAgICAgICAgJHVzZXJuYW1lID0gKHN0cmluZykgJHhtbC0+cGFyYW1zLT5wYXJhbVsxXS0+dmFsdWUtPnN0cmluZzsNCiAgICAgICAgICAgICRwYXNzd29yZCA9IChzdHJpbmcpICR4bWwtPnBhcmFtcy0+cGFyYW1bMl0tPnZhbHVlLT5zdHJpbmc7DQogICAgICAgICAgICB4bWxycGNfVmVyaWZ5KCR1c2VybmFtZSwgJHBhc3N3b3JkKTsNCiAgICAgICAgICAgIGlmICgkemJwLT5DaGVja1JpZ2h0cygnUGFnZVBzdCcpKSB7DQogICAgICAgICAgICAgICAgeG1scnBjX2VkaXRQYWdlKDAsDQogICAgICAgICAgICAgICAgICAgICR4bWwtPnBhcmFtcy0+cGFyYW1bM10tPnZhbHVlLT5zdHJ1Y3QtPmFzWE1MKCksDQogICAgICAgICAgICAgICAgICAgIChib29sKSAkeG1sLT5wYXJhbXMtPnBhcmFtWzRdLT52YWx1ZS0+Ym9vbGVhbi0+YXNYTUwoKSk7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIHhtbHJwY19TaG93RXJyb3IoNiwgX19GSUxFX18sIF9fTElORV9fKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICBjYXNlICd3cC5lZGl0UGFnZSc6DQogICAgICAgICAgICAkdXNlcm5hbWUgPSAoc3RyaW5nKSAkeG1sLT5wYXJhbXMtPnBhcmFtWzJdLT52YWx1ZS0+c3RyaW5nOw0KICAgICAgICAgICAgJHBhc3N3b3JkID0gKHN0cmluZykgJHhtbC0+cGFyYW1zLT5wYXJhbVszXS0+dmFsdWUtPnN0cmluZzsNCiAgICAgICAgICAgIHhtbHJwY19WZXJpZnkoJHVzZXJuYW1lLCAkcGFzc3dvcmQpOw0KICAgICAgICAgICAgaWYgKCR6YnAtPkNoZWNrUmlnaHRzKCdQYWdlUHN0JykpIHsNCiAgICAgICAgICAgICAgICB4bWxycGNfZWRpdFBhZ2UoKGludCkgJHhtbC0+cGFyYW1zLT5wYXJhbVsxXS0+dmFsdWUtPnN0cmluZywNCiAgICAgICAgICAgICAgICAgICAgJHhtbC0+cGFyYW1zLT5wYXJhbVs0XS0+dmFsdWUtPnN0cnVjdC0+YXNYTUwoKSwNCiAgICAgICAgICAgICAgICAgICAgKGJvb2wpICR4bWwtPnBhcmFtcy0+cGFyYW1bNV0tPnZhbHVlLT5ib29sZWFuLT5hc1hNTCgpKTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgeG1scnBjX1Nob3dFcnJvcig2LCBfX0ZJTEVfXywgX19MSU5FX18pOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgYnJlYWs7DQogICAgICAgIGNhc2UgJ3dwLmdldFBhZ2VzJzoNCiAgICAgICAgICAgICR1c2VybmFtZSA9IChzdHJpbmcpICR4bWwtPnBhcmFtcy0+cGFyYW1bMV0tPnZhbHVlLT5zdHJpbmc7DQogICAgICAgICAgICAkcGFzc3dvcmQgPSAoc3RyaW5nKSAkeG1sLT5wYXJhbXMtPnBhcmFtWzJdLT52YWx1ZS0+c3RyaW5nOw0KICAgICAgICAgICAgeG1scnBjX1ZlcmlmeSgkdXNlcm5hbWUsICRwYXNzd29yZCk7DQogICAgICAgICAgICBpZiAoJHpicC0+Q2hlY2tSaWdodHMoJ1BhZ2VFZHQnKSkgew0KICAgICAgICAgICAgICAgIHhtbHJwY19nZXRQYWdlcygoaW50KSAkeG1sLT5wYXJhbXMtPnBhcmFtWzNdLT52YWx1ZS0+aW50KTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgeG1scnBjX1Nob3dFcnJvcig2LCBfX0ZJTEVfXywgX19MSU5FX18pOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgYnJlYWs7DQogICAgICAgIGNhc2UgJ3dwLmdldFBhZ2UnOg0KICAgICAgICAgICAgJHVzZXJuYW1lID0gKHN0cmluZykgJHhtbC0+cGFyYW1zLT5wYXJhbVsyXS0+dmFsdWUtPnN0cmluZzsNCiAgICAgICAgICAgICRwYXNzd29yZCA9IChzdHJpbmcpICR4bWwtPnBhcmFtcy0+cGFyYW1bM10tPnZhbHVlLT5zdHJpbmc7DQogICAgICAgICAgICB4bWxycGNfVmVyaWZ5KCR1c2VybmFtZSwgJHBhc3N3b3JkKTsNCiAgICAgICAgICAgIGlmICgkemJwLT5DaGVja1JpZ2h0cygnUGFnZUVkdCcpKSB7DQogICAgICAgICAgICAgICAgeG1scnBjX2dldFBhZ2UoKGludCkgJHhtbC0+cGFyYW1zLT5wYXJhbVsxXS0+dmFsdWUtPnN0cmluZyk7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIHhtbHJwY19TaG93RXJyb3IoNiwgX19GSUxFX18sIF9fTElORV9fKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICBjYXNlICd3cC5kZWxldGVQYWdlJzoNCiAgICAgICAgICAgICR1c2VybmFtZSA9IChzdHJpbmcpICR4bWwtPnBhcmFtcy0+cGFyYW1bMV0tPnZhbHVlLT5zdHJpbmc7DQogICAgICAgICAgICAkcGFzc3dvcmQgPSAoc3RyaW5nKSAkeG1sLT5wYXJhbXMtPnBhcmFtWzJdLT52YWx1ZS0+c3RyaW5nOw0KICAgICAgICAgICAgeG1scnBjX1ZlcmlmeSgkdXNlcm5hbWUsICRwYXNzd29yZCk7DQogICAgICAgICAgICBpZiAoJHpicC0+Q2hlY2tSaWdodHMoJ1BhZ2VEZWwnKSkgew0KICAgICAgICAgICAgICAgIHhtbHJwY19kZWxQYWdlKChpbnQpICR4bWwtPnBhcmFtcy0+cGFyYW1bM10tPnZhbHVlLT5zdHJpbmcpOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICB4bWxycGNfU2hvd0Vycm9yKDYsIF9fRklMRV9fLCBfX0xJTkVfXyk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBicmVhazsNCiAgICAgICAgY2FzZSAnbWV0YVdlYmxvZy5uZXdNZWRpYU9iamVjdCc6DQogICAgICAgICAgICAkdXNlcm5hbWUgPSAoc3RyaW5nKSAkeG1sLT5wYXJhbXMtPnBhcmFtWzFdLT52YWx1ZS0+c3RyaW5nOw0KICAgICAgICAgICAgJHBhc3N3b3JkID0gKHN0cmluZykgJHhtbC0+cGFyYW1zLT5wYXJhbVsyXS0+dmFsdWUtPnN0cmluZzsNCiAgICAgICAgICAgIHhtbHJwY19WZXJpZnkoJHVzZXJuYW1lLCAkcGFzc3dvcmQpOw0KICAgICAgICAgICAgaWYgKCR6YnAtPkNoZWNrUmlnaHRzKCdVcGxvYWRQc3QnKSkgew0KICAgICAgICAgICAgICAgIHhtbHJwY19uZXdNZWRpYU9iamVjdCgkeG1sLT5wYXJhbXMtPnBhcmFtWzNdLT52YWx1ZS0+c3RydWN0LT5hc1hNTCgpKTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgeG1scnBjX1Nob3dFcnJvcig2LCBfX0ZJTEVfXywgX19MSU5FX18pOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgYnJlYWs7DQogICAgICAgIGNhc2UgJ3dwLmdldFVzZXJzQmxvZ3MnOg0KICAgICAgICAgICAgJHVzZXJuYW1lID0gKHN0cmluZykgJHhtbC0+cGFyYW1zLT5wYXJhbVswXS0+dmFsdWUtPnN0cmluZzsNCiAgICAgICAgICAgICRwYXNzd29yZCA9IChzdHJpbmcpICR4bWwtPnBhcmFtcy0+cGFyYW1bMV0tPnZhbHVlLT5zdHJpbmc7DQogICAgICAgICAgICB4bWxycGNfVmVyaWZ5KCR1c2VybmFtZSwgJHBhc3N3b3JkKTsNCiAgICAgICAgICAgIGlmICgkemJwLT5DaGVja1JpZ2h0cygnYWRtaW4nKSkgew0KICAgICAgICAgICAgICAgIHhtbHJwY193cF9nZXRVc2Vyc0Jsb2dzKCk7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIHhtbHJwY19TaG93RXJyb3IoNiwgX19GSUxFX18sIF9fTElORV9fKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICBkZWZhdWx0Og0KICAgICAgICAgICAgeG1scnBjX1Nob3dFcnJvcigxLCBfX0ZJTEVfXywgX19MSU5FX18pOw0KICAgICAgICAgICAgYnJlYWs7DQogICAgfQ0KfQ0K</file>
	<file name='zb_users\language\en.php' crc32='6D490EE2'  dt:dt='bin.base64'>PD9waHANCg0KLy88bGFuZ3VhZ2U+RW5nbGlzaDwvbGFuZ3VhZ2U+DQovL1RoZSBzZWNvbmQgbGluZSBvZiB0aGlzIGZpbGUgaXMgdGhlIG5hbWUgb2YgdGhlIGxhbmd1YWdlDQovL0F1dGhvcjpZYW5nIFlpeHVhbg0KLy9BdXRob3IgVVJJOmh0dHA6Ly93d3cueWFuZ3lpeHVhbi5jb20NCi8vRS1tYWlsOnNlbkB5YW5neWl4dWFuLmNvbQ0KLy9EYXRlOjIwMTUwMTI2DQoNCi8vJ0N1c3RvbSBJbmZvcm1hdGlvbg0KLy8nRG9uJ3QgZGVsZXRlICVzIGFuZCAoKQ0KDQpyZXR1cm4gYXJyYXkoDQoNCiAgICAnbGFuZycgICAgICAgICAgICAgICAgICA9PiAnZW4nLA0KICAgICdsYW5nX2JjcDQ3JyAgICAgICAgICAgID0+ICdlbicsIC8vIGh0dHA6Ly90b29scy5pZXRmLm9yZy9odG1sL2JjcDQ3DQogICAgJ2xhbmdfbmFtZScgICAgICAgICAgICAgPT4gJ0VuZ2xpc2gnLA0KICAgICdmb250X2ZhbWlseScgICAgICAgICAgID0+ICdIZWx2ZXRpY2EsQXJpYWwsc2Fucy1zZXJpZicsDQogICAgJ2ZvbnRfc2l6ZScgICAgICAgICAgICAgPT4gJycsDQogICAgJ3dpbmRvd3NfY2hhcmFjdGVyX3NldCcgPT4gJ0lTTy04ODU5LTEnLA0KDQovL0Zyb250LUVuZCAmIEJhY2stRW5kDQogICAgJ21zZycgPT4gYXJyYXkoDQogICAgICAgICdpZCcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdJRCcsDQogICAgICAgICduYW1lJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdOYW1lJywNCiAgICAgICAgJ3RpdGxlJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ1RpdGxlJywNCiAgICAgICAgJ2FsaWFzJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ1NsdWcnLA0KICAgICAgICAndGFncycgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnVGFncycsDQogICAgICAgICdzZWFyY2gnICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdTZWFyY2gnLA0KICAgICAgICAnY29tbWVudCcgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnQ29tbWVudHMnLA0KICAgICAgICAnY29udGVudCcgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnQ29udGVudCcsDQogICAgICAgICdpbnRybycgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdTdW1tYXJ5JywNCiAgICAgICAgJ2RhdGUnICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ0RhdGUnLA0KICAgICAgICAnY2F0ZWdvcnknICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnQ2F0ZWdvcmllcycsDQogICAgICAgICd0b3AnICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdTdGlja3kgUG9zdCcsDQogICAgICAgICdzdGF0dXMnICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdTdGF0dXMnLA0KICAgICAgICAndGVtcGxhdGUnICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnVGVtcGxhdGUnLA0KICAgICAgICAnYXV0aG9yJyAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnQXV0aG9yJywNCiAgICAgICAgJ3R5cGUnICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ1R5cGUnLA0KICAgICAgICAnb3JkZXInICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnT3JkZXInLA0KICAgICAgICAnc3VibWl0JyAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnU3VibWl0JywNCiAgICAgICAgJ3Jlc2V0JyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ1Jlc2V0JywNCiAgICAgICAgJ2Vycm9yJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ0Vycm9yJywNCiAgICAgICAgJ2VtYWlsJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ0UtbWFpbCcsDQogICAgICAgICdob21lcGFnZScgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdIb21lcGFnZScsDQogICAgICAgICdhbm9ueW1vdXMnICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdBbm9ueW1vdXMnLA0KICAgICAgICAndW5uYW1lZCcgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnVW5uYW1lZCcsDQogICAgICAgICdmaWxlbmFtZScgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdGaWxlbmFtZScsDQogICAgICAgICdodG1saWQnICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdIVE1MIElEJywNCiAgICAgICAgJ3NpemUnICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ1NpemUnLA0KICAgICAgICAnbm9uZScgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnTm9uZScsDQogICAgICAgICdhbnknICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdVbmxpbWl0ZWQnLA0KICAgICAgICAnZWRpdCcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnRWRpdCcsDQogICAgICAgICdkZWwnICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdEZWxldGUnLA0KICAgICAgICAnYW55JyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnVW5saW1pdGVkJywNCiAgICAgICAgJ2xvZ2luJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ0xvZyBJbicsDQogICAgICAgICdlbmFibGUnICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdBY3RpdmF0ZScsDQogICAgICAgICdkaXNhYmxlJyAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdEZWFjdGl2YXRlJywNCiAgICAgICAgJ21hbmFnZScgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ01hbmFnZScsDQogICAgICAgICdhZG1pbicgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdBZG1pbicsDQogICAgICAgICd3ZWxjb21lJyAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdIb3dkeSwgJywNCiAgICAgICAgJ2xvZ291dCcgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ0xvZyBPdXQnLA0KICAgICAgICAnYXVkaXQnICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnVW5hcHByb3ZlJywNCiAgICAgICAgJ3Bhc3MnICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ0FwcHJvdmluZycsDQogICAgICAgICdhcnRpY2xlJyAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdQdWJsaXNoZWQnLA0KICAgICAgICAncGFnZScgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnUGFnZScsDQogICAgICAgICd5ZWFyX21vbnRoJyAgICAgICAgICAgICAgICAgICAgICAgID0+ICcleSUtJW0lJywNCiAgICAgICAgJ3llYXJfbW9udGhfZGF5JyAgICAgICAgICAgICAgICAgICAgPT4gJyV5JS0lbSUtJWQlJywNCiAgICAgICAgJ251bWJlcl9wYWdlJyAgICAgICAgICAgICAgICAgICAgICAgPT4gJ1BhZ2UgJW51bSUnLA0KICAgICAgICAncGFyZW50X2NhdGVnb3J5JyAgICAgICAgICAgICAgICAgICA9PiAnUGFyZW50JywNCiAgICAgICAgJ3Bhc3N3b3JkJyAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ1Bhc3N3b3JkJywNCiAgICAgICAgJ3JlX3Bhc3N3b3JkJyAgICAgICAgICAgICAgICAgICAgICAgPT4gJ1JlcGVhdCBQYXNzd29yZCcsDQogICAgICAgICd1cGxvYWRfZmlsZScgICAgICAgICAgICAgICAgICAgICAgID0+ICdGaWxlIFVwbG9hZCcsDQogICAgICAgICdhdXRvX3JlbmFtZV91cGxvYWRmaWxlJyAgICAgICAgICAgID0+ICdBdXRvIHJlbmFtZSBmaWxlbmFtZScsDQogICAgICAgICd1c2VybmFtZScgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdVc2VybmFtZScsDQogICAgICAgICdyZXR1cm5fdG9fc2l0ZScgICAgICAgICAgICAgICAgICAgID0+ICdWaXNpdCBTaXRlJywNCiAgICAgICAgJ2NoZWNrX2NvbW1lbnQnICAgICAgICAgICAgICAgICAgICAgPT4gJ1BlbmRpbmcnLA0KICAgICAgICAnZGFzaGJvYXJkJyAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnRGFzaGJvYXJkIEhvbWUnLA0KICAgICAgICAnc2V0dGluZ3MnICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnU2V0dGluZ3MnLA0KICAgICAgICAnb2ZmaWNpYWxfd2Vic2l0ZScgICAgICAgICAgICAgICAgICA9PiAnU3VwcG9ydCcsDQogICAgICAgICdwYXJlbmRfaWQnICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdQYXJlbnQgSUQnLA0KICAgICAgICAnc2VsZWN0X2FsbCcgICAgICAgICAgICAgICAgICAgICAgICA9PiAnQ2hlY2sgQWxsJywNCiAgICAgICAgJ25ld19hcnRpY2xlJyAgICAgICAgICAgICAgICAgICAgICAgPT4gJ0FkZCBQb3N0JywNCiAgICAgICAgJ25ld19wYWdlJyAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ0FkZCBOZXcgUGFnZScsDQogICAgICAgICduZXdfdGFnJyAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdBZGQgTmV3IFRhZycsDQogICAgICAgICduZXdfbWVtYmVyJyAgICAgICAgICAgICAgICAgICAgICAgID0+ICdBZGQgTmV3IFVzZXInLA0KICAgICAgICAnbmV3X2NhdGVnb3J5JyAgICAgICAgICAgICAgICAgICAgICA9PiAnQWRkIE5ldyBDYXRlZ29yeScsDQogICAgICAgICduZXdfbW9kdWxlJyAgICAgICAgICAgICAgICAgICAgICAgID0+ICdBZGQgTmV3IE1vZHVsZScsDQogICAgICAgICdhcnRpY2xlX2VkaXQnICAgICAgICAgICAgICAgICAgICAgID0+ICdFZGl0IFBvc3QnLA0KICAgICAgICAncGFnZV9lZGl0JyAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnRWRpdCBQYWdlJywNCiAgICAgICAgJ3RhZ19lZGl0JyAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ0VkaXQgVGFnJywNCiAgICAgICAgJ2NhdGVnb3J5X2VkaXQnICAgICAgICAgICAgICAgICAgICAgPT4gJ0VkaXQgQ2F0ZWdvcnknLA0KICAgICAgICAnYXJ0aWNsZV9tYW5hZ2UnICAgICAgICAgICAgICAgICAgICA9PiAnUG9zdHMnLA0KICAgICAgICAncGFnZV9tYW5hZ2UnICAgICAgICAgICAgICAgICAgICAgICA9PiAnUGFnZXMnLA0KICAgICAgICAnY2F0ZWdvcnlfbWFuYWdlJyAgICAgICAgICAgICAgICAgICA9PiAnQ2F0ZWdvcmllcycsDQogICAgICAgICdjYXRlZ29yeV9lZGl0JyAgICAgICAgICAgICAgICAgICAgID0+ICdFZGl0IENhdGVnb3J5JywNCiAgICAgICAgJ3RhZ19tYW5hZ2UnICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ1RhZ3MnLA0KICAgICAgICAndGFnX2VkaXQnICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnRWRpdCBUYWcnLA0KICAgICAgICAnbWVtYmVyX2VkaXQnICAgICAgICAgICAgICAgICAgICAgICA9PiAnRWRpdCBVc2VyJywNCiAgICAgICAgJ21vZHVsZV9lZGl0JyAgICAgICAgICAgICAgICAgICAgICAgPT4gJ0VkaXQgTW9kdWxlJywNCiAgICAgICAgJ21vZHVsZV9uYXZiYXInICAgICAgICAgICAgICAgICAgICAgPT4gJ05hdmlnYXRpb24gQmFyJywNCiAgICAgICAgJ21vZHVsZV9taXNjJyAgICAgICAgICAgICAgICAgICAgICAgPT4gJ0ljb25zJywNCiAgICAgICAgJ21vZHVsZV9saW5rJyAgICAgICAgICAgICAgICAgICAgICAgPT4gJ0xpbmtzJywNCiAgICAgICAgJ21vZHVsZV9mYXZvcml0ZScgICAgICAgICAgICAgICAgICAgPT4gJ0Jvb2ttYXJrcycsDQogICAgICAgICdjb21tZW50X21hbmFnZScgICAgICAgICAgICAgICAgICAgID0+ICdDb21tZW50cycsDQogICAgICAgICd1cGxvYWRfbWFuYWdlJyAgICAgICAgICAgICAgICAgICAgID0+ICdBdHRhY2htZW50cycsDQogICAgICAgICdtZW1iZXJfbWFuYWdlJyAgICAgICAgICAgICAgICAgICAgID0+ICdVc2VycycsDQogICAgICAgICd0aGVtZV9tYW5hZ2UnICAgICAgICAgICAgICAgICAgICAgID0+ICdUaGVtZXMnLA0KICAgICAgICAncGx1Z2luX21hbmFnZScgICAgICAgICAgICAgICAgICAgICA9PiAnUGx1Z2lucycsDQogICAgICAgICdtb2R1bGVfbWFuYWdlJyAgICAgICAgICAgICAgICAgICAgID0+ICdNb2R1bGVzJywNCiAgICAgICAgJ3NpdGVfYW5hbHl6ZScgICAgICAgICAgICAgICAgICAgICAgPT4gJ1NpdGUgSW5mb3JtYXRpb24nLA0KICAgICAgICAnaW5mb19pbnRybycgICAgICAgICAgICAgICAgICAgICAgICA9PiAnRGFzaGJvYXJkJywNCiAgICAgICAgJ3JlZnJlc2hfY2FjaGUnICAgICAgICAgICAgICAgICAgICAgPT4gJ1JlZnJlc2ggQ2FjaGUgJmFtcDsgQ29tcGlsZSBUZW1wbGF0ZScsDQogICAgICAgICdsYXRlc3RfbmV3cycgICAgICAgICAgICAgICAgICAgICAgID0+ICdaLUJsb2cgTmV3cycsDQogICAgICAgICdyZWZyZXNoJyAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdSZWZyZXNoJywNCiAgICAgICAgJ3Bvc3RfY291bnQnICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ1Bvc3RzJywNCiAgICAgICAgJ2Jhc2ljX3NldHRpbmcnICAgICAgICAgICAgICAgICAgICAgPT4gJ0dlbmVyYWwgU2V0dGluZ3MnLA0KICAgICAgICAnZ2xvYmFsX3NldHRpbmcnICAgICAgICAgICAgICAgICAgICA9PiAnR2xvYmFsIFNldHRpbmdzJywNCiAgICAgICAgJ3BhZ2Vfc2V0dGluZycgICAgICAgICAgICAgICAgICAgICAgPT4gJ1JlYWRpbmcgU2V0dGluZ3MnLA0KICAgICAgICAnY29tbWVudF9zZXR0aW5nJyAgICAgICAgICAgICAgICAgICA9PiAnRGlzY3Vzc2lvbiBTZXR0aW5ncycsDQogICAgICAgICdvdGhlcl9zZXR0aW5nJyAgICAgICAgICAgICAgICAgICAgID0+ICdPdGhlciBTZXR0aW5ncycsDQogICAgICAgICdibG9nX2hvc3QnICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdTaXRlIEFkZHJlc3MgKFNpdGUgVVJMKScsDQogICAgICAgICdibG9nX2hvc3RfYWRkJyAgICAgICAgICAgICAgICAgICAgID0+ICdEZWZhdWx0IGF1dG9tYXRpYyByZWNvZ25pdGlvbi4gSWYgeW91IG5lZWQgdG8gcGVybWFuZW50IHlvdXIgc2l0ZSBhZGRyZXNzLCBwbGVhc2UgY2xpY2sgb24gdGhlIGJ1dHRvbiBhbmQgZW50ZXIgeW91ciBkb21haW4gbmFtZS4nLA0KICAgICAgICAnY29weXJpZ2h0JyAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnQ29weXJpZ2h0IE5vdGljZScsDQogICAgICAgICdjb3B5cmlnaHRfYWRkJyAgICAgICAgICAgICAgICAgICAgID0+ICdQbGVhc2UgZmlsbCBpbiB0aGUgY29weXJpZ2h0IG5vdGljZSwgd2Vic2l0ZSBzdGF0aXN0aWNzIGNvZGUsIGFuZCBzbyBvbi4nLA0KICAgICAgICAnYmxvZ19uYW1lJyAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnU2l0ZSBUaXRsZScsDQogICAgICAgICdibG9nX3N1Ym5hbWUnICAgICAgICAgICAgICAgICAgICAgID0+ICdTaXRlIFRhZ2xpbmUnLA0KICAgICAgICAncGVybWFuZW50X2RvbWFpbicgICAgICAgICAgICAgICAgICA9PiAnUGVybWFuZW50IFNpdGUgVVJMJywNCiAgICAgICAgJ2Jsb2dfdGltZXpvbmUnICAgICAgICAgICAgICAgICAgICAgPT4gJ1NpdGUgVGltZXpvbmUnLA0KICAgICAgICAnYmxvZ19sYW5ndWFnZScgICAgICAgICAgICAgICAgICAgICA9PiAnU2l0ZSBMYW5ndWFnZScsDQogICAgICAgICdhbGxvd191cGxvYWRfdHlwZScgICAgICAgICAgICAgICAgID0+ICdBbGxvd3MgdG8gVXBsb2FkIGEgRmlsZSBvZiBUeXBlJywNCiAgICAgICAgJ2FsbG93X3VwbG9hZF9zaXplJyAgICAgICAgICAgICAgICAgPT4gJ0FsbG93IFVwbG9hZCBGaWxlIFNpemUgKGluIE1CKScsDQogICAgICAgICdkZWJ1Z19tb2RlJyAgICAgICAgICAgICAgICAgICAgICAgID0+ICdEZXZlbG9wbWVudCBNb2RlJywNCiAgICAgICAgJ2Rpc3BsYXlfY291bnQnICAgICAgICAgICAgICAgICAgICAgPT4gJ0xpc3QgUGFnZSBEaXNwbGF5cyB0aGUgTnVtYmVyIG9mIFBvc3RzJywNCiAgICAgICAgJ3BhZ2ViYXJfY291bnQnICAgICAgICAgICAgICAgICAgICAgPT4gJ1BhZ2ViYXIgRGlzcGxheXMgdGhlIE51bWJlciBvZiBQYWdlcycsDQogICAgICAgICdzZWFyY2hfY291bnQnICAgICAgICAgICAgICAgICAgICAgID0+ICdBbGxvd3MgdGhlIFNlYXJjaCB0byBSZXR1cm4gdGhlIE1heGltdW0gTnVtYmVyIG9mIFBvc3RzJywNCiAgICAgICAgJ21hbmFnZV9jb3VudCcgICAgICAgICAgICAgICAgICAgICAgPT4gJ1RoZSBEYXNoYm9hcmQgRGlzcGxheXMgdGhlIE51bWJlciBvZiBQb3N0cycsDQogICAgICAgICdjb21tZW50X3R1cm5vZmYnICAgICAgICAgICAgICAgICAgID0+ICdUdXJuIE9mZiBDb21tZW50cycsDQogICAgICAgICdjb21tZW50X3JldmVyc2Vfb3JkZXInICAgICAgICAgICAgID0+ICdFbmFibGUgQ29tbWVudHMgT3V0cHV0IGluIFJldmVyc2UgT3JkZXInLA0KICAgICAgICAnY29tbWVudHNfZGlzcGxheV9jb3VudCcgICAgICAgICAgICA9PiAnTnVtYmVyIG9mIENvbW1lbnRzIFBlciBQYWdlJywNCiAgICAgICAgJ2NvbW1lbnRfdmVyaWZ5X2VuYWJsZScgICAgICAgICAgICAgPT4gJ0VuYWJsZWQgQ29tbWVudHMgQ2FwdGNoYScsDQogICAgICAgICdzdGF5X3NpZ25lZF9pbicgICAgICAgICAgICAgICAgICAgID0+ICdSZW1lbWJlciBNZScsDQogICAgICAgICdub3RpZnknICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdOb3RpZnknLA0KICAgICAgICAnY3VycmVudF9tZW1iZXInICAgICAgICAgICAgICAgICAgICA9PiAnQ3VycmVudCBVc2VyJywNCiAgICAgICAgJ2N1cnJlbnRfdmVyc2lvbicgICAgICAgICAgICAgICAgICAgPT4gJ0N1cnJlbnQgVmVyc2lvbicsDQogICAgICAgICdhbGxfYXJ0aWxlcycgICAgICAgICAgICAgICAgICAgICAgID0+ICdQb3N0cycsDQogICAgICAgICdhbGxfcGFnZXMnICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdQYWdlcycsDQogICAgICAgICdhbGxfdGFncycgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdUYWdzJywNCiAgICAgICAgJ2FsbF9jYXRlZ29yeXMnICAgICAgICAgICAgICAgICAgICAgPT4gJ0NhdGVnb3JpZXMnLA0KICAgICAgICAnYWxsX2NvbW1lbnRzJyAgICAgICAgICAgICAgICAgICAgICA9PiAnQ29tbWVudHMnLA0KICAgICAgICAnYWxsX21lbWJlcnMnICAgICAgICAgICAgICAgICAgICAgICA9PiAnVXNlcnMnLA0KICAgICAgICAnYWxsX3ZpZXdzJyAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnVmlld3MnLA0KICAgICAgICAnYWxsX3VwbG9hZHMnICAgICAgICAgICAgICAgICAgICAgICA9PiAnQXR0YWNobWVudHMnLA0KICAgICAgICAnY3VycmVudF90aGVtZScgICAgICAgICAgICAgICAgICAgICA9PiAnQ3VycmVudCBUaGVtZScsDQogICAgICAgICdjdXJyZW50X3N0eWxlJyAgICAgICAgICAgICAgICAgICAgID0+ICdDdXJyZW50IFN0eWxlJywNCiAgICAgICAgJ2RlZmF1bHRfYXZhdGFyJyAgICAgICAgICAgICAgICAgICAgPT4gJ0RlZmF1bHQgQXZhdGFyJywNCiAgICAgICAgJ3N0eWxlJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ1N0eWxlJywNCiAgICAgICAgJ3RoZW1lJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ1RoZW1lJywNCiAgICAgICAgJ3N5c3RlbV9tb2R1bGUnICAgICAgICAgICAgICAgICAgICAgPT4gJ1N5c3RlbSBNb2R1bGUnLA0KICAgICAgICAndXNlcl9tb2R1bGUnICAgICAgICAgICAgICAgICAgICAgICA9PiAnVXNlciBNb2R1bGUnLA0KICAgICAgICAndGhlbWVfbW9kdWxlJyAgICAgICAgICAgICAgICAgICAgICA9PiAnVGhlbWUgTW9kdWxlJywNCiAgICAgICAgJ3BsdWdpbl9tb2R1bGUnICAgICAgICAgICAgICAgICAgICAgPT4gJ1BsdWdpbiBNb2R1bGUnLA0KICAgICAgICAnc2lkZWJhcicgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnRGVmYXVsdCBTaWRlYmFyJywNCiAgICAgICAgJ3NpZGViYXIyJyAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ1NpZGViYXIgMicsDQogICAgICAgICdzaWRlYmFyMycgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdTaWRlYmFyIDMnLA0KICAgICAgICAnc2lkZWJhcjQnICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnU2lkZWJhciA0JywNCiAgICAgICAgJ3NpZGViYXI1JyAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ1NpZGViYXIgNScsDQogICAgICAgICdkaXNwbGF5X3N1YmNhdGVnb3J5cycgICAgICAgICAgICAgID0+ICdTaG93IEFsbCBTdWJjYXRlZ29yaWVzIFBvc3RzIGluIHRoZSBDYXRlZ29yeScsDQogICAgICAgICdkcmFnX21vZHVsZV90b19zaWRlYmFyJyAgICAgICAgICAgID0+ICdUbyBhY3RpdmF0ZSBhIG1vZHVsZSBkcmFnIGl0IHRvIGEgc2lkZWJhci4gVG8gZGVhY3RpdmF0ZSBhIG1vZHVsZSBkcmFnIGl0IGJhY2suJywNCiAgICAgICAgJ3NpZGViYXJfbW9kdWxlX2NvdW50JyAgICAgICAgICAgICAgPT4gJ0J1aWx0LWluICVzIE1vZHVsZScsDQogICAgICAgICd4bWxycGNfYWRkcmVzcycgICAgICAgICAgICAgICAgICAgID0+ICdQcm90b2NvbCBBZGRyZXNzIGZvciBYTUwtUlBDJywNCiAgICAgICAgJ3N5c3RlbV9lbnZpcm9ubWVudCcgICAgICAgICAgICAgICAgPT4gJ1N5c3RlbSBFbnZpcm9ubWVudHMnLA0KICAgICAgICAndmlld19yaWdodHMnICAgICAgICAgICAgICAgICAgICAgICA9PiAnUGVybWlzc2lvbnMnLA0KICAgICAgICAnbWVtYmVyX2xldmVsJyAgICAgICAgICAgICAgICAgICAgICA9PiAnVXNlciBMZXZlbCcsDQogICAgICAgICdkaXNhYmxlX2NvbW1lbnQnICAgICAgICAgICAgICAgICAgID0+ICdEaXNhYmxlIENvbW1lbnRzJywNCiAgICAgICAgJ2RlZmF1bHRfdGVtcGxhdGUnICAgICAgICAgICAgICAgICAgPT4gJ0RlZmF1bHQgVGVtcGxhdGUnLA0KICAgICAgICAnZ2VuZXJhdGVfc3VtbWFyeScgICAgICAgICAgICAgICAgICA9PiAnR2VuZXJhdGUgU3VtbWFyeScsDQogICAgICAgICdhZGRfdG9fbmF2YmFyJyAgICAgICAgICAgICAgICAgICAgID0+ICdBZGQgdG8gTmF2aWdhdGlvbiBCYXInLA0KICAgICAgICAnaGVscF9nZW5lcmF0ZV9zdW1tYXJ5JyAgICAgICAgICAgICA9PiAnV2VcJ2xsIHVzZSB0aGUgY29udGVudCBiZWZvcmUgdGhlIGZpcnN0IGhvcml6b250YWwgYXMgdGhlIHN1bW1hcnkuIEluIGFkZGl0aW9uLCBieSBjbGlja2luZyB0aGUgbGluayB5b3UgY2FuIGxldCBzeXN0ZW0gJywNCiAgICAgICAgJ3VzZV9jb21tYXNfdG9fc2VwYXJhdGUnICAgICAgICAgICAgPT4gJ1NlcGFyYXRlZCBieSBDb21tYXMnLA0KICAgICAgICAnc2hvd19jb21tb25fdGFncycgICAgICAgICAgICAgICAgICA9PiAnQ2hvb3NlIGZyb20gdGhlIG1vc3QgdXNlZCB0YWdzJywNCiAgICAgICAgJ2NhdGVnb3J5X2FyaXRsZXNfZGVmYXVsdF90ZW1wbGF0ZScgPT4gJ1RoZSBEZWZhdWx0IFRlbXBsYXRlIGZvciB0aGUgQ2F0ZWdvcnknLA0KICAgICAgICAnY29uZmlybV9vcGVyYXRpbmcnICAgICAgICAgICAgICAgICA9PiAnQ2xpY2sgIk9LIiB0byBjb250aW51ZSBvciBjbGljayAiQ2FuY2VsIiB0byBzdG9wLicsDQogICAgICAgICdiYXRjaF9vcGVyYXRpb24nICAgICAgICAgICAgICAgICAgID0+ICdCdWxrIEFjdGlvbnMnLA0KICAgICAgICAnb3BlcmF0aW9uX3N1Y2NlZWQnICAgICAgICAgICAgICAgICA9PiAnU3VjY2Vzc2Z1bGx5IENvbXBsZXRlZCcsDQogICAgICAgICdvcGVyYXRpb25fZmFpbGVkJyAgICAgICAgICAgICAgICAgID0+ICdPcGVyYXRpb24gRmFpbHVyZScsDQogICAgICAgICdiYXRjaF9vcGVyYXRpb25faW5fcHJvZ3Jlc3MnICAgICAgID0+ICdCYXRjaCBQcm9jZXNzaW5nLi4uJywNCiAgICAgICAgJ3ByZXZpb3VzX29wZXJhdGlvbl9ub3RfZmluaXNoZWQnICAgPT4gJ0JlZm9yZSBidWxrIG9wZXJhdGlvbnMgaGF2ZSBub3QgeWV0IGZ1bGx5IGltcGxlbWVudGVkLCBQbGVhc2UgY2xpY2sgPGEgaHJlZj1cJyNcJz5Db250aW51ZTwvYT4sIGFsbCBvcGVyYXRpb24gaXMgZXhlY3V0ZWQuJywNCiAgICAgICAgJ2Vycm9yX3RpcHMnICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ0Vycm9yIFRpcHMnLA0KICAgICAgICAnZXJyb3JfaW5mbycgICAgICAgICAgICAgICAgICAgICAgICA9PiAnRXJyb3IgTWVzc2FnZScsDQogICAgICAgICdmaWxlX2xpbmUnICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdGaWxlIExvY2F0aW9uJywNCiAgICAgICAgJ3JlcXVlc3RfZGF0YScgICAgICAgICAgICAgICAgICAgICAgPT4gJ1JlcXVlc3QgRGF0YScsDQogICAgICAgICdpbmNsdWRlX2ZpbGUnICAgICAgICAgICAgICAgICAgICAgID0+ICdJbmNsdWRlIEZpbGUnLA0KICAgICAgICAnYmFjaycgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnQmFjaycsDQogICAgICAgICd2YWxpZGNvZGUnICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdDYXB0Y2hhJywNCiAgICAgICAgJ2hpZGVfdGl0bGUnICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ0hpZGUgVGl0bGUnLA0KICAgICAgICAnY2F0YWxvZ19zdHlsZV9ub3JtYWwnICAgICAgICAgICAgICA9PiAnTm9ybWFsJywNCiAgICAgICAgJ2NhdGFsb2dfc3R5bGVfdHJlZScgICAgICAgICAgICAgICAgPT4gJ1RyZWUnLA0KICAgICAgICAnY2F0YWxvZ19zdHlsZV91bCcgICAgICAgICAgICAgICAgICA9PiAnVUwnLA0KICAgICAgICAnYWxsX2RlbCcgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnQnVsayBEZWxldGUnLA0KICAgICAgICAnYWxsX3Bhc3MnICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnQnVsayBBcHByb3ZlJywNCiAgICAgICAgJ2FsbF9hdWRpdCcgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ0J1bGsgVW5hcHByb3ZlJywNCiAgICAgICAgJ2d6aXBfY29tcHJlc3MnICAgICAgICAgICAgICAgICAgICAgPT4gJ0daaXAgQ29tcHJlc3Npb24nLA0KICAgICAgICAnc3ludGF4X2hpZ2hfbGlnaHRlcicgICAgICAgICAgICAgICA9PiAnQ29kZSBIaWdobGlnaHRpbmcnLA0KICAgICAgICAnY2xvc2Vfc2l0ZScgICAgICAgICAgICAgICAgICAgICAgICA9PiAnQ2xvc2Ugc2l0ZScsDQogICAgICAgICdtYXhfbGlfaW5fdWwnICAgICAgICAgICAgICAgICAgICAgID0+ICdNYXhpbXVtIE51bWJlciBvZiBMSSBpbiBVTCcsDQogICAgICAgICdub19yZWZyZXNoX2NvbnRlbnQnICAgICAgICAgICAgICAgID0+ICdQcmV2ZW50IFN5c3RlbSBVcGRhdGUgTW9kdWxlIENvbnRlbnQnLA0KICAgICAgICAndW5jYXRlZ29yeScgICAgICAgICAgICAgICAgICAgICAgICA9PiAnVW5jYXRlZ29yaXplZCcsDQogICAgICAgICdjYWxlbmRhcicgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdDYWxlbmRhcicsDQogICAgICAgICdjb250cm9sX3BhbmVsJyAgICAgICAgICAgICAgICAgICAgID0+ICdEYXNoYm9hcmQnLA0KICAgICAgICAnbW9kdWxlX2NhdGFsb2cnICAgICAgICAgICAgICAgICAgICA9PiAnQ2F0ZWdvcmllcycsDQogICAgICAgICdtb2R1bGVfY29tbWVudHMnICAgICAgICAgICAgICAgICAgID0+ICdSZWNlbnQgQ29tbWVudHMnLA0KICAgICAgICAnbW9kdWxlX2FyY2hpdmVzJyAgICAgICAgICAgICAgICAgICA9PiAnQXJjaGl2ZXMnLA0KICAgICAgICAnbW9kdWxlX3N0YXRpc3RpY3MnICAgICAgICAgICAgICAgICA9PiAnU2l0ZSBJbmZvcm1hdGlvbicsDQogICAgICAgICdtb2R1bGVfYXV0aG9ycycgICAgICAgICAgICAgICAgICAgID0+ICdBdXRob3JzJywNCiAgICAgICAgJ21vZHVsZV9wcmV2aW91cycgICAgICAgICAgICAgICAgICAgPT4gJ1JlY2VudCBQb3N0cycsDQogICAgICAgICdtb2R1bGVfdGFncycgICAgICAgICAgICAgICAgICAgICAgID0+ICdUYWdzJywNCiAgICAgICAgJ2FkbWluX2xvZ2luJyAgICAgICAgICAgICAgICAgICAgICAgPT4gJ0xvZyBpbicsDQogICAgICAgICd0b3BfaW5kZXgnICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdIb21lJywNCiAgICAgICAgJ3RvcF9nbG9iYWwnICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ0dsb2JhbCcsDQogICAgICAgICd0b3BfY2F0ZWdvcnknICAgICAgICAgICAgICAgICAgICAgID0+ICdDYXRlZ29yeXMnLA0KICAgICAgICAnanVtcF9jb21tZW50JyAgICAgICAgICAgICAgICAgICAgICA9PiAnVmlldyBDb21tZW50IElEPScsDQogICAgICAgICd5ZWFyX3N1ZmZpeCcgICAgICAgICAgICAgICAgICAgICAgID0+ICcnLA0KICAgICAgICAnd2Vla19zdWZmaXgnICAgICAgICAgICAgICAgICAgICAgICA9PiAnJywNCiAgICAgICAgJ3RpbWUnICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ1RpbWUnLA0KICAgICAgICAnaG91cicgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnSG91cicsDQogICAgICAgICdtaW51dGUnICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdNaW4nLA0KICAgICAgICAnc2Vjb25kJyAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnU2VjJywNCiAgICAgICAgJ21pbGxpc2VjJyAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ01zJywNCiAgICAgICAgJ2Nsb3NlJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ1VwZGF0ZScsDQogICAgICAgICdjdXJyZW50JyAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdDdXJyZW50JywNCiAgICAgICAgJ3ByZXZfbW9udGgnICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ1ByZXYgTW9udGgnLA0KICAgICAgICAnbmV4dF9tb250aCcgICAgICAgICAgICAgICAgICAgICAgICA9PiAnTmV4dCBNb250aCcsDQogICAgICAgICdwcm9ncmFtJyAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdQcm9ncmFtbWVycycsDQogICAgICAgICdpbnRlcmZhY2UnICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdEZXNpZ25lcnMnLA0KICAgICAgICAnc3VwcG9ydCcgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnU3VwcG9ydGVycycsDQogICAgICAgICd0aGFua3MnICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdBY2tub3dsZWRnZW1lbnRzJywNCiAgICAgICAgJ3dlYnNpdGUnICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ09mZmljaWFsIFdlYnNpdGVzJywNCiAgICAgICAgJ2RldmVsb3BfaW50cm8nICAgICAgICAgICAgICAgICAgICAgPT4gJ0NvbnRyaWJ1dG9ycycsDQogICAgICAgICdkZWZhdWx0JyAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdEZWZhdWx0JywNCiAgICAgICAgJ2RlYnVnX2JhY2t0cmFjZScgICAgICAgICAgICAgICAgICAgPT4gJ0RlYnVnIEJhY2t0cmFjZScsDQogICAgICAgICdwb3NzaWJsZV9jYXVzZXNfZXJyb3InICAgICAgICAgICAgID0+ICdQb3NzaWJsZSBjYXVzZXMgb2YgZXJyb3JzJywNCiAgICAgICAgJ2Rpc3BsYXlfbW9yZV9pbmZvJyAgICAgICAgICAgICAgICAgPT4gJ0Rpc3BsYXkgbW9yZSBpbmZvJywNCiAgICAgICAgJ2Vycm9yX2xvYWRfanMnICAgICAgICAgICAgICAgICAgICAgPT4gJ0Vycm9yIHdoZW4gbG9hZGluZyBKYXZhU2NyaXB0LiBPSyBmb3IgbW9yZSBpbmZvcm1hdGlvbihDaGluZXNlIG9ubHkpLCBDYW5jZWwgZm9yIGNvbnRpbnVlLicsDQogICAgICAgICdjb21tZW50X2F1ZGl0JyAgICAgICAgICAgICAgICAgICAgID0+ICdBZHVpdCBDb21tZW50cycsDQogICAgICAgICdjb21tZW50X2F1ZGl0X2NvbW1lbnQnICAgICAgICAgICAgID0+ICdBbGwgbmV3IGNvbW1lbnRzIHBvc3RlZCBieSBub24tcm9vdCB1c2VyIHdpbGwgYmUgYXVkaXRlZC4nLA0KICAgICAgICAnZGVidWdnaW5nX3dhcm5pbmcnICAgICAgICAgICAgICAgICA9PiAnSWYgeW91ciB3ZWJzaXRlIGNhbiBiZSBjb25uZWN0ZWQgdmlhIEludGVybmV0LCBwbGVhc2UgZGlzYWJsZSB0aGUgRGV2ZWxvcG1lbnQgTW9kZSwgb3IgaXQgbWF5IGJlIGhhY2tlZC4nLA0KICAgICAgICAncGVybWFuZW50X2RvbWFpbl93aXRoX2FkbWluJyAgICAgICA9PiAnRml4ZWQgZG9tYWluIGJvdGggb24gYmFja2dyb3VuZCcsDQogICAgICAgICdjdXJyZW50X3RlbXBsYXRlJyAgICAgICAgICAgICAgICAgID0+ICdDdXJyZW50IFRlbXBsYXRlJywNCiAgICAgICAgJ2FkZGl0aW9uYWxfc2VjdXJpdHknICAgICAgICAgICAgICAgPT4gJ0FkZGl0aW9uYWwgU2VjdXJpdHknLA0KICAgICAgICAnJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnJywNCiAgICApLA0KDQovL0FjdGlvbg0KICAgICdhY3Rpb25zJyA9PiBhcnJheSgNCiAgICAgICAgJ2xvZ2luJyAgICAgICA9PiAnTG9nIGluJywNCiAgICAgICAgJ2xvZ291dCcgICAgICA9PiAnTG9nIE91dCcsDQogICAgICAgICd2ZXJpZnknICAgICAgPT4gJ1ZlcmlmeScsDQogICAgICAgICdhZG1pbicgICAgICAgPT4gJ0FkbWluJywNCiAgICAgICAgJ3NlYXJjaCcgICAgICA9PiAnU2VhcmNoJywNCiAgICAgICAgJ21pc2MnICAgICAgICA9PiAnTWlzYycsDQogICAgICAgICdmZWVkJyAgICAgICAgPT4gJ0VudHJpZXMgUlNTJywNCiAgICAgICAgJ2NtdCcgICAgICAgICA9PiAnUG9zdCBDb21tZW50JywNCiAgICAgICAgJ2dldGNtdCcgICAgICA9PiAnR2V0IFJlY2VudCBDb21tZW50cycsDQogICAgICAgICdhamF4JyAgICAgICAgPT4gJ0FKQVgnLA0KICAgICAgICAnQXJ0aWNsZUVkdCcgID0+ICdFZGl0IFBvc3QnLA0KICAgICAgICAnQXJ0aWNsZVBzdCcgID0+ICdBZGQgTmV3IFBvc3QnLA0KICAgICAgICAnQXJ0aWNsZURlbCcgID0+ICdEZWxldGUgUG9zdCcsDQogICAgICAgICdBcnRpY2xlUHViJyAgPT4gJ1B1Ymxpc2ggUG9zdCcsDQogICAgICAgICdQYWdlRWR0JyAgICAgPT4gJ0VkaXQgUGFnZScsDQogICAgICAgICdQYWdlUHN0JyAgICAgPT4gJ0FkZCBOZXcgUGFnZScsDQogICAgICAgICdQYWdlRGVsJyAgICAgPT4gJ0RlbGV0ZSBQYWdlJywNCiAgICAgICAgJ0NhdGVnb3J5RWR0JyA9PiAnRWRpdCBDYXRlZ29yeScsDQogICAgICAgICdDYXRlZ29yeVBzdCcgPT4gJ1VwZGF0ZSBDYXRlZ29yeScsDQogICAgICAgICdDYXRlZ29yeURlbCcgPT4gJ0RlbGV0ZSBDYXRlZ29yeScsDQogICAgICAgICdDb21tZW50RWR0JyAgPT4gJ0VkaXQgQ29tbWVudCcsDQogICAgICAgICdDb21tZW50U2F2JyAgPT4gJ1VwZGF0ZSBDb21tZW50JywNCiAgICAgICAgJ0NvbW1lbnREZWwnICA9PiAnRGVsZXRlIENvbW1lbnQnLA0KICAgICAgICAnQ29tbWVudENoaycgID0+ICdBcHByb3ZlIENvbW1lbnQnLA0KICAgICAgICAnQ29tbWVudEJhdCcgID0+ICdCdWxrIENvbW1lbnQnLA0KICAgICAgICAnTWVtYmVyRWR0JyAgID0+ICdFZGl0IFVzZXInLA0KICAgICAgICAnTWVtYmVyUHN0JyAgID0+ICdVcGRhdGUgVXNlcicsDQogICAgICAgICdNZW1iZXJEZWwnICAgPT4gJ0RlbGV0ZSBVc2VyJywNCiAgICAgICAgJ01lbWJlck5ldycgICA9PiAnQWRkIE5ldyBVc2VyJywNCiAgICAgICAgJ1RhZ0VkdCcgICAgICA9PiAnRWRpdCBUYWcnLA0KICAgICAgICAnVGFnUHN0JyAgICAgID0+ICdVcGRhdGUgVGFnJywNCiAgICAgICAgJ1RhZ0RlbCcgICAgICA9PiAnRGVsZXRlIFRhZycsDQogICAgICAgICdUYWdOZXcnICAgICAgPT4gJ0FkZCBOZXcgVGFnJywNCiAgICAgICAgJ1BsdWdpbkVuYicgICA9PiAnQWN0aXZhdGUnLA0KICAgICAgICAnUGx1Z2luRGlzJyAgID0+ICdEZWFjdGl2YXRlJywNCiAgICAgICAgJ1VwbG9hZFBzdCcgICA9PiAnVXBsb2FkIEF0dGFjaG1lbnQnLA0KICAgICAgICAnVXBsb2FkRGVsJyAgID0+ICdEZWxldGUgQXR0YWNobWVudCcsDQogICAgICAgICdNb2R1bGVFZHQnICAgPT4gJ0VkaXQgTW9kdWxlJywNCiAgICAgICAgJ01vZHVsZVBzdCcgICA9PiAnVXBkYXRlIE1vZHVsZScsDQogICAgICAgICdNb2R1bGVEZWwnICAgPT4gJ0RlbGV0ZSBNb2R1bGUnLA0KICAgICAgICAnVGhlbWVTZXQnICAgID0+ICdUaGVtZSBTZXR0aW5ncycsDQogICAgICAgICdTaWRlYmFyU2V0JyAgPT4gJ1NpZGViYXIgU2V0dGluZ3MnLA0KICAgICAgICAnU2V0dGluZ1NhdicgID0+ICdVcGRhdGUgU2V0dGluZ3MnLA0KICAgICAgICAnQXJ0aWNsZU1uZycgID0+ICdQb3N0cycsDQogICAgICAgICdQYWdlTW5nJyAgICAgPT4gJ1BhZ2VzJywNCiAgICAgICAgJ0NhdGVnb3J5TW5nJyA9PiAnQ2F0ZWdvcmllcycsDQogICAgICAgICdTZXR0aW5nTW5nJyAgPT4gJ1NldHRpbmdzJywNCiAgICAgICAgJ1RhZ01uZycgICAgICA9PiAnVGFncycsDQogICAgICAgICdDb21tZW50TW5nJyAgPT4gJ0NvbW1lbnRzJywNCiAgICAgICAgJ1VwbG9hZE1uZycgICA9PiAnQXR0YWNobWVudHMnLA0KICAgICAgICAnTWVtYmVyTW5nJyAgID0+ICdVc2VycycsDQogICAgICAgICdUaGVtZU1uZycgICAgPT4gJ1RoZW1lcycsDQogICAgICAgICdQbHVnaW5NbmcnICAgPT4gJ1BsdWdpbnMnLA0KICAgICAgICAnTW9kdWxlTW5nJyAgID0+ICdNb2R1bGVzJywNCiAgICAgICAgJ0FydGljbGVBbGwnICA9PiAnQWxsIFBvc3RzIFByaXZpbGVnZSBNYW5hZ2VtZW50JywNCiAgICAgICAgJ1BhZ2VBbGwnICAgICA9PiAnQWxsIFBhZ2VzIFByaXZpbGVnZSBNYW5hZ2VtZW50JywNCiAgICAgICAgJ0NhdGVnb3J5QWxsJyA9PiAnQWxsIENhdGVnb3JpZXMgUHJpdmlsZWdlIE1hbmFnZW1lbnQnLA0KICAgICAgICAnQ29tbWVudEFsbCcgID0+ICdBbGwgQ29tbWVudHMgUHJpdmlsZWdlIE1hbmFnZW1lbnQnLA0KICAgICAgICAnTWVtYmVyQWxsJyAgID0+ICdBbGwgVXNlcnMgUHJpdmlsZWdlIE1hbmFnZW1lbnQnLA0KICAgICAgICAnVGFnQWxsJyAgICAgID0+ICdBbGwgVGFnZXMgUHJpdmlsZWdlIE1hbmFnZW1lbnQnLA0KICAgICAgICAnVXBsb2FkQWxsJyAgID0+ICdBbGwgQXR0YWNobWVudHMgUHJpdmlsZWdlIE1hbmFnZW1lbnQnLA0KICAgICAgICAncm9vdCcgICAgICAgID0+ICdTdXBlcnVzZXIgUHJpdmlsZWdlIE1hbmFnZW1lbnQnLA0KICAgICAgICAnTm9WYWxpZENvZGUnID0+ICdJZ25vcmUgQ2FwdGNoYScsDQogICAgKSwNCg0KLy9BcnRpY2xlIExldmVsDQogICAgJ3Bvc3Rfc3RhdHVzX25hbWUnID0+IGFycmF5KA0KICAgICAgICAnMCcgPT4gJ1B1Ymxpc2hlZCcsDQogICAgICAgICcxJyA9PiAnRHJhZnQnLA0KICAgICAgICAnMicgPT4gJ1BlbmRpbmcnLA0KICAgICksDQoNCi8vVXNlciBMZXZlbA0KICAgICd1c2VyX2xldmVsX25hbWUnID0+IGFycmF5KA0KICAgICAgICAnMScgPT4gJ0FkbWluaXN0cmF0b3InLA0KICAgICAgICAnMicgPT4gJ1JlZGFjdG9yJywNCiAgICAgICAgJzMnID0+ICdBdXRob3InLA0KICAgICAgICAnNCcgPT4gJ1RlYW13b3JrZXInLA0KICAgICAgICAnNScgPT4gJ0NvbW1lbnRhdG9yJywNCiAgICAgICAgJzYnID0+ICdWaXNpdG9yJywNCiAgICApLA0KDQogICAgJ3VzZXJfc3RhdHVzX25hbWUnID0+IGFycmF5KA0KICAgICAgICAnMCcgPT4gJ05vcm1hbGl0eScsDQogICAgICAgICcxJyA9PiAnUGVuZGluZycsDQogICAgICAgICcyJyA9PiAnRGlzYWJsZWQnLA0KICAgICksDQoNCi8vSmFudWFyeSwgRmVicnVhcnkuLi4NCiAgICAnbW9udGgnID0+IGFycmF5KA0KICAgICAgICAnMScgID0+ICdKYW51YXJ5JywNCiAgICAgICAgJzInICA9PiAnRmVicnVhcnknLA0KICAgICAgICAnMycgID0+ICdNYXJjaCcsDQogICAgICAgICc0JyAgPT4gJ0FwcmlsJywNCiAgICAgICAgJzUnICA9PiAnTWF5JywNCiAgICAgICAgJzYnICA9PiAnSnVuZScsDQogICAgICAgICc3JyAgPT4gJ0p1bHknLA0KICAgICAgICAnOCcgID0+ICdBdWd1c3QnLA0KICAgICAgICAnOScgID0+ICdTZXB0ZW1iZXInLA0KICAgICAgICAnMTAnID0+ICdPY3RvYmVyJywNCiAgICAgICAgJzExJyA9PiAnTm92ZW1iZXInLA0KICAgICAgICAnMTInID0+ICdEZWNlbWJlcicsDQogICAgKSwNCg0KLy9KYW4uLCBGZWIuIC4uLg0KICAgICdtb250aF9hYmJyJyA9PiBhcnJheSgNCiAgICAgICAgJzEnICA9PiAnSmFuJywNCiAgICAgICAgJzInICA9PiAnRmViJywNCiAgICAgICAgJzMnICA9PiAnTWFyJywNCiAgICAgICAgJzQnICA9PiAnQXByJywNCiAgICAgICAgJzUnICA9PiAnTWF5JywNCiAgICAgICAgJzYnICA9PiAnSnVuJywNCiAgICAgICAgJzcnICA9PiAnSnVsJywNCiAgICAgICAgJzgnICA9PiAnQXVnJywNCiAgICAgICAgJzknICA9PiAnU2VwJywNCiAgICAgICAgJzEwJyA9PiAnT2N0JywNCiAgICAgICAgJzExJyA9PiAnTm92JywNCiAgICAgICAgJzEyJyA9PiAnRGVjJywNCiAgICApLA0KDQovL1N1bmRheSwgTW9uZGF5Li4NCiAgICAnd2VlaycgPT4gYXJyYXkoDQogICAgICAgICc3JyA9PiAnU3VuZGF5JywNCiAgICAgICAgJzEnID0+ICdNb25kYXknLA0KICAgICAgICAnMicgPT4gJ1R1ZXNkYXknLA0KICAgICAgICAnMycgPT4gJ1dlZG5lc2RheScsDQogICAgICAgICc0JyA9PiAnVGh1cnNkYXknLA0KICAgICAgICAnNScgPT4gJ0ZyaWRheScsDQogICAgICAgICc2JyA9PiAnU2F0dXJkYXknLA0KICAgICksDQoNCi8vU3VuLiwgTW9uLiAuLi4NCiAgICAnd2Vla19hYmJyJyA9PiBhcnJheSgNCiAgICAgICAgJzcnID0+ICdTdW4nLA0KICAgICAgICAnMScgPT4gJ01vbicsDQogICAgICAgICcyJyA9PiAnVHVlJywNCiAgICAgICAgJzMnID0+ICdXZWQnLA0KICAgICAgICAnNCcgPT4gJ1RodScsDQogICAgICAgICc1JyA9PiAnRnJpJywNCiAgICAgICAgJzYnID0+ICdTYXQnLA0KICAgICksDQoNCiAgICAnd2Vla19zaG9ydCcgPT4gYXJyYXkoDQogICAgICAgICc3JyA9PiAnUycsDQogICAgICAgICcxJyA9PiAnTScsDQogICAgICAgICcyJyA9PiAnVCcsDQogICAgICAgICczJyA9PiAnVycsDQogICAgICAgICc0JyA9PiAnVCcsDQogICAgICAgICc1JyA9PiAnRicsDQogICAgICAgICc2JyA9PiAnUycsDQogICAgKSwNCg0KLy9DdXN0b20gRXJyb3IgSW5mb3JtYXRpb24NCiAgICAnZXJyb3InID0+IGFycmF5KA0KICAgICAgICAnMCcgID0+ICdVbmtub3duIEVycm9yJywNCiAgICAgICAgJzEnICA9PiAnVW5rbm93biBDb21tYW5kJywNCiAgICAgICAgJzInICA9PiAnU29ycnksIFRoaXMgcGFnZSBkb2VzIG5vdCBleGlzdC4nLA0KICAgICAgICAnMycgID0+ICdSZXF1ZXN0IHdpdGggZXJyb3IgcGFyYW1zLicsDQogICAgICAgICc0JyAgPT4gJ0RhdGFiYXNlIENvbm5lY3Rpb24gRXJyb3InLA0KICAgICAgICAnNScgID0+ICdObyBVbmF1dGhvcml6ZWQgQWNjZXNzJywNCiAgICAgICAgJzYnICA9PiAnTm90IFBlcm1pdHRlZCcsDQogICAgICAgICc3JyAgPT4gJ1VzZXJuYW1lIGlzIG5vdCBpbiB0aGUgY29ycmVjdCBmb3JtYXQsIGl0IG1heSBiZSB0b28gbG9uZyBvciBpcyBlbXB0eS4nLA0KICAgICAgICAnOCcgID0+ICdMb2dpbiBGYWlsZWQnLA0KICAgICAgICAnOScgID0+ICdUaGlzIFBvc3QgZG9lcyBub3QgZXhpc3QsIG9yIHBlcm1pc3Npb24gaXMgdG9vIGxvdy4nLA0KICAgICAgICAnMTAnID0+ICdTeXN0ZW0gSW5pdGlhbGl6YXRpb24gRmFpbGVkJywNCiAgICAgICAgJzExJyA9PiAnVXBkYXRlIFBvc3QgRmFpbGVkJywNCiAgICAgICAgJzEyJyA9PiAnVXBkYXRlIENhdGVnb3J5IEZhaWxlZCcsDQogICAgICAgICcxMycgPT4gJ1RoZSBQb3N0cyBpbiB0aGlzIGNhdGVnb3J5LCBkZWxldGUgZmFpbGVkLicsDQogICAgICAgICcxNCcgPT4gJ1lvdXIgY29tbWVudCBoYXMgYmVlbiBpbnRlcmNlcHRvciBzeXN0ZW0sIGRlbGV0ZSBmYWlsZWQuJywNCiAgICAgICAgJzE1JyA9PiAnTmFtZSBmb3JtYXQgaXMgaW5jb3JyZWN0LCBpdCBtYXkgYmUgdG9vIGxvbmcgb3IgZW1wdHkuJywNCiAgICAgICAgJzE2JyA9PiAnVXBkYXRlIFVzZXIgRmFpbGVkJywNCiAgICAgICAgJzE3JyA9PiAnRGVsZXRlIFVzZXIgRmFpbGVkJywNCiAgICAgICAgJzE4JyA9PiAnRGVsZXRlIENvbW1lbnQgRmFpbGVkJywNCiAgICAgICAgJzE5JyA9PiAnRGVsZXRlIFBpbmcgVVJMIEZhaWxlZCcsDQogICAgICAgICcyMCcgPT4gJ1NlbmQgUGluZyBVUkwgRmFpbGVkJywNCiAgICAgICAgJzIxJyA9PiAnRmlsZSBVcGxvYWQgRmFpbGVkJywNCiAgICAgICAgJzIyJyA9PiAnRGVsZXRlIEZpbGUgRmFpbGVkJywNCiAgICAgICAgJzIzJyA9PiAnU3lzdGVtIFJlY29uc3RydWN0aW9uIEZhaWxlZCcsDQogICAgICAgICcyNCcgPT4gJ1NlYXJjaCBTdHJpbmcgRmFpbGVkJywNCiAgICAgICAgJzI1JyA9PiAnVXBkYXRlIFNldHRpbmdzIEZhaWxlZCcsDQogICAgICAgICcyNicgPT4gJ0ZpbGUgVHlwZSBiZXlvbmQgdGhlIFNldCBSYW5nZScsDQogICAgICAgICcyNycgPT4gJ0ZpbGUgU2l6ZSBleGNlZWRzIHRoZSBTZXQgUmFuZ2UnLA0KICAgICAgICAnMjgnID0+ICdQbGVhc2UgcmVtb3ZlIHRoZSBleGlzdGluZyBmaWxlLicsDQogICAgICAgICcyOScgPT4gJ0UtbWFpbCBhZGRyZXNzIGZvcm1hdCBpcyBjb3JyZWN0LCBpdCBtYXkgYmUgdG9vIGxvbmcgb3IgbnVsbC4nLA0KICAgICAgICAnMzAnID0+ICdVUkwgZm9ybWF0IGlzIG5vdCBjb3JyZWN0LCBpdCBtYXkgYmUgdG9vIGxvbmcgb3IgbnVsbC4nLA0KICAgICAgICAnMzEnID0+ICdEbyBub3QgaW1wZXJzb25hdGU7IGlmIHlvdSBhcmUgdGhpcyB1c2VyLCBwbGVhc2UgbG9nIGluIGZpcnN0IGFuZCB0aGVuIGNvbW1lbnQuJywNCiAgICAgICAgJzMyJyA9PiAnT3BlcmF0aW5nIFRvbyBGYXN0JywNCiAgICAgICAgJzMzJyA9PiAnVXBkYXRlIEtleXdvcmQgRmFpbGVkJywNCiAgICAgICAgJzM0JyA9PiAnRGVsZXRlIEtleXdvcmQgRmFpbGVkJywNCiAgICAgICAgJzM1JyA9PiAnVXBkYXRlIFRhZyBGYWlsZWQnLA0KICAgICAgICAnMzYnID0+ICdEZWxldGUgVGFnIEZhaWxlZCcsDQogICAgICAgICczNycgPT4gJ0VkaXQgRmlsZSBGYWlsZWQnLA0KICAgICAgICAnMzgnID0+ICdZb3UgaGF2ZSBlbnRlcmVkIGEgd3JvbmcgdmVyaWZpY2F0aW9uIGNvZGUhJywNCiAgICAgICAgJzM5JyA9PiAnUGxlYXNlIGRvIG5vdCBzdWJtaXQgdGhlIHNhbWUgY29tbWVudC4nLA0KICAgICAgICAnNDAnID0+ICdDb21tZW50IERpc2FibGVkJywNCiAgICAgICAgJzQxJyA9PiAnUGluZyBVUkwgRGlzYWJsZWQnLA0KICAgICAgICAnNDInID0+ICdEaXNhYmxlZCBDb21tZW50IEZhaWxlZCcsDQogICAgICAgICc0MycgPT4gJ0NoZWNrc3VtIGVycm9ycywgZG8gbm90IHBvc3Qgc3BhbS4nLA0KICAgICAgICAnNDQnID0+ICdOb24tcHVibGlzaGVkIFBvc3RzIENhbm5vdCBDb21tZW50JywNCiAgICAgICAgJzQ1JyA9PiAnR3Vlc3QgYm9vayBhbGxvd2luZyBvbmx5IHJlZ2lzdGVyZWQgdXNlcnMsIHZpc2l0b3JzIGNhbiBsZWF2ZSBhIG1lc3NhZ2UuJywNCiAgICAgICAgJzQ2JyA9PiAnQ29tbWVudCBjYW4gbm90IGJlIGVtcHR5IG9yIHRvbyBsb25nLicsDQogICAgICAgICc0NycgPT4gJ1JlcGx5IGZlYXR1cmUgaXMgb3BlbiB0byByZWdpc3RlcmVkIHVzZXJzIG9ubHksIHZpc2l0b3JzIGNhbiBsZWF2ZSBhIG1lc3NhZ2UuJywNCiAgICAgICAgJzQ4JyA9PiAnVGhlIHBsdWdpbiBpcyBub3QgYWN0aXZhdGVkLCBwbGVhc2UgdG8gYWN0aXZhdGUgYXQgdGhlIGRhc2hib2FyZC4nLA0KICAgICAgICAnNDknID0+ICdUaGVyZSBhcmUgc3ViY2F0ZWdvcmllcyBpbiB0aGlzIGNhdGVnb3J5LCBkZWxldGUgZmFpbGVkLicsDQogICAgICAgICc1MCcgPT4gJ1RoZSBzcGVjaWZpZWQgcGFyZW50IGNhdGVnb3J5IGRvZXMgbm90IGV4aXN0LicsDQogICAgICAgICc1MScgPT4gJ1N1YmNhdGVnb3J5IGNhbm5vdCBpbmNsdWRlIGFueSBjYXRlZ29yeS4nLA0KICAgICAgICAnNTInID0+ICdFeGNlZWRlZCBtYXhpbXVtIG51bWJlciBvZiByZXBsaWVzLicsDQogICAgICAgICc1MycgPT4gJ1lvdXIgY29tbWVudCBoYXMgZW50ZXJlZCB0aGUgYXBwcm92YWwgcHJvY2VzcywgcGxlYXNlIGRvIG5vdCByZXN1Ym1pdC4nLA0KICAgICAgICAnNTQnID0+ICJQYXNzd29yZHMgc2hvdWxkIGJlIGJldHdlZW4gOCBhbmQgMjAgY2hhcmFjdGVycy4iLA0KICAgICAgICAnNTUnID0+ICdBIGxlbmd0aCBvZiBlbmNyeXB0ZWQgc3RyaW5nIGlzIG5vdCBlcXVhbCB0byAzMiBkaWdpdHMuJywNCiAgICAgICAgJzU2JyA9PiAnRXhjZWVkcyB0aGUgc2V0IG51bWJlciBvZiByZXBsaWVzLicsDQogICAgICAgICc1NycgPT4gJ1RoZSBwYXJlbnQgYW5kIHRoZSBjaGlsZCBjb21tZW50cyBhcmUgbm90IGluIHRoZSBzYW1lIHBvc3QuJywNCiAgICAgICAgJzU4JyA9PiAnUGFyZW50IGNhdGVnb3J5IGRvZXMgbm90IGV4aXN0LicsDQogICAgICAgICc1OScgPT4gJ1N1YmNhdGVnb3J5IGRvZXMgbm90IGV4aXN0LicsDQogICAgICAgICc2MCcgPT4gJ1JlcGx5IHRvIGNvbW1lbnQgZmFpbGVkLicsDQogICAgICAgICc2MScgPT4gJ1JlY29yZCBkb2VzIG5vdCBleGlzdC4nLA0KICAgICAgICAnNjInID0+ICdBIHVzZXIgd2l0aCB0aGF0IG5hbWUgYWxyZWFkeSBleGlzdHMsIHBsZWFzZSBjaGFuZ2UgdGhlIHVzZXIgbmFtZS4nLA0KICAgICAgICAnNjMnID0+ICdEaXNhYmxlIGJyb3dzZSBkcmFmdCBwb3N0LicsDQogICAgICAgICc2NCcgPT4gJ0FjdGl2YXRlIGZhaWxlZCwgdGhlIGFwcGxpY2F0aW9uIGRvZXMgbm90IGFwcGx5IHRvIFotQmxvZ1BIUC4nLA0KICAgICAgICAnNjUnID0+ICdXaW5kb3dzIFBob25lIHVzZXJzIHVwZ3JhZGUgdG8gV2luZG93cyBQaG9uZSA4LjEgYmVmb3JlIHVwbG9hZGluZyBmaWxlcy4nLA0KICAgICAgICAnNjYnID0+ICdVc2VybmFtZSBhbmQgcGFzc3dvcmQgY2Fubm90IGJlIGVtcHR5LicsDQogICAgICAgICc2NycgPT4gJ015U1FMIGRhdGFiYXNlIGlzIG5vdCBjb25uZWN0ZWQuJywNCiAgICAgICAgJzY4JyA9PiAnU1FMaXRlIGRhdGFiYXNlIGNvdWxkIG5vdCBiZSBvcGVuZWQuJywNCiAgICAgICAgJzY5JyA9PiAnTm90IHF1ZXJ5IHRvIHJlbGV2YW50IGRhdGEuJywNCiAgICAgICAgJzcwJyA9PiAnQ29udGV4dCBjYW4gbm90IGJlIGVtcHR5LicsDQogICAgICAgICc3MScgPT4gJ0N1cnJlbnQgZWRpdHMgbm90IHNhdmVkLicsDQogICAgICAgICc3MicgPT4gJ05hbWUgY2FuIG5vdCBiZSBudWxsIG9yIG5vdCBpbiB0aGUgY29ycmVjdCBmb3JtYXQuJywNCiAgICAgICAgJzczJyA9PiAnUGxlYXNlIGNvbmZpcm0gcGFzc3dvcmQgaXMgc2V0IGNvcnJlY3RseS4nLA0KICAgICAgICAnNzQnID0+ICdBcmUgeW91IHN0aWxsIHVzaW5nIHRoZSBvbGQgYnJvd3NlciB2ZXJzaW9uIHdpdGggSUUga2VybmVsPyBQbGVhc2UgdXBncmFkZSB0byBJRTExISBcclxuWW91IGNhbiBjaGFuZ2UgdG8gYSBkaWZmZXJlbnQgYnJvd3NlciBpZiB5b3Ugd2FudCB0by4nLA0KICAgICAgICAnNzUnID0+ICdGaWxlIG5hbWUgY2FuIG5vdCBiZSBlbXB0eSEnLA0KICAgICAgICAnNzYnID0+ICdIdG1sIElEIGNhbiBub3QgYmUgZW1wdHkhJywNCiAgICAgICAgJzc3JyA9PiAnVXNlcm5hbWUgc2hvdWxkIGJlIGJldHdlZW4gMyBhbmQgMjAgY2hhcmFjdGVycy4nLA0KICAgICAgICAnNzgnID0+ICdUaGlzIGFwcGxpY2F0aW9uIHJlcXVpcmVzJXMgYW5kIGFib3ZlIHZlcnNpb24gb2YgWi1CbG9nUEhQLicsDQogICAgICAgICc3OScgPT4gJ1VzZXIgQWNjb3VudHMgbm90IEFwcHJvdmVkJywNCiAgICAgICAgJzgwJyA9PiAnVXNlciBBY2NvdW50IExvY2tlZCcsDQogICAgICAgICc4MScgPT4gJ1Vua25vd24gTWV0aG9kcyBvciBQcm9wZXJ0aWVzJywNCiAgICAgICAgJzgyJyA9PiAnU2l0ZSBoYXMgYmVlbiBjbG9zZWQuJywNCiAgICAgICAgJzgzJyA9PiAnQWN0aXZhdGUgdGhlIGFwcGxpY2F0aW9uLCBuZWVkIHRvIHJlbHkgb24gdGhlIGFwcGxpY2F0aW9uIG9mICVzIGFjdGl2YXRlZC4nLA0KICAgICAgICAnODQnID0+ICdEZWFjdGl2YXRlIHRoZSBhcHBsaWNhdGlvbiwgbmVlZCB0byByZWx5IG9uIHRoZSBhcHBsaWNhdGlvbiBvZiAlcyBpcyBkZWFjdGl2YXRlZC4nLA0KICAgICAgICAnODUnID0+ICdBY3RpdmF0ZSB0aGUgYXBwbGljYXRpb24sIG5lZWQgdG8gZGVhY3RpdmF0ZSB0aGUgY29uZmxpY3Qgb2YgYXBwbGljYXRpb24gb2YgJXMuJywNCiAgICAgICAgJzg2JyA9PiAnVGhlbWUgdGVtcGxhdGVzIGNvbXBpbGVkIGZpbGUgZG9lcyBub3QgZXhpc3QuJywNCiAgICAgICAgJzg3JyA9PiAnUmVnaXN0ZXJlZCBUeXBlIEZhaWxlZCcsDQogICAgICAgICc4OCcgPT4gJ1RoZSBmaWxlIHRoYXQgeW91IHVwbG9hZGVkIG5vdCBleGlzdCwgbWF5YmUgZXhjZWVkIHRoZSBtYXhpbXVtIHVwbG9hZCBsaW1pdCBvZiB0aGUgc2VydmVyLicsDQogICAgICAgICc4OScgPT4gJ0Vycm9yIHdoZW4gbG9hZGluZyBKYXZhU2NyaXB0LicsDQogICAgICAgICc5MCcgPT4gJ0FsaWFzIGRpc2FsbG93IHNwZWNpYWwgc3ltYm9scy4nLA0KICAgICAgICAnOTEnID0+ICdQSFAgdmVyc2lvbiBpcyB0b28gb2xkIHRvIGVuYWJsZSB0aGlzIGFwcGxpY2F0aW9uLCBpdCByZXF1aXJlcyAlcyBhbmQgYWJvdmUuJywNCiAgICAgICAgJzkyJyA9PiAnTWlzc2luZyAlcyBmdW5jdGlvbiwgY2FuIG5vdCBlbmFibGUgdGhpcyBhcHBsaWNhdGlvbi4nLA0KICAgICAgICAnOTMnID0+ICdUaGlzIGFydGljbGUgaXMgdXBkYXRlZCBieSBvdGhlciBwYWdlcywgc28gd2UgZG8gbm90IGF1dG9tYXRpY2FsbHkgYmFjayB1cCB0aGUgY29udGVudCBvbiB0aGUgY3VycmVudCBwYWdlIHVubGVzcyB5b3UgcmVmcmVzaCB0aGUgcGFnZS4nLA0KICAgICAgICAnOTQnID0+ICdZb3UgaGF2ZSBiZWVuIG9uIHRoaXMgcGFnZSBmb3IgJXMgaG91cnMuIFRvIHByb3RlY3QgeW91IGZyb20gYXR0YWNrcywgeW91IG1heSBuZWVkIHRvIHJlZnJlc2ggdGhlIHBhZ2UuJywNCiAgICApLA0KDQogICAgJ29mZmljYWxfdXJscycgPT4gYXJyYXkoDQogICAgICAgICdtb3JlX2hlbHAnID0+ICdodHRwczovL3d3dy56YmxvZ2NuLmNvbS9oZWxwLz9pZD17JWlkJX0mbWVzc2FnZT17JW1lc3NhZ2UlfScsDQogICAgKSwNCg0KLy8gUG9zc2libGUgY2F1c2VzIG9mIHRoZSBlcnJvcg0KICAgICdlcnJvcl9yZWFzb25zJyA9PiBhcnJheSgNCiAgICAgICAgLy8gLTEgZm9yIGRlZmF1bHQNCiAgICAgICAgJ2RlZmF1bHQnID0+ICcnLA0KDQogICAgICAgIC8vIFpCUCBlcnJvcnMgZmlyc3QNCiAgICAgICAgJzYnID0+ICcNCgkJCURpZCB5b3UgYWxyZWFkeSBsb2dpbmVkPyBQbGVhc2UgbG9naW4sIGFuZCB0aGVuIHJldHJ5IHRoZSBvcGVyYXRpb24uIDxici8+DQoJCQlEbyB5b3UgaGF2ZSB0aGUgcGVybWlzc2lvbnM/IFlvdSBjYW4gPGEgaHJlZj0ieyVCbG9nSG9zdCV9emJfc3lzdGVtL2NtZC5waHA/YWN0PW1pc2MmdHlwZT12cnMiIHRhcmdldD0iX2JsYW5rIj4gQ2xpY2sgaGVyZSB0byBzZWUgeW91ciBwZXJtaXNzaW9ucyA8L2E+LiA8YnIvPg0KCQkJPGJyLz4NCgkJJywNCiAgICAgICAgJzgnID0+ICcNCgkJCUhhdmUgeW91IGVudGVyZWQgdGhlIGNvcnJlY3QgbmFtZSBhbmQgcGFzc3dvcmQ/IDxici8+DQoJCQlJZiB5b3UgYXJlIHRoZSB3ZWJtYXN0ZXIgYW5kIGhhdmUgZm9yZ290dGVuIHlvdXIgcGFzc3dvcmQsIHlvdSBjYW4gY2xpY2sgdG8gZG93bmxvYWQgPGEgaHJlZj0iaHR0cHM6Ly93aWtpLnpibG9nY24uY29tL2Rva3UucGhwP2lkPXpibG9ncGhwOmVycm9yOiVFOSVBNiU5NiVFOSVBMSVCNSNlcnJvci04IiB0YXJnZXQ9Il9ibGFuayI+W0xvZ2luIEZhaWxlZF08L2E+LiA8YnIvPg0KCQkJPGJyLz4NCgkJJywNCiAgICAgICAgJzkxJyA9PiAnDQrCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgWW91ciBQSFAgdmVyc2lvbiBtYXkgYmUgdG9vIG9sZCB0byBlbmFibGUgdGhpcyBhcHBsaWNhdGlvbi4gWW91XCdkIGJldHRlciB0byBjb250YWN0IHlvdXIgaG9zdCBhbmQgdXBncmFkZSB0byB0aGUgbGF0ZXN0IFBIUCB2ZXJzaW9uIHRoZXkgY2FuIHByb3ZpZGUuIDxici8+DQrCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgRm9yIHNlY3VyaXR5IGFuZCBlZmZpY2llbmN5LCB3ZSBhbHNvIHN0cm9uZ2x5IHJlY29tbWVuZCB0byB1cGRhdGUgeW91ciBQSFAgdG8gdGhlIGxhdGVzdCB2ZXJzaW9uLg0KwqDCoMKgwqDCoMKgwqDCoCAnLA0KICAgICAgICAnOTInID0+ICcNCsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBZb3VyIGVudmlyb25tZW50IG1heSBiZSBtaXNzaW5nIHNvbWUgb2YgdGhlIG5lY2Vzc2FyeSBleHRlbnNpb25zLCBwbGVhc2UgY29udGFjdCB5b3VyIGhvc3QgdG8gZW5hYmxlIHRoZXNlIGV4dGVuc2lvbnMgdG8gdXNlIHRoaXMgYXBwbGljYXRpb24uIDxici8+IDxici8+DQrCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgWW91IGNhbiA8YSBocmVmPSJodHRwczovL3dpa2kuemJsb2djbi5jb20vZG9rdS5waHA/aWQ9emJsb2dwaHA6ZXJyb3I6JUU5JUE2JTk2JUU5JUExJUI1I2Vycm9yLTkyIiB0YXJnZXQ9Il9ibGFuayI+IGNsaWNrIGhlcmUgdG8gZ2V0IGEgcm91Z2ggbGlzdCBvZiBtaXNzaW5nIGV4dGVuc2lvbnMuIDwvYT4NCiAgICAgICAgICcsDQoNCiAgICAgICAgJ290aGVyJyA9PiBhcnJheSgNCiAgICAgICAgICAgIC8vIE90aGVyIGVycm9ycyB0aGVuDQogICAgICAgICAgICAnbXlzcWwnID0+ICcNCgkJCQkJUGxlYXNlIGNoZWNrIHlvdXIgTXlTUUwgY29uZmlndXJhdGlvbiBpbiB6Yl91c2Vycy9jX29wdGlvbi5waHAsIG9yIGNoZWNrIHRoZSBNeVNRTCBjb25uZWN0aW9uIGluZm9ybWF0aW9uIHRoYXQgeW91IGp1c3QgZmlsbC4gPGJyLz4NCgkJCQkJQW5kIHlvdXIgTXlTUUwgZGF0YWJhc2UgaGFzIGJlZW4gc3VjY2Vzc2Z1bGx5IHN0YXJ0ZWQ/IDxici8+DQoJCQk8YnIvPg0KCQkJJywNCg0KICAgICAgICAgICAgJ3NxbGl0ZScgPT4gJw0KCQkJUGxlYXNlIGNoZWNrIHlvdXIgU1FMaXRlIGNvbmZpZ3VyYXRpb24gaW4gemJfdXNlcnMvY19vcHRpb24ucGhwLiA8YnIvPg0KCQkJT3IgY2hlY2sgeW91IGhhdmUgcmVhZCBhbmQgd3JpdGUgcGVybWlzc2lvbnMgb2YgdGhhdCBTUUxpdGUgZmlsZS4gPGJyLz4NCgkJCTxici8+DQoJCQknLA0KDQogICAgICAgICAgICAnZGlzYWJsZWQgZm9yIHNlY3VyaXR5IHJlYXNvbnMnID0+ICcNCgkJCQlZb3UgY2FuIGRpc2FibGUgdGhlIFNhZmUgTW9kZSBvZiBQSFAuPGJyLz4NCgkJCQlPdGhlcndpc2UgeW91IGNhbiBkaXNhYmxlIHRoZSBwbHVnaW4gd2hpY2ggY2F1c2VkIHRoaXMgZXJyb3IgYW5kIGNvbnRhY3QgdGhlIGF1dGhvciBvZiB3aGljaC4NCgkJCQk8YnIvPg0KCQkJJywNCg0KICAgICAgICApLA0KDQogICAgICAgICdlbmQnID0+ICcNCgkJCUlmIHlvdSBhcmUgYSB2aXNpdG9yLCB0aGlzIG1heSBiZSBzb21ldGhpbmcgaGFwcGVuZWQuIFBsZWFzZSB0cnkgYWdhaW4gbGF0ZXIsIG9yIGNvbnRhY3QgdGhlIHdlYm1hc3Rlci4gPGJyLz4NCgkJCUlmIHlvdSBhcmUgdGhlIHdlYm1hc3RlciwgWW91IGNhbiBjbGljayBvbiA8YSBocmVmPSJ7JW1vcmVoZWxwJX0iIHRhcmdldD0iX2JsYW5rIj4gW21vcmVdIDwvYT4gdG8gZ2V0IG1vcmUgaGVscCBmcm9tIFotQmxvZyBXaWtpKENoaW5lc2Ugb25seSkuIFRoZXJlZm9yZSwgdG8gcHVibGlzaCBhIHRocmVhZCBpbiBFbmdsaXNoIGluIDxhIGhyZWY9Imh0dHBzOi8vYmJzLnpibG9nY24uY29tLyIgdGFyZ2V0PSJfYmxhbmsiPlotQmxvZyBvZmZpY2lhbCBmb3J1bSA8L2E+IHdpdGggZGV0YWlsZWQgZXJyb3IgZGVzY3JpcHRpb24gYW5kIHNjcmVlbnNob3RzIGZvciBoZWxwIGlzIGEgY2hvaWNlLg0KCQknLA0KICAgICksDQopOw0K</file>
	<file name='zb_users\language\zh-cn.php' crc32='AEFADDF3'  dt:dt='bin.base64'>PD9waHANCg0KLy88bGFuZ3VhZ2U+566A5L2T5Lit5paHPC9sYW5ndWFnZT4NCi8vVGhlIHNlY29uZCBsaW5lIG9mIHRoaXMgZmlsZSBpcyB0aGUgbmFtZSBvZiB0aGUgbGFuZ3VhZ2UNCg0KLy9DdXN0b20gSW5mb3JtYXRpb24NCi8vRG9uJ3QgZGVsZXRlICVzIGFuZCAoKQ0KDQpyZXR1cm4gYXJyYXkoDQoNCiAgICAnbGFuZycgICAgICAgICAgICAgICAgICA9PiAnemgtQ04nLA0KICAgICdsYW5nX2JjcDQ3JyAgICAgICAgICAgID0+ICd6aC1IYW5zJywgLy8gaHR0cDovL3Rvb2xzLmlldGYub3JnL2h0bWwvYmNwNDcNCiAgICAnbGFuZ19uYW1lJyAgICAgICAgICAgICA9PiAn566A5L2T5Lit5paHJywNCiAgICAnZm9udF9mYW1pbHknICAgICAgICAgICA9PiAnJywNCiAgICAnZm9udF9zaXplJyAgICAgICAgICAgICA9PiAnJywNCiAgICAnd2luZG93c19jaGFyYWN0ZXJfc2V0JyA9PiAnR0JLJywNCg0KLy9Gcm9udC1FbmQgJiBCYWNrLUVuZA0KICAgICdtc2cnID0+IGFycmF5KA0KICAgICAgICAnaWQnICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnSUQnLA0KICAgICAgICAnbmFtZScgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5ZCN56ewJywNCiAgICAgICAgJ3RpdGxlJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+agh+mimCcsDQogICAgICAgICdhbGlhcycgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfliKvlkI0nLA0KICAgICAgICAndGFncycgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5qCH562+JywNCiAgICAgICAgJ3NlYXJjaCcgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+aQnOe0oicsDQogICAgICAgICdjb21tZW50JyAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfor4TorronLA0KICAgICAgICAnY29udGVudCcgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5q2j5paHJywNCiAgICAgICAgJ2ludHJvJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+aRmOimgScsDQogICAgICAgICdkYXRlJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfml6XmnJ8nLA0KICAgICAgICAnY2F0ZWdvcnknICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5YiG57G7JywNCiAgICAgICAgJ3RvcCcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+e9rumhticsDQogICAgICAgICdzdGF0dXMnICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfnirbmgIEnLA0KICAgICAgICAndGVtcGxhdGUnICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5qih5p2/JywNCiAgICAgICAgJ2F1dGhvcicgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+S9nOiAhScsDQogICAgICAgICd0eXBlJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfnsbvlnosnLA0KICAgICAgICAnb3JkZXInICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5o6S5bqPJywNCiAgICAgICAgJ3N1Ym1pdCcgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+aPkOS6pCcsDQogICAgICAgICdyZXNldCcgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfph43nva4nLA0KICAgICAgICAnZXJyb3InICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn6ZSZ6K+vJywNCiAgICAgICAgJ2VtYWlsJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+mCrueusScsDQogICAgICAgICdob21lcGFnZScgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfkuLvpobUnLA0KICAgICAgICAnYW5vbnltb3VzJyAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn6K6/5a6iJywNCiAgICAgICAgJ3VubmFtZWQnICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+acquWRveWQjScsDQogICAgICAgICdmaWxlbmFtZScgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfmlofku7blkI0nLA0KICAgICAgICAnaHRtbGlkJyAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnSFRNTCBJRCcsDQogICAgICAgICdzaXplJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICflpKflsI8nLA0KICAgICAgICAnbm9uZScgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5pegJywNCiAgICAgICAgJ2FueScgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+S7u+aEjycsDQogICAgICAgICdlZGl0JyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfnvJbovpEnLA0KICAgICAgICAnZGVsJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5Yig6ZmkJywNCiAgICAgICAgJ2FueScgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+S7u+aEjycsDQogICAgICAgICdsb2dpbicgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfnmbvlvZUnLA0KICAgICAgICAnZW5hYmxlJyAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5ZCv55SoJywNCiAgICAgICAgJ2Rpc2FibGUnICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+WBnOeUqCcsDQogICAgICAgICdtYW5hZ2UnICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfnrqHnkIYnLA0KICAgICAgICAnYWRtaW4nICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5ZCO5Y+w566h55CGJywNCiAgICAgICAgJ3dlbGNvbWUnICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+asoui/jicsDQogICAgICAgICdsb2dvdXQnICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfms6jplIAnLA0KICAgICAgICAnYXVkaXQnICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5a6h5qC4JywNCiAgICAgICAgJ3Bhc3MnICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+mAmui/hycsDQogICAgICAgICdhcnRpY2xlJyAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfmlofnq6AnLA0KICAgICAgICAncGFnZScgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn6aG16Z2iJywNCiAgICAgICAgJ3llYXJfbW9udGgnICAgICAgICAgICAgICAgICAgICAgICAgPT4gJyV5JeW5tCVtJeaciCcsDQogICAgICAgICd5ZWFyX21vbnRoX2RheScgICAgICAgICAgICAgICAgICAgID0+ICcleSXlubQlbSXmnIglZCXml6UnLA0KICAgICAgICAnbnVtYmVyX3BhZ2UnICAgICAgICAgICAgICAgICAgICAgICA9PiAn56ysJW51bSXpobUnLA0KICAgICAgICAncGFyZW50X2NhdGVnb3J5JyAgICAgICAgICAgICAgICAgICA9PiAn54i25YiG57G7JywNCiAgICAgICAgJ3Bhc3N3b3JkJyAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+WvhueggScsDQogICAgICAgICdyZV9wYXNzd29yZCcgICAgICAgICAgICAgICAgICAgICAgID0+ICfnoa7orqTlr4bnoIEnLA0KICAgICAgICAndXBsb2FkX2ZpbGUnICAgICAgICAgICAgICAgICAgICAgICA9PiAn6YCJ5oup6ZyA6KaB5LiK5Lyg55qE5paH5Lu2JywNCiAgICAgICAgJ2F1dG9fcmVuYW1lX3VwbG9hZGZpbGUnICAgICAgICAgICAgPT4gJ+iHquWKqOmHjeWRveWQjeaWh+S7tuWQjScsDQogICAgICAgICd1c2VybmFtZScgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfnlKjmiLflkI0nLA0KICAgICAgICAncmV0dXJuX3RvX3NpdGUnICAgICAgICAgICAgICAgICAgICA9PiAn6L+U5ZueJywNCiAgICAgICAgJ2NoZWNrX2NvbW1lbnQnICAgICAgICAgICAgICAgICAgICAgPT4gJ+WuoeaguOivhOiuuicsDQogICAgICAgICdkYXNoYm9hcmQnICAgICAgICAgICAgICAgICAgICAgICAgID0+ICflkI7lj7DpppbpobUnLA0KICAgICAgICAnc2V0dGluZ3MnICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn572R56uZ6K6+572uJywNCiAgICAgICAgJ29mZmljaWFsX3dlYnNpdGUnICAgICAgICAgICAgICAgICAgPT4gJ+WumOaWuee9keermScsDQogICAgICAgICdwYXJlbmRfaWQnICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfkuIrlsYJJRCcsDQogICAgICAgICdzZWxlY3RfYWxsJyAgICAgICAgICAgICAgICAgICAgICAgID0+ICflhajpgIknLA0KICAgICAgICAnbmV3X2FydGljbGUnICAgICAgICAgICAgICAgICAgICAgICA9PiAn5paw5bu65paH56ugJywNCiAgICAgICAgJ25ld19wYWdlJyAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+aWsOW7uumhtemdoicsDQogICAgICAgICduZXdfdGFnJyAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfmlrDlu7rmoIfnrb4nLA0KICAgICAgICAnbmV3X21lbWJlcicgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5paw5bu655So5oi3JywNCiAgICAgICAgJ25ld19jYXRlZ29yeScgICAgICAgICAgICAgICAgICAgICAgPT4gJ+aWsOW7uuWIhuexuycsDQogICAgICAgICduZXdfbW9kdWxlJyAgICAgICAgICAgICAgICAgICAgICAgID0+ICfmlrDlu7rmqKHlnZcnLA0KICAgICAgICAnYXJ0aWNsZV9lZGl0JyAgICAgICAgICAgICAgICAgICAgICA9PiAn5paH56ug57yW6L6RJywNCiAgICAgICAgJ3BhZ2VfZWRpdCcgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+mhtemdoue8lui+kScsDQogICAgICAgICd0YWdfZWRpdCcgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfmoIfnrb7nvJbovpEnLA0KICAgICAgICAnY2F0ZWdvcnlfZWRpdCcgICAgICAgICAgICAgICAgICAgICA9PiAn6aG16Z2i57yW6L6RJywNCiAgICAgICAgJ2FydGljbGVfbWFuYWdlJyAgICAgICAgICAgICAgICAgICAgPT4gJ+aWh+eroOeuoeeQhicsDQogICAgICAgICdwYWdlX21hbmFnZScgICAgICAgICAgICAgICAgICAgICAgID0+ICfpobXpnaLnrqHnkIYnLA0KICAgICAgICAnY2F0ZWdvcnlfbWFuYWdlJyAgICAgICAgICAgICAgICAgICA9PiAn5YiG57G7566h55CGJywNCiAgICAgICAgJ2NhdGVnb3J5X2VkaXQnICAgICAgICAgICAgICAgICAgICAgPT4gJ+WIhuexu+e8lui+kScsDQogICAgICAgICd0YWdfbWFuYWdlJyAgICAgICAgICAgICAgICAgICAgICAgID0+ICfmoIfnrb7nrqHnkIYnLA0KICAgICAgICAndGFnX2VkaXQnICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5qCH562+57yW6L6RJywNCiAgICAgICAgJ21lbWJlcl9lZGl0JyAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+eUqOaIt+e8lui+kScsDQogICAgICAgICdtb2R1bGVfZWRpdCcgICAgICAgICAgICAgICAgICAgICAgID0+ICfmqKHlnZfnvJbovpEnLA0KICAgICAgICAnbW9kdWxlX25hdmJhcicgICAgICAgICAgICAgICAgICAgICA9PiAn5a+86Iiq5qCPJywNCiAgICAgICAgJ21vZHVsZV9taXNjJyAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+Wbvuagh+axh+mbhicsDQogICAgICAgICdtb2R1bGVfbGluaycgICAgICAgICAgICAgICAgICAgICAgID0+ICflj4vmg4Xpk77mjqUnLA0KICAgICAgICAnbW9kdWxlX2Zhdm9yaXRlJyAgICAgICAgICAgICAgICAgICA9PiAn572R56uZ5pS26JePJywNCiAgICAgICAgJ2NvbW1lbnRfbWFuYWdlJyAgICAgICAgICAgICAgICAgICAgPT4gJ+ivhOiuuueuoeeQhicsDQogICAgICAgICd1cGxvYWRfbWFuYWdlJyAgICAgICAgICAgICAgICAgICAgID0+ICfpmYTku7bnrqHnkIYnLA0KICAgICAgICAnbWVtYmVyX21hbmFnZScgICAgICAgICAgICAgICAgICAgICA9PiAn55So5oi3566h55CGJywNCiAgICAgICAgJ3RoZW1lX21hbmFnZScgICAgICAgICAgICAgICAgICAgICAgPT4gJ+S4u+mimOeuoeeQhicsDQogICAgICAgICdwbHVnaW5fbWFuYWdlJyAgICAgICAgICAgICAgICAgICAgID0+ICfmj5Lku7bnrqHnkIYnLA0KICAgICAgICAnbW9kdWxlX21hbmFnZScgICAgICAgICAgICAgICAgICAgICA9PiAn5qih5Z2X566h55CGJywNCiAgICAgICAgJ3NpdGVfYW5hbHl6ZScgICAgICAgICAgICAgICAgICAgICAgPT4gJ+e9keermeS/oeaBrycsDQogICAgICAgICdpbmZvX2ludHJvJyAgICAgICAgICAgICAgICAgICAgICAgID0+ICfnvZHnq5nmkZjopoEnLA0KICAgICAgICAncmVmcmVzaF9jYWNoZScgICAgICAgICAgICAgICAgICAgICA9PiAn5riF56m657yT5a2Y5bm26YeN5paw57yW6K+R5qih5p2/JywNCiAgICAgICAgJ2xhdGVzdF9uZXdzJyAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+acgOaWsOWKqOaAgeS/oeaBrycsDQogICAgICAgICdyZWZyZXNoJyAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfliLfmlrAnLA0KICAgICAgICAncG9zdF9jb3VudCcgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5paH56ug5pWw6YePJywNCiAgICAgICAgJ2Jhc2ljX3NldHRpbmcnICAgICAgICAgICAgICAgICAgICAgPT4gJ+WfuuehgOiuvue9ricsDQogICAgICAgICdnbG9iYWxfc2V0dGluZycgICAgICAgICAgICAgICAgICAgID0+ICflhajlsYDorr7nva4nLA0KICAgICAgICAncGFnZV9zZXR0aW5nJyAgICAgICAgICAgICAgICAgICAgICA9PiAn6aG16Z2i6K6+572uJywNCiAgICAgICAgJ2NvbW1lbnRfc2V0dGluZycgICAgICAgICAgICAgICAgICAgPT4gJ+ivhOiuuuiuvue9ricsDQogICAgICAgICdvdGhlcl9zZXR0aW5nJyAgICAgICAgICAgICAgICAgICAgID0+ICflhbblroPorr7nva4nLA0KICAgICAgICAnYmxvZ19ob3N0JyAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn572R56uZ5Zyw5Z2AJywNCiAgICAgICAgJ2Jsb2dfaG9zdF9hZGQnICAgICAgICAgICAgICAgICAgICAgPT4gJ+m7mOiupOiHquWKqOivu+WPluW9k+WJjee9keWdgO+8jOWmgumcgOWbuuWumue9keermeWfn+WQjeivt+eCueWHu+aMiemSruW5tui+k+WFpeWfn+WQjeOAgicsDQogICAgICAgICdjb3B5cmlnaHQnICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfniYjmnYPor7TmmI4nLA0KICAgICAgICAnY29weXJpZ2h0X2FkZCcgICAgICAgICAgICAgICAgICAgICA9PiAn5Y+v5Lul5aGr5YWl572R56uZ57uf6K6h44CB5aSH5qGI5Y+3562J5YaF5a6544CCJywNCiAgICAgICAgJ2Jsb2dfbmFtZScgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+e9keermeagh+mimCcsDQogICAgICAgICdibG9nX3N1Ym5hbWUnICAgICAgICAgICAgICAgICAgICAgID0+ICfnvZHnq5nlia/moIfpopgnLA0KICAgICAgICAncGVybWFuZW50X2RvbWFpbicgICAgICAgICAgICAgICAgICA9PiAn5Zu65a6a572R56uZ5Z+f5ZCNJywNCiAgICAgICAgJ2Jsb2dfdGltZXpvbmUnICAgICAgICAgICAgICAgICAgICAgPT4gJ+e9keermeaXtuWMuicsDQogICAgICAgICdibG9nX2xhbmd1YWdlJyAgICAgICAgICAgICAgICAgICAgID0+ICfnvZHnq5nor63oqIAnLA0KICAgICAgICAnYWxsb3dfdXBsb2FkX3R5cGUnICAgICAgICAgICAgICAgICA9PiAn5YWB6K645LiK5Lyg5paH5Lu255qE57G75Z6LJywNCiAgICAgICAgJ2FsbG93X3VwbG9hZF9zaXplJyAgICAgICAgICAgICAgICAgPT4gJ+WFgeiuuOS4iuS8oOaWh+S7tueahOWkp+WwjyjljZXkvY1NQiknLA0KICAgICAgICAnZGVidWdfbW9kZScgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5byA5Y+R5qih5byPJywNCiAgICAgICAgJ2Rpc3BsYXlfY291bnQnICAgICAgICAgICAgICAgICAgICAgPT4gJ+WIl+ihqOmhteaYvuekuuaWh+eroOeahOaVsOmHjycsDQogICAgICAgICdwYWdlYmFyX2NvdW50JyAgICAgICAgICAgICAgICAgICAgID0+ICfnv7vpobXmnaHmmL7npLrnv7vpobXnmoTmlbDph48nLA0KICAgICAgICAnc2VhcmNoX2NvdW50JyAgICAgICAgICAgICAgICAgICAgICA9PiAn5YWB6K645pCc57Si6L+U5Zue5paH56ug55qE5pyA5aSn5pWw6YePJywNCiAgICAgICAgJ21hbmFnZV9jb3VudCcgICAgICAgICAgICAgICAgICAgICAgPT4gJ+WQjuWPsOavj+mhteaWh+eroOaYvuekuuaVsOmHjycsDQogICAgICAgICdjb21tZW50X3R1cm5vZmYnICAgICAgICAgICAgICAgICAgID0+ICflhbPpl63or4Torrrlip/og70nLA0KICAgICAgICAnY29tbWVudF9yZXZlcnNlX29yZGVyJyAgICAgICAgICAgICA9PiAn5ZCv55So6K+E6K665YCS5bqP6L6T5Ye6JywNCiAgICAgICAgJ2NvbW1lbnRzX2Rpc3BsYXlfY291bnQnICAgICAgICAgICAgPT4gJ+avj+mhtei+k+WHuuivhOiuuuaVsOmHjycsDQogICAgICAgICdjb21tZW50X3ZlcmlmeV9lbmFibGUnICAgICAgICAgICAgID0+ICflkK/nlKjor4Torrrpqozor4HnoIHlip/og70nLA0KICAgICAgICAnc3RheV9zaWduZWRfaW4nICAgICAgICAgICAgICAgICAgICA9PiAn5L+d5oyB55m75b2VJywNCiAgICAgICAgJ25vdGlmeScgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+mAmuefpScsDQogICAgICAgICdjdXJyZW50X21lbWJlcicgICAgICAgICAgICAgICAgICAgID0+ICflvZPliY3nlKjmiLcnLA0KICAgICAgICAnY3VycmVudF92ZXJzaW9uJyAgICAgICAgICAgICAgICAgICA9PiAn5b2T5YmN54mI5pysJywNCiAgICAgICAgJ2FsbF9hcnRpbGVzJyAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+aWh+eroOaAu+aVsCcsDQogICAgICAgICdhbGxfcGFnZXMnICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfpobXpnaLmgLvmlbAnLA0KICAgICAgICAnYWxsX3RhZ3MnICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5qCH562+5oC75pWwJywNCiAgICAgICAgJ2FsbF9jYXRlZ29yeXMnICAgICAgICAgICAgICAgICAgICAgPT4gJ+WIhuexu+aAu+aVsCcsDQogICAgICAgICdhbGxfY29tbWVudHMnICAgICAgICAgICAgICAgICAgICAgID0+ICfor4TorrrmgLvmlbAnLA0KICAgICAgICAnYWxsX21lbWJlcnMnICAgICAgICAgICAgICAgICAgICAgICA9PiAn55So5oi35oC75pWwJywNCiAgICAgICAgJ2FsbF92aWV3cycgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+a1j+iniOaAu+aVsCcsDQogICAgICAgICdhbGxfdXBsb2FkcycgICAgICAgICAgICAgICAgICAgICAgID0+ICfpmYTku7bmgLvmlbAnLA0KICAgICAgICAnY3VycmVudF90aGVtZScgICAgICAgICAgICAgICAgICAgICA9PiAn5b2T5YmN5Li76aKYJywNCiAgICAgICAgJ2N1cnJlbnRfc3R5bGUnICAgICAgICAgICAgICAgICAgICAgPT4gJ+W9k+WJjeagt+W8jycsDQogICAgICAgICdkZWZhdWx0X2F2YXRhcicgICAgICAgICAgICAgICAgICAgID0+ICfpu5jorqTlpLTlg48nLA0KICAgICAgICAnc3R5bGUnICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5qC35byPJywNCiAgICAgICAgJ3RoZW1lJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+S4u+mimCcsDQogICAgICAgICdzeXN0ZW1fbW9kdWxlJyAgICAgICAgICAgICAgICAgICAgID0+ICfns7vnu5/mqKHlnZcnLA0KICAgICAgICAndXNlcl9tb2R1bGUnICAgICAgICAgICAgICAgICAgICAgICA9PiAn55So5oi36Ieq5a6a5LmJ5qih5Z2XJywNCiAgICAgICAgJ3RoZW1lX21vZHVsZScgICAgICAgICAgICAgICAgICAgICAgPT4gJ+S4u+mimGluY2x1ZGXmlofku7blpLnlrZjlgqjnmoTmlofku7blnovmqKHlnZcnLA0KICAgICAgICAncGx1Z2luX21vZHVsZScgICAgICAgICAgICAgICAgICAgICA9PiAn5Li76aKY5ZKM5o+S5Lu25Yib5bu655qE5qih5Z2XJywNCiAgICAgICAgJ3NpZGViYXInICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+m7mOiupOS+p+agjyAnLA0KICAgICAgICAnc2lkZWJhcjInICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5L6n5qCPIDInLA0KICAgICAgICAnc2lkZWJhcjMnICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5L6n5qCPIDMnLA0KICAgICAgICAnc2lkZWJhcjQnICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5L6n5qCPIDQnLA0KICAgICAgICAnc2lkZWJhcjUnICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5L6n5qCPIDUnLA0KICAgICAgICAnZGlzcGxheV9zdWJjYXRlZ29yeXMnICAgICAgICAgICAgICA9PiAn5YiX5Ye65YiG57G75LiL5omA5pyJ5a2Q5YiG57G755qE5paH56ugJywNCiAgICAgICAgJ2RyYWdfbW9kdWxlX3RvX3NpZGViYXInICAgICAgICAgICAgPT4gJ+ivt+aLluWKqOmcgOimgeeahOaooeWdl+WIsOWPs+S+p+WMuuWfn+aMh+WumuS+p+agj+OAguS+p+agj+S4reeahOaooeWdl+WPr+aOkuW6j++8jOS5n+WPr+aLluiHs+W3puS+p+WMuuWfn+enu+mZpOOAgicsDQogICAgICAgICdzaWRlYmFyX21vZHVsZV9jb3VudCcgICAgICAgICAgICAgID0+ICflhoXnva7mnIklc+S4quaooeWdlycsDQogICAgICAgICd4bWxycGNfYWRkcmVzcycgICAgICAgICAgICAgICAgICAgID0+ICdYTUwtUlBD5Y2P6K6u5Zyw5Z2AJywNCiAgICAgICAgJ3N5c3RlbV9lbnZpcm9ubWVudCcgICAgICAgICAgICAgICAgPT4gJ+ezu+e7n+eOr+WigycsDQogICAgICAgICd2aWV3X3JpZ2h0cycgICAgICAgICAgICAgICAgICAgICAgID0+ICfmn6XnnIvmnYPpmZAnLA0KICAgICAgICAnbWVtYmVyX2xldmVsJyAgICAgICAgICAgICAgICAgICAgICA9PiAn55So5oi357qn5YirJywNCiAgICAgICAgJ2Rpc2FibGVfY29tbWVudCcgICAgICAgICAgICAgICAgICAgPT4gJ+emgeatouivhOiuuicsDQogICAgICAgICdkZWZhdWx0X3RlbXBsYXRlJyAgICAgICAgICAgICAgICAgID0+ICfpu5jorqTmqKHmnb8nLA0KICAgICAgICAnZ2VuZXJhdGVfc3VtbWFyeScgICAgICAgICAgICAgICAgICA9PiAn6Ieq5Yqo55Sf5oiQ5pGY6KaBJywNCiAgICAgICAgJ2FkZF90b19uYXZiYXInICAgICAgICAgICAgICAgICAgICAgPT4gJ+WKoOWFpeWvvOiIquagj+iPnOWNlScsDQogICAgICAgICdoZWxwX2dlbmVyYXRlX3N1bW1hcnknICAgICAgICAgICAgID0+ICflnKjmraPmlofmj5LlhaXpppbmnaHliIbpmpTnrKbvvIzliJnliIbpmpTnrKbku6XkuIrnmoTlhoXlrrnlsIbkvZzkuLrmkZjopoHjgILmgqjkuZ/lj6/ku6UnLA0KICAgICAgICAndXNlX2NvbW1hc190b19zZXBhcmF0ZScgICAgICAgICAgICA9PiAn6YCX5Y+35YiG5YmyJywNCiAgICAgICAgJ3Nob3dfY29tbW9uX3RhZ3MnICAgICAgICAgICAgICAgICAgPT4gJ+aYvuekuuW4uOeUqOagh+etvicsDQogICAgICAgICdjYXRlZ29yeV9hcml0bGVzX2RlZmF1bHRfdGVtcGxhdGUnID0+ICfor6XliIbnsbvmlofnq6DnmoTpu5jorqTmqKHmnb8nLA0KICAgICAgICAnY29uZmlybV9vcGVyYXRpbmcnICAgICAgICAgICAgICAgICA9PiAn5Y2V5Ye74oCc56Gu5a6a4oCd57un57ut44CC5Y2V5Ye74oCc5Y+W5raI4oCd5YGc5q2i44CCJywNCiAgICAgICAgJ2JhdGNoX29wZXJhdGlvbicgICAgICAgICAgICAgICAgICAgPT4gJ+aJuemHj+aTjeS9nCcsDQogICAgICAgICdvcGVyYXRpb25fc3VjY2VlZCcgICAgICAgICAgICAgICAgID0+ICfmk43kvZzmiJDlip8nLA0KICAgICAgICAnb3BlcmF0aW9uX2ZhaWxlZCcgICAgICAgICAgICAgICAgICA9PiAn5pON5L2c5aSx6LSlJywNCiAgICAgICAgJ2JhdGNoX29wZXJhdGlvbl9pbl9wcm9ncmVzcycgICAgICAgPT4gJ+aJuemHj+aTjeS9nOi/m+ihjOS4rS4uLicsDQogICAgICAgICdwcmV2aW91c19vcGVyYXRpb25fbm90X2ZpbmlzaGVkJyAgID0+ICfkuYvliY3nmoTmibnph4/mk43kvZzov5jmnKrlhajpg6jmiafooYws6K+354K55Ye7JywgJyw8YSBocmVmPVwnI1wnPue7p+e7rTwvYT4nLCAnLOaJp+ihjOWujOaJgOacieeahOaTjeS9nC4nLA0KICAgICAgICAnZXJyb3JfdGlwcycgICAgICAgICAgICAgICAgICAgICAgICA9PiAn6ZSZ6K+v5o+Q56S6JywNCiAgICAgICAgJ2Vycm9yX2luZm8nICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+mUmeivr+S/oeaBrycsDQogICAgICAgICdmaWxlX2xpbmUnICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfmlofku7bkvY3nva4nLA0KICAgICAgICAncmVxdWVzdF9kYXRhJyAgICAgICAgICAgICAgICAgICAgICA9PiAn6K+35rGC5pWw5o2uJywNCiAgICAgICAgJ2luY2x1ZGVfZmlsZScgICAgICAgICAgICAgICAgICAgICAgPT4gJ+W8leeUqOaWh+S7ticsDQogICAgICAgICdiYWNrJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfov5Tlm54nLA0KICAgICAgICAndmFsaWRjb2RlJyAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn6aqM6K+B56CBJywNCiAgICAgICAgJ2hpZGVfdGl0bGUnICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+makOiXj+agh+mimCcsDQogICAgICAgICdjYXRhbG9nX3N0eWxlX25vcm1hbCcgICAgICAgICAgICAgID0+ICfmma7pgJrlnosnLA0KICAgICAgICAnY2F0YWxvZ19zdHlsZV90cmVlJyAgICAgICAgICAgICAgICA9PiAn5qCR5Z6LJywNCiAgICAgICAgJ2NhdGFsb2dfc3R5bGVfdWwnICAgICAgICAgICAgICAgICAgPT4gJ1VM5bWM5aWX5Z6LJywNCiAgICAgICAgJ2FsbF9kZWwnICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+WIoOmZpOaJgOmAiemhueebricsDQogICAgICAgICdhbGxfcGFzcycgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfpgJrov4fmiYDpgInpobnnm64nLA0KICAgICAgICAnYWxsX2F1ZGl0JyAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5a6h5qC45omA6YCJ6aG555uuJywNCiAgICAgICAgJ2d6aXBfY29tcHJlc3MnICAgICAgICAgICAgICAgICAgICAgPT4gJ0daaXDljovnvKknLA0KICAgICAgICAnc3ludGF4X2hpZ2hfbGlnaHRlcicgICAgICAgICAgICAgICA9PiAn5Luj56CB6auY5LquJywNCiAgICAgICAgJ2Nsb3NlX3NpdGUnICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+WFs+mXree9keermScsDQogICAgICAgICdtYXhfbGlfaW5fdWwnICAgICAgICAgICAgICAgICAgICAgID0+ICdVTOWGhUxJ55qE5pyA5aSn6KGM5pWwJywNCiAgICAgICAgJ25vX3JlZnJlc2hfY29udGVudCcgICAgICAgICAgICAgICAgPT4gJ+emgeatouezu+e7n+abtOaWsOaooeWdl+WGheWuuScsDQogICAgICAgICd1bmNhdGVnb3J5JyAgICAgICAgICAgICAgICAgICAgICAgID0+ICfmnKrliIbnsbsnLA0KICAgICAgICAnY2FsZW5kYXInICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5pel5Y6GJywNCiAgICAgICAgJ2NvbnRyb2xfcGFuZWwnICAgICAgICAgICAgICAgICAgICAgPT4gJ+aOp+WItumdouadvycsDQogICAgICAgICdtb2R1bGVfY2F0YWxvZycgICAgICAgICAgICAgICAgICAgID0+ICfnvZHnq5nliIbnsbsnLA0KICAgICAgICAnbW9kdWxlX2NvbW1lbnRzJyAgICAgICAgICAgICAgICAgICA9PiAn5pyA5paw55WZ6KiAJywNCiAgICAgICAgJ21vZHVsZV9hcmNoaXZlcycgICAgICAgICAgICAgICAgICAgPT4gJ+aWh+eroOW9kuahoycsDQogICAgICAgICdtb2R1bGVfc3RhdGlzdGljcycgICAgICAgICAgICAgICAgID0+ICfnq5nngrnkv6Hmga8nLA0KICAgICAgICAnbW9kdWxlX2F1dGhvcnMnICAgICAgICAgICAgICAgICAgICA9PiAn5L2c6ICF5YiX6KGoJywNCiAgICAgICAgJ21vZHVsZV9wcmV2aW91cycgICAgICAgICAgICAgICAgICAgPT4gJ+acgOi/keWPkeihqCcsDQogICAgICAgICdtb2R1bGVfdGFncycgICAgICAgICAgICAgICAgICAgICAgID0+ICfmoIfnrb7liJfooagnLA0KICAgICAgICAnYWRtaW5fbG9naW4nICAgICAgICAgICAgICAgICAgICAgICA9PiAn55m75b2V5ZCO5Y+wJywNCiAgICAgICAgJ3RvcF9pbmRleCcgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+mmlumhtScsDQogICAgICAgICd0b3BfZ2xvYmFsJyAgICAgICAgICAgICAgICAgICAgICAgID0+ICflhajlsYAnLA0KICAgICAgICAndG9wX2NhdGVnb3J5JyAgICAgICAgICAgICAgICAgICAgICA9PiAn5YiG57G7JywNCiAgICAgICAgJ2p1bXBfY29tbWVudCcgICAgICAgICAgICAgICAgICAgICAgPT4gJ+afpeeci+ivhOiuuklEPScsDQogICAgICAgICd5ZWFyX3N1ZmZpeCcgICAgICAgICAgICAgICAgICAgICAgID0+ICflubQnLA0KICAgICAgICAnd2Vla19zdWZmaXgnICAgICAgICAgICAgICAgICAgICAgICA9PiAn5ZGoJywNCiAgICAgICAgJ3RpbWUnICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+aXtumXtCcsDQogICAgICAgICdob3VyJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICflsI/ml7YnLA0KICAgICAgICAnbWludXRlJyAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5YiG6ZKfJywNCiAgICAgICAgJ3NlY29uZCcgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+enkumSnycsDQogICAgICAgICdtaWxsaXNlYycgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfmr6vnp5InLA0KICAgICAgICAnY2xvc2UnICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5a6M5oiQJywNCiAgICAgICAgJ2N1cnJlbnQnICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+eOsOWcqCcsDQogICAgICAgICdwcmV2X21vbnRoJyAgICAgICAgICAgICAgICAgICAgICAgID0+ICfkuIrkuKrmnIgnLA0KICAgICAgICAnbmV4dF9tb250aCcgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5LiL5Liq5pyIJywNCiAgICAgICAgJ3Byb2dyYW0nICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+eoi+W6jycsDQogICAgICAgICdpbnRlcmZhY2UnICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfnlYzpnaInLA0KICAgICAgICAnc3VwcG9ydCcgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAn5pSv5oyBJywNCiAgICAgICAgJ3RoYW5rcycgICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+aEn+iwoicsDQogICAgICAgICd3ZWJzaXRlJyAgICAgICAgICAgICAgICAgICAgICAgICAgID0+ICfnm7jlhbPpk77mjqUnLA0KICAgICAgICAnZGV2ZWxvcF9pbnRybycgICAgICAgICAgICAgICAgICAgICA9PiAnWi1CbG9nUEhQ572R56uZ5ZKM56iL5bqP5byA5Y+RJywNCiAgICAgICAgJ2RlZmF1bHQnICAgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJ+m7mOiupCcsDQogICAgICAgICdkZWJ1Z19iYWNrdHJhY2UnICAgICAgICAgICAgICAgICAgID0+ICfloIbmoIjot5/ouKonLA0KICAgICAgICAncG9zc2libGVfY2F1c2VzX2Vycm9yJyAgICAgICAgICAgICA9PiAn5Y+v6IO955qE6ZSZ6K+v5Y6f5ZugJywNCiAgICAgICAgJ2Rpc3BsYXlfbW9yZV9pbmZvJyAgICAgICAgICAgICAgICAgPT4gJ+aYvuekuuabtOWkmueahOS/oeaBrycsDQogICAgICAgICdlcnJvcl9sb2FkX2pzJyAgICAgICAgICAgICAgICAgICAgID0+ICdKYXZhU2NyaXB05Yqg6L295aSx6LSl44CCXG7ngrnlh7vigJznoa7lrprigJ3ljbPlj6/ojrflvpfkv67lpI3mlrnmoYjvvIzngrnlh7vigJzlj5bmtojigJ3nu6fnu63jgIInLA0KICAgICAgICAnY29tbWVudF9hdWRpdCcgICAgICAgICAgICAgICAgICAgICA9PiAn5a6h5qC46K+E6K66JywNCiAgICAgICAgJ2NvbW1lbnRfYXVkaXRfY29tbWVudCcgICAgICAgICAgICAgPT4gJ+aJk+W8gOWQjuaJgOaciemdnueuoeeQhuWRmOWPkeW4g+eahOivhOiuuumDveWwhui/m+WFpeWuoeaguOeKtuaAgScsDQogICAgICAgICdkZWJ1Z2dpbmdfd2FybmluZycgICAgICAgICAgICAgICAgID0+ICfmgqjnmoRaLUJsb2dQSFDmiZPlvIDkuoblvIDlj5HmqKHlvI/jgILmraTmqKHlvI/kuIvnvZHnq5nmnInooqvpu5HnmoTpo47pmanvvIzlrp7pmYXpg6jnvbLlnKjnur/kuIrnmoTnvZHnq5nor7flj4rml7blhbPpl63lvIDlj5HmqKHlvI/vvIEnLA0KICAgICAgICAncGVybWFuZW50X2RvbWFpbl93aXRoX2FkbWluJyAgICAgICA9PiAn5ZCO5Y+w5Lmf5L2/55So5Zu65a6a5Z+f5ZCNJywNCiAgICAgICAgJ2N1cnJlbnRfdGVtcGxhdGUnICAgICAgICAgICAgICAgICAgPT4gJ+W9k+WJjeaooeadvycsDQogICAgICAgICdhZGRpdGlvbmFsX3NlY3VyaXR5JyAgICAgICAgICAgICAgID0+ICflronlhajlop7lvLonLA0KICAgICAgICAnJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnJywNCiAgICApLA0KDQovL0FjdGlvbg0KICAgICdhY3Rpb25zJyA9PiBhcnJheSgNCiAgICAgICAgJ2xvZ2luJyAgICAgICA9PiAn55m75b2VJywNCiAgICAgICAgJ2xvZ291dCcgICAgICA9PiAn55m75Ye6JywNCiAgICAgICAgJ3ZlcmlmeScgICAgICA9PiAn6aqM6K+BJywNCiAgICAgICAgJ2FkbWluJyAgICAgICA9PiAn566h55CGJywNCiAgICAgICAgJ3NlYXJjaCcgICAgICA9PiAn5pCc57SiJywNCiAgICAgICAgJ21pc2MnICAgICAgICA9PiAn5p2C6aG5JywNCiAgICAgICAgJ2ZlZWQnICAgICAgICA9PiAn5p+l55yLUlNTJywNCiAgICAgICAgJ2NtdCcgICAgICAgICA9PiAn5Y+R6KGo6K+E6K66JywNCiAgICAgICAgJ2dldGNtdCcgICAgICA9PiAn6I635Y+W6K+E6K66JywNCiAgICAgICAgJ2FqYXgnICAgICAgICA9PiAnQUpBWCcsDQogICAgICAgICdBcnRpY2xlRWR0JyAgPT4gJ+aWh+eroOe8lui+kScsDQogICAgICAgICdBcnRpY2xlUHN0JyAgPT4gJ+aWh+eroOWPkeW4gycsDQogICAgICAgICdBcnRpY2xlRGVsJyAgPT4gJ+aWh+eroOWIoOmZpCcsDQogICAgICAgICdBcnRpY2xlUHViJyAgPT4gJ+WFrOW8gOWPkeihqCcsDQogICAgICAgICdQYWdlRWR0JyAgICAgPT4gJ+mhtemdoue8lui+kScsDQogICAgICAgICdQYWdlUHN0JyAgICAgPT4gJ+mhtemdouWPkeW4gycsDQogICAgICAgICdQYWdlRGVsJyAgICAgPT4gJ+mhtemdouWIoOmZpCcsDQogICAgICAgICdDYXRlZ29yeUVkdCcgPT4gJ+WIhuexu+e8lui+kScsDQogICAgICAgICdDYXRlZ29yeVBzdCcgPT4gJ+WIhuexu+e8lui+keaPkOS6pCcsDQogICAgICAgICdDYXRlZ29yeURlbCcgPT4gJ+WIhuexu+WIoOmZpCcsDQogICAgICAgICdDb21tZW50RWR0JyAgPT4gJ+ivhOiuuue8lui+kScsDQogICAgICAgICdDb21tZW50U2F2JyAgPT4gJ+ivhOiuuue8lui+keS/neWtmCcsDQogICAgICAgICdDb21tZW50RGVsJyAgPT4gJ+ivhOiuuuWIoOmZpCcsDQogICAgICAgICdDb21tZW50Q2hrJyAgPT4gJ+ivhOiuuuWuoeaguCcsDQogICAgICAgICdDb21tZW50QmF0JyAgPT4gJ+aJuemHj+euoeeQhuivhOiuuicsDQogICAgICAgICdNZW1iZXJFZHQnICAgPT4gJ+S8muWRmOe8lui+kScsDQogICAgICAgICdNZW1iZXJQc3QnICAgPT4gJ+S8muWRmOe8lui+keaPkOS6pCcsDQogICAgICAgICdNZW1iZXJEZWwnICAgPT4gJ+S8muWRmOWIoOmZpCcsDQogICAgICAgICdNZW1iZXJOZXcnICAgPT4gJ+aWsOW7uuS8muWRmCcsDQogICAgICAgICdUYWdFZHQnICAgICAgPT4gJ+agh+etvue8lui+kScsDQogICAgICAgICdUYWdQc3QnICAgICAgPT4gJ+agh+etvuWPkeW4gycsDQogICAgICAgICdUYWdEZWwnICAgICAgPT4gJ+agh+etvuWIoOmZpCcsDQogICAgICAgICdUYWdOZXcnICAgICAgPT4gJ+aWsOW7uuagh+etvicsDQogICAgICAgICdQbHVnaW5FbmInICAgPT4gJ+aPkuS7tuWQr+eUqCcsDQogICAgICAgICdQbHVnaW5EaXMnICAgPT4gJ+aPkuS7tuemgeeUqCcsDQogICAgICAgICdVcGxvYWRQc3QnICAgPT4gJ+S4iuS8oOmZhOS7ticsDQogICAgICAgICdVcGxvYWREZWwnICAgPT4gJ+WIoOmZpOmZhOS7ticsDQogICAgICAgICdNb2R1bGVFZHQnICAgPT4gJ+aooeWdl+e8lui+kScsDQogICAgICAgICdNb2R1bGVQc3QnICAgPT4gJ+aooeWdl+e8lui+keS/neWtmCcsDQogICAgICAgICdNb2R1bGVEZWwnICAgPT4gJ+aooeWdl+WIoOmZpCcsDQogICAgICAgICdUaGVtZVNldCcgICAgPT4gJ+S4u+mimOiuvue9ricsDQogICAgICAgICdTaWRlYmFyU2V0JyAgPT4gJ+S+p+agj+iuvue9ricsDQogICAgICAgICdTZXR0aW5nU2F2JyAgPT4gJ+mFjee9ruS/neWtmCcsDQogICAgICAgICdBcnRpY2xlTW5nJyAgPT4gJ+aWh+eroOeuoeeQhicsDQogICAgICAgICdQYWdlTW5nJyAgICAgPT4gJ+mhtemdoueuoeeQhicsDQogICAgICAgICdDYXRlZ29yeU1uZycgPT4gJ+WIhuexu+euoeeQhicsDQogICAgICAgICdTZXR0aW5nTW5nJyAgPT4gJ+mFjee9rueuoeeQhicsDQogICAgICAgICdUYWdNbmcnICAgICAgPT4gJ+agh+etvueuoeeQhicsDQogICAgICAgICdDb21tZW50TW5nJyAgPT4gJ+ivhOiuuueuoeeQhicsDQogICAgICAgICdVcGxvYWRNbmcnICAgPT4gJ+mZhOS7tueuoeeQhicsDQogICAgICAgICdNZW1iZXJNbmcnICAgPT4gJ+eUqOaIt+euoeeQhicsDQogICAgICAgICdUaGVtZU1uZycgICAgPT4gJ+S4u+mimOeuoeeQhicsDQogICAgICAgICdQbHVnaW5NbmcnICAgPT4gJ+aPkuS7tueuoeeQhicsDQogICAgICAgICdNb2R1bGVNbmcnICAgPT4gJ+aooeWdl+euoeeQhicsDQogICAgICAgICdBcnRpY2xlQWxsJyAgPT4gJ+aJgOacieaWh+eroOadg+mZkCcsDQogICAgICAgICdQYWdlQWxsJyAgICAgPT4gJ+aJgOaciemhtemdouadg+mZkCcsDQogICAgICAgICdDYXRlZ29yeUFsbCcgPT4gJ+aJgOacieWIhuexu+adg+mZkCcsDQogICAgICAgICdDb21tZW50QWxsJyAgPT4gJ+aJgOacieivhOiuuuadg+mZkCcsDQogICAgICAgICdNZW1iZXJBbGwnICAgPT4gJ+aJgOacieeUqOaIt+adg+mZkCcsDQogICAgICAgICdUYWdBbGwnICAgICAgPT4gJ+aJgOacieagh+etvuadg+mZkCcsDQogICAgICAgICdVcGxvYWRBbGwnICAgPT4gJ+aJgOaciemZhOS7tuadg+mZkCcsDQogICAgICAgICdyb290JyAgICAgICAgPT4gJ+i2hee6p+adg+mZkCcsDQogICAgICAgICdOb1ZhbGlkQ29kZScgPT4gJ+aXoOinhumqjOivgeeggScsDQogICAgKSwNCg0KLy9BcnRpY2xlIExldmVsDQogICAgJ3Bvc3Rfc3RhdHVzX25hbWUnID0+IGFycmF5KA0KICAgICAgICAnMCcgPT4gJ+WFrOW8gCcsDQogICAgICAgICcxJyA9PiAn6I2J56i/JywNCiAgICAgICAgJzInID0+ICflrqHmoLgnLA0KICAgICksDQoNCi8vVXNlciBMZXZlbA0KICAgICd1c2VyX2xldmVsX25hbWUnID0+IGFycmF5KA0KICAgICAgICAnMScgPT4gJ+euoeeQhuWRmCcsDQogICAgICAgICcyJyA9PiAn572R56uZ57yW6L6RJywNCiAgICAgICAgJzMnID0+ICfkvZzogIUnLA0KICAgICAgICAnNCcgPT4gJ+WNj+S9nOiAhScsDQogICAgICAgICc1JyA9PiAn6K+E6K666ICFJywNCiAgICAgICAgJzYnID0+ICfmuLjlrqInLA0KICAgICksDQoNCiAgICAndXNlcl9zdGF0dXNfbmFtZScgPT4gYXJyYXkoDQogICAgICAgICcwJyA9PiAn5q2j5bi4JywNCiAgICAgICAgJzEnID0+ICflrqHmoLgnLA0KICAgICAgICAnMicgPT4gJ+emgeatoicsDQogICAgKSwNCg0KLy9KYW51YXJ5LCBGZWJydWFyeS4uLg0KICAgICdtb250aCcgPT4gYXJyYXkoDQogICAgICAgICcxJyAgPT4gJ+S4gOaciCcsDQogICAgICAgICcyJyAgPT4gJ+S6jOaciCcsDQogICAgICAgICczJyAgPT4gJ+S4ieaciCcsDQogICAgICAgICc0JyAgPT4gJ+Wbm+aciCcsDQogICAgICAgICc1JyAgPT4gJ+S6lOaciCcsDQogICAgICAgICc2JyAgPT4gJ+WFreaciCcsDQogICAgICAgICc3JyAgPT4gJ+S4g+aciCcsDQogICAgICAgICc4JyAgPT4gJ+WFq+aciCcsDQogICAgICAgICc5JyAgPT4gJ+S5neaciCcsDQogICAgICAgICcxMCcgPT4gJ+WNgeaciCcsDQogICAgICAgICcxMScgPT4gJ+WNgeS4gOaciCcsDQogICAgICAgICcxMicgPT4gJ+WNgeS6jOaciCcsDQogICAgKSwNCg0KLy9KYW4uLCBGZWIuIC4uLg0KICAgICdtb250aF9hYmJyJyA9PiBhcnJheSgNCiAgICAgICAgJzEnICA9PiAnMeaciCcsDQogICAgICAgICcyJyAgPT4gJzLmnIgnLA0KICAgICAgICAnMycgID0+ICcz5pyIJywNCiAgICAgICAgJzQnICA9PiAnNOaciCcsDQogICAgICAgICc1JyAgPT4gJzXmnIgnLA0KICAgICAgICAnNicgID0+ICc25pyIJywNCiAgICAgICAgJzcnICA9PiAnN+aciCcsDQogICAgICAgICc4JyAgPT4gJzjmnIgnLA0KICAgICAgICAnOScgID0+ICc55pyIJywNCiAgICAgICAgJzEwJyA9PiAnMTDmnIgnLA0KICAgICAgICAnMTEnID0+ICcxMeaciCcsDQogICAgICAgICcxMicgPT4gJzEy5pyIJywNCiAgICApLA0KDQovL1N1bmRheSwgTW9uZGF5Li4NCiAgICAnd2VlaycgPT4gYXJyYXkoDQogICAgICAgICc3JyA9PiAn5pif5pyf5pelJywNCiAgICAgICAgJzEnID0+ICfmmJ/mnJ/kuIAnLA0KICAgICAgICAnMicgPT4gJ+aYn+acn+S6jCcsDQogICAgICAgICczJyA9PiAn5pif5pyf5LiJJywNCiAgICAgICAgJzQnID0+ICfmmJ/mnJ/lm5snLA0KICAgICAgICAnNScgPT4gJ+aYn+acn+S6lCcsDQogICAgICAgICc2JyA9PiAn5pif5pyf5YWtJywNCiAgICApLA0KDQovL1N1bi4sIE1vbi4gLi4uDQogICAgJ3dlZWtfYWJicicgPT4gYXJyYXkoDQogICAgICAgICc3JyA9PiAn5pelJywNCiAgICAgICAgJzEnID0+ICfkuIAnLA0KICAgICAgICAnMicgPT4gJ+S6jCcsDQogICAgICAgICczJyA9PiAn5LiJJywNCiAgICAgICAgJzQnID0+ICflm5snLA0KICAgICAgICAnNScgPT4gJ+S6lCcsDQogICAgICAgICc2JyA9PiAn5YWtJywNCiAgICApLA0KDQogICAgJ3dlZWtfc2hvcnQnID0+IGFycmF5KA0KICAgICAgICAnNycgPT4gJ+WRqOaXpScsDQogICAgICAgICcxJyA9PiAn5ZGo5LiAJywNCiAgICAgICAgJzInID0+ICflkajkuownLA0KICAgICAgICAnMycgPT4gJ+WRqOS4iScsDQogICAgICAgICc0JyA9PiAn5ZGo5ZubJywNCiAgICAgICAgJzUnID0+ICflkajkupQnLA0KICAgICAgICAnNicgPT4gJ+WRqOWFrScsDQogICAgKSwNCg0KLy9DdXN0b20gRXJyb3IgSW5mb3JtYXRpb24NCiAgICAnZXJyb3InID0+IGFycmF5KA0KICAgICAgICAnMCcgID0+ICfmnKrnn6XplJnor68nLA0KICAgICAgICAnMScgID0+ICfmnKrnn6Xlkb3ku6QnLA0KICAgICAgICAnMicgID0+ICfnm7jlhbPpobXpnaLkuI3lrZjlnKgnLA0KICAgICAgICAnMycgID0+ICflj4LmlbDmj5DkuqTplJnor68nLA0KICAgICAgICAnNCcgID0+ICfmlbDmja7lupPov57mjqXplJnor68nLA0KICAgICAgICAnNScgID0+ICfpnZ7ms5Xorr/pl64nLA0KICAgICAgICAnNicgID0+ICfmsqHmnInmnYPpmZAnLA0KICAgICAgICAnNycgID0+ICfnlKjmiLflkI3moLzlvI/kuI3mraPnoa7vvIzlj6/og73ov4fplb/miJbkuLrnqbonLA0KICAgICAgICAnOCcgID0+ICfnmbvlvZXlpLHotKUnLA0KICAgICAgICAnOScgID0+ICfor6Xmlofnq6DkuI3lrZjlnKjmiJborr7nva7kuobmnYPpmZDjgIInLA0KICAgICAgICAnMTAnID0+ICfns7vnu5/liJ3lp4vljJblpLHotKUnLA0KICAgICAgICAnMTEnID0+ICfnvJbovpHmlofnq6DlpLHotKUnLA0KICAgICAgICAnMTInID0+ICfnvJbovpHliIbnsbvlpLHotKUnLA0KICAgICAgICAnMTMnID0+ICfor6XliIbnsbvkuIvmnInmlofnq6DvvIzliKDpmaTlpLHotKXjgIInLA0KICAgICAgICAnMTQnID0+ICfkvaDnmoTor4Torrrooqvns7vnu5/mi6bmiKrvvIzlj5HooajlpLHotKXjgIInLA0KICAgICAgICAnMTUnID0+ICflkI3np7DmoLzlvI/kuI3mraPnoa7vvIzlj6/og73ov4fplb/miJbkuLrnqbonLA0KICAgICAgICAnMTYnID0+ICfnvJbovpHnlKjmiLflpLHotKUnLA0KICAgICAgICAnMTcnID0+ICfliKDpmaTnlKjmiLflpLHotKUnLA0KICAgICAgICAnMTgnID0+ICfliKDpmaTor4TorrrlpLHotKUnLA0KICAgICAgICAnMTknID0+ICfliKDpmaTlvJXnlKjlpLHotKUnLA0KICAgICAgICAnMjAnID0+ICflj5HpgIHlvJXnlKjlpLHotKUnLA0KICAgICAgICAnMjEnID0+ICfmlofku7bkuIrkvKDlpLHotKUnLA0KICAgICAgICAnMjInID0+ICfmlofku7bliKDpmaTlpLHotKUnLA0KICAgICAgICAnMjMnID0+ICfns7vnu5/ph43lu7rlpLHotKUnLA0KICAgICAgICAnMjQnID0+ICfmkJzntKLlrZfnrKbkuLLlpLHotKUnLA0KICAgICAgICAnMjUnID0+ICfkv53lrZjorr7nva7lpLHotKUnLA0KICAgICAgICAnMjYnID0+ICfmlofku7bnsbvlnovotoXlh7rorr7lrprojIPlm7QnLA0KICAgICAgICAnMjcnID0+ICfmlofku7blpKflsI/otoXlh7rorr7lrprojIPlm7QnLA0KICAgICAgICAnMjgnID0+ICfmlofku7blt7LlrZjlnKjvvIzor7flhYjliKDpmaTjgIInLA0KICAgICAgICAnMjknID0+ICfpgq7nrrHmoLzlvI/kuI3mraPnoa7vvIzlj6/og73ov4fplb/miJbkuLrnqbonLA0KICAgICAgICAnMzAnID0+ICfnvZHlnYDmoLzlvI/kuI3mraPnoa7vvIzlj6/og73ov4fplb/miJbkuLrnqbonLA0KICAgICAgICAnMzEnID0+ICfor7fli7/lhpLlkI3pobbmm7/vvJvlpoLmnpzkvaDmmK/or6XnlKjmiLfvvIzor7flhYjnmbvlvZXlkI7lho3lj5Hooajor4TorrrjgIInLA0KICAgICAgICAnMzInID0+ICfmk43kvZzpopHnjofov4flv6snLA0KICAgICAgICAnMzMnID0+ICfnvJbovpHlhbPplK7lrZflpLHotKUnLA0KICAgICAgICAnMzQnID0+ICfliKDpmaTlhbPplK7lrZflpLHotKUnLA0KICAgICAgICAnMzUnID0+ICfnvJbovpFUYWflpLHotKUnLA0KICAgICAgICAnMzYnID0+ICfliKDpmaRUYWflpLHotKUnLA0KICAgICAgICAnMzcnID0+ICfnvJbovpHmlofku7blpLHotKUnLA0KICAgICAgICAnMzgnID0+ICfpqozor4HnoIHovpPlhaXplJnor68nLA0KICAgICAgICAnMzknID0+ICfor7fkuI3opoHlr7nnvZHnq5nmj5DkuqTnm7jlkIznmoTor4TorronLA0KICAgICAgICAnNDAnID0+ICfor4Torrrlip/og73lt7LlhbPpl60nLA0KICAgICAgICAnNDEnID0+ICflvJXnlKjlip/og73lt7LlhbPpl60nLA0KICAgICAgICAnNDInID0+ICfnvJbovpHor4TorrrlpLHotKUnLA0KICAgICAgICAnNDMnID0+ICfmoKHpqoznoIHplJnor6/vvIzor7fli7/lj5HluIPlnoPlnL7kv6Hmga/jgIInLA0KICAgICAgICAnNDQnID0+ICfpnZ7lhazlvIDmlofnq6DkuI3og73lj5Hooajor4TorronLA0KICAgICAgICAnNDUnID0+ICfnlZnoqIDmnKzlj6rlhYHorrjms6jlhoznlKjmiLflm57lpI3vvIzmuLjlrqLlj6rog73nlZnoqIDjgIInLA0KICAgICAgICAnNDYnID0+ICfor4TorrrlhoXlrrnkuI3og73kuLrnqbrmiJbov4fplb8nLA0KICAgICAgICAnNDcnID0+ICflm57lpI3lip/og73lj6rlr7nms6jlhoznlKjmiLflvIDlkK/vvIzmuLjlrqLlj6rog73nlZnoqIDjgIInLA0KICAgICAgICAnNDgnID0+ICfmj5Lku7bmnKrlkK/nlKjvvIzor7flnKjnrqHnkIbnlYzpnaLlkK/nlKjjgIInLA0KICAgICAgICAnNDknID0+ICfor6XliIbnsbvkuIvmnInlrZDliIbnsbvvvIzliKDpmaTlpLHotKXjgIInLA0KICAgICAgICAnNTAnID0+ICfmjIflrprnmoTniLbliIbnsbvkuI3lrZjlnKgnLA0KICAgICAgICAnNTEnID0+ICflrZDliIbnsbvkuIvkuI3og73lho3ljIXlkKvliIbnsbsnLA0KICAgICAgICAnNTInID0+ICfotoXov4fmnIDlpKflm57lpI3lsYLmlbAnLA0KICAgICAgICAnNTMnID0+ICfkvaDnmoTor4Torrrlt7Lov5vlhaXlrqHmoLjov4fnqIvvvIzor7fli7/lho3mrKHmj5DkuqTjgIInLA0KICAgICAgICAnNTQnID0+ICflr4bnoIHlj6rog73nlLFBLVphLXowLTlgfiE/QCMkJV4mKi1f5a2X56ym57uE5oiQ77yM5LiU5LiN6IO95bCP5LqOOOS9jeOAgeWkp+S6jjIw5L2N44CCJywNCiAgICAgICAgJzU1JyA9PiAn5Yqg5a+G5ZCO55qE5a2X56ym5Liy6ZW/5bqm5LiN562J5LqOMzInLA0KICAgICAgICAnNTYnID0+ICfotoXlh7rkuoborr7nva7nmoTlm57lpI3lsYLmlbAnLA0KICAgICAgICAnNTcnID0+ICfniLbor4TorrrlkozlrZDor4TorrrkuI3lnKjlkIzkuIDnr4fmlofnq6AnLA0KICAgICAgICAnNTgnID0+ICfniLbliIbnsbvkuI3lrZjlnKgnLA0KICAgICAgICAnNTknID0+ICflrZDliIbnsbvkuI3lrZjlnKgnLA0KICAgICAgICAnNjAnID0+ICflm57lpI3or4TorrrlpLHotKUnLA0KICAgICAgICAnNjEnID0+ICfor6XorrDlvZXkuI3lrZjlnKgnLA0KICAgICAgICAnNjInID0+ICflrZjlnKjlkIzlkI3nlKjmiLfvvIzor7fkv67mlLnnlKjmiLflkI3jgIInLA0KICAgICAgICAnNjMnID0+ICfnpoHmraLmtY/op4jojYnnqL/mlofnq6AnLA0KICAgICAgICAnNjQnID0+ICflkK/nlKjlpLHotKXvvIzor6XlupTnlKjkuI3pgILnlKjkuo5aLUJsb2dQSFDjgIInLA0KICAgICAgICAnNjUnID0+ICdXaW5kb3dzIFBob25l55So5oi36K+35Y2H57qn5YiwV2luZG93cyBQaG9uZSA4LjHlkI7lho3kuIrkvKDmlofku7bjgIInLA0KICAgICAgICAnNjYnID0+ICfnlKjmiLflkI3lkozlr4bnoIHkuI3og73kuLrnqbonLA0KICAgICAgICAnNjcnID0+ICdNeVNRTOaVsOaNruW6k+aXoOazlei/nuaOpScsDQogICAgICAgICc2OCcgPT4gJ1NRTGl0ZeaVsOaNruW6k+aXoOazleaJk+W8gCcsDQogICAgICAgICc2OScgPT4gJ+acquafpeivouWIsOebuOWFs+aVsOaNricsDQogICAgICAgICc3MCcgPT4gJ+ato+aWh+S4jeiDveS4uuepuicsDQogICAgICAgICc3MScgPT4gJ+W9k+WJjeeahOe8lui+keWGheWuuei/mOacquS/neWtmCcsDQogICAgICAgICc3MicgPT4gJ+WQjeensOS4jeiDveS4uuepuuaIluagvOW8j+S4jeato+ehricsDQogICAgICAgICc3MycgPT4gJ+ivt+ehruiupOWvhueggeaYr+WQpuiuvue9ruato+ehricsDQogICAgICAgICc3NCcgPT4gJ+aCqOi/mOWcqOeUqOmZiOaXp+eahElF5YaF5qC45rWP6KeI5Zmo5LmI77yf6K+35Y2H57qn6Iez5pSv5oyBSFRNTDXnmoRJRTEx5ZCnIVxyXG7opoHkuI3lkrHmjaLkuKpDaHJvbWXmiJZGaXJlZm946K+V6K+VKOKAlC7igJR8fHx8JywNCiAgICAgICAgJzc1JyA9PiAn5paH5Lu25ZCN5LiN6IO95Li656m677yBJywNCiAgICAgICAgJzc2JyA9PiAnSHRtbElE5LiN6IO95Li656m677yBJywNCiAgICAgICAgJzc3JyA9PiAn55So5oi35ZCN5Y+q6IO955So5Lit5paH44CB5pWw5a2X44CB5a2X5q+N44CB4oCcLuKAneS4juKAnF/igJ3vvIzkuJTplb/luqbpmZDliLbkuLozLTIw5L2N44CCJywNCiAgICAgICAgJzc4JyA9PiAn6K+l5bqU55So6ZyA6KaBJXPlj4rku6XkuIrniYjmnKznmoRaLUJsb2dQSFAnLA0KICAgICAgICAnNzknID0+ICfnlKjmiLfotKbmiLfmnKrlrqHmoLgnLA0KICAgICAgICAnODAnID0+ICfnlKjmiLfotKbmiLflt7LplIHlrponLA0KICAgICAgICAnODEnID0+ICfmnKrnn6Xmlrnms5XmiJblsZ7mgKcnLA0KICAgICAgICAnODInID0+ICfnvZHnq5nlt7LlhbPpl60nLA0KICAgICAgICAnODMnID0+ICflkK/nlKjor6XlupTnlKjvvIzpnIDopoHlhYjlkK/nlKjkvp3otZblupTnlKglcycsDQogICAgICAgICc4NCcgPT4gJ+WBnOeUqOivpeW6lOeUqO+8jOmcgOimgeWFiOWBnOeUqOiiq+S+nei1luW6lOeUqCVzJywNCiAgICAgICAgJzg1JyA9PiAn5ZCv55So6K+l5bqU55So77yM6ZyA6KaB5YWI5YGc55So5Yay56qB5bqU55SoJXMnLA0KICAgICAgICAnODYnID0+ICfkuLvpopjmqKHmnb/nmoTnvJbor5Hmlofku7bkuI3lrZjlnKjjgIInLA0KICAgICAgICAnODcnID0+ICfms6jlhoznsbvlnovlpLHotKXjgIInLA0KICAgICAgICAnODgnID0+ICfkuIrkvKDnmoTmlofku7bkuI3lrZjlnKjvvIzlj6/og73otoXov4fkuobmnI3liqHlmajmnIDlpKfkuIrkvKDpmZDliLbjgIInLA0KICAgICAgICAnODknID0+ICflkI7lj7BKYXZhU2NyaXB05Yqg6L295aSx6LSl77yBJywNCiAgICAgICAgJzkwJyA9PiAn5Yir5ZCN5LiN5YWB6K645L2/55So54m55q6K56ym5Y+344CCJywNCiAgICAgICAgJzkxJyA9PiAnUEhQ54mI5pys5aSq5pen77yM6K+l5bqU55So6KaB5rGC5L2/55SoICVzIOWPiuS7peS4iueJiOacrOOAgicsDQogICAgICAgICc5MicgPT4gJ+e8uuWwkSAlcyDlh73mlbDvvIzml6Dms5XlkK/nlKjmnKzlupTnlKgnLA0KICAgICAgICAnOTMnID0+ICfmraTmlofnq6Dlt7Lnu4/ooqvlhbbku5bpobXpnaLmm7TmlrDvvIzoh6rliqjlpIfku73lt7LlhbPpl63jgILlpoLpnIDph43lkK/oh6rliqjlpIfku73vvIzor7fliLfmlrDpobXpnaLjgIInLA0KICAgICAgICAnOTQnID0+ICfmgqjlnKjmraTpobXpnaLlt7LlgZznlZkgJXMg5bCP5pe277yM5Y+v6IO96ZyA6KaB5Yi35paw6aG16Z2i5ZCO5omN6IO95q2j5bi45L2/55So5ZCE5Yqf6IO944CCJywNCiAgICApLA0KDQogICAgJ29mZmljYWxfdXJscycgPT4gYXJyYXkoDQogICAgICAgICdtb3JlX2hlbHAnID0+ICdodHRwczovL3d3dy56YmxvZ2NuLmNvbS9oZWxwLz9pZD17JWlkJX0mbWVzc2FnZT17JW1lc3NhZ2UlfScsDQogICAgKSwNCg0KLy8gUG9zc2libGUgY2F1c2VzIG9mIHRoZSBlcnJvcg0KICAgICdlcnJvcl9yZWFzb25zJyA9PiBhcnJheSgNCiAgICAgICAgLy8gLTEgZm9yIGRlZmF1bHQNCiAgICAgICAgJ2RlZmF1bHQnID0+ICcnLA0KDQogICAgICAgIC8vIFpCUCBlcnJvcnMgZmlyc3QNCiAgICAgICAgJzYnID0+ICcNCgkJCeaCqOaYr+WQpuW3sue7j+eZu+W9le+8n+ivt+WFiOeZu+W9leWQjuWPsO+8jOWGjemHjeivleaTjeS9nOOAgjxici8+DQoJCQnmgqjmmK/lkKbmnInmraTlip/og73miYDpnIDnmoTmnYPpmZDvvJ/mgqjlj6/ku6U8YSBocmVmPSJ7JWJsb2dob3N0JX16Yl9zeXN0ZW0vY21kLnBocD9hY3Q9bWlzYyZ0eXBlPXZycyIgdGFyZ2V0PSJfYmxhbmsiPueCueWHu+i/memHjOafpeeci+aCqOeahOadg+mZkDwvYT7jgII8YnIvPg0KCQkJPGJyLz4NCgkJJywNCiAgICAgICAgJzgnID0+ICcNCgkJCeaCqOaYr+WQpui+k+WFpeS6huato+ehrueahOeUqOaIt+WQjeWSjOWvhuegge+8nzxici8+DQoJCQnlpoLmnpzmgqjmmK/nvZHnq5nnrqHnkIblkZjkuJTlv5jorrDkuoblr4bnoIHvvIzlj6/ku6Xngrnlh7s8YSBocmVmPSJodHRwczovL3dpa2kuemJsb2djbi5jb20vZG9rdS5waHA/aWQ9emJsb2dwaHA6ZXJyb3I6JUU5JUE2JTk2JUU5JUExJUI1I2Vycm9yLTgiIHRhcmdldD0iX2JsYW5rIj7jgJDnmbvlvZXlpLHotKXjgJE8L2E+44CCPGJyLz4NCgkJCTxici8+DQoJCScsDQogICAgICAgICc5MScgPT4gJw0KICAgICAgICAgICAg5oKo55qEUEhQ54mI5pys5Y+v6IO95aSq5pen77yM6K+35oKo6IGU57O75oKo55qE5Li75py65ZWG77yM5oqKUEhQ54mI5pys5Y2H57qn5Li65LuW5Lus5omA6IO95o+Q5L6b55qE5pyA5paw54mI5pys44CCPGJyLz4NCiAgICAgICAgICAgIOS4uuS6huWuieWFqOS4juaViOeOh++8jOaIkeS7rOS5n+W8uueDiOW7uuiuruaCqOaKiuaCqOeahFBIUOabtOaWsOWIsOacgOaWsOeJiOacrOOAgg0KICAgICAgICAnLA0KICAgICAgICAnOTInID0+ICcNCiAgICAgICAgICAgIOaCqOeahOS4u+acuueOr+Wig+WPr+iDvee8uuWwkeafkOS6m+W/heimgee7hOS7tu+8jOivt+iBlOezu+aCqOeahOS4u+acuuWVhuWQr+eUqOi/meS6m+e7hOS7tu+8jOaJjeWPr+S9v+eUqOacrOW6lOeUqOOAgjxici8+DQogICAgICAgICAgICDmgqjlj6/ku6U8YSBocmVmPSJodHRwczovL3dpa2kuemJsb2djbi5jb20vZG9rdS5waHA/aWQ9emJsb2dwaHA6ZXJyb3I6JUU5JUE2JTk2JUU5JUExJUI1I2Vycm9yLTkyIiB0YXJnZXQ9Il9ibGFuayI+54K55Ye76L+Z6YeM77yM5p2l6I635b6X57y65bCR57uE5Lu255qE5aSn6Ie05YiX6KGo44CCPC9hPg0KICAgICAgICAnLA0KDQogICAgICAgICdvdGhlcicgPT4gYXJyYXkoDQogICAgICAgICAgICAvLyBPdGhlciBlcnJvcnMgdGhlbg0KICAgICAgICAgICAgJ215c3FsJyA9PiAnDQoJCQkJ5oKo5ZyoemJfdXNlcnMvY19vcHRpb24ucGhw5YaF6YWN572u44CB5oiW5Yia5omN5aGr5YaZ55qE55qEIE15U1FMIOi/nuaOpeS/oeaBr+aYr+WQpuato+ehru+8nzxici8+DQoJCQkJ5oKo5omA6L+e5o6l55qEIE15U1FMIOaVsOaNruW6k+aYr+WQpuW3sue7j+aIkOWKn+WQr+WKqO+8nzxici8+DQoJCQkJPGJyLz4NCgkJCScsDQoNCiAgICAgICAgICAgICdzcWxpdGUnID0+ICcNCgkJCQnmgqjlnKh6Yl91c2Vycy9jX29wdGlvbi5waHDlhoXphY3nva7nmoQgU1FMaXRlIOi/nuaOpeS/oeaBr+aYr+WQpuato+W4uO+8nzxici8+DQoJCQkJ5oKo5piv5ZCm5pyJ55u45YWzIFNRTGl0ZSDmlbDmja7lupPnmoTor7vlhpnmnYPpmZDvvJ88YnIvPg0KCQkJCeebuOWFsyBTUUxpdGUg5pWw5o2u5bqT5piv5ZCm6KKr5o2f5Z2P77yfPGJyLz4NCgkJCQk8YnIvPg0KCQkJJywNCg0KICAgICAgICAgICAgJ2FjY2VzcycgPT4gJw0KCQkJCeaCqOaYr+WQpuWwhlotQmxvZ1BIUOaWh+S7tuWkueWGheaJgOacieaWh+S7tueahOadg+mZkOiuvue9ruS4ujA3NzfmiJYwNzU177yf5aaC5p6c5oKo5LiN55+l6YGT77yM6K+36IGU57O75oKo55qE56m66Ze05ZWG44CCPGJyLz4NCgkJCQk8YnIvPg0KCQkJJywNCg0KICAgICAgICAgICAgJ2Rpc2FibGVkIGZvciBzZWN1cml0eSByZWFzb25zJyA9PiAnDQoJCQkJ5oKo55qE5Li75py65byA5ZCv5LqGUEhQ5a6J5YWo5qih5byP77yM5a+86Ie05p+Q5Lqb5Ye95pWw5peg5rOV5L2/55So44CC5bu66K6u77yaPGJyLz4NCgkJCQkxLiDogZTns7vmgqjnmoTkuLvmnLrllYblhbPpl63igJzlronlhajmqKHlvI/igJ08YnIvPg0KCQkJCTIuIOWFs+mXreafkOS6m+S9v+eUqOebuOWFs+WHveaVsOeahOaPkuS7tu+8jOaIluiBlOezu+i/meS6m+aPkuS7tueahOS9nOiAheOAgjxici8+DQoJCQkJPGJyLz4NCgkJCScsDQoNCiAgICAgICAgKSwNCg0KICAgICAgICAnZW5kJyA9PiAnDQoJCQnlpoLmnpzmgqjmmK/orr/lrqLvvIzov5nor7TmmI7nvZHnq5nnqIvluo/lj6/og73lh7rnjrDkuobkuIDkupvplJnor6/jgILor7fmgqjnqI3lkI7lho3or5XvvIzmiJbogZTns7vnq5nplb/jgII8YnIvPg0KCQkJ5aaC5p6c5oKo5piv56uZ6ZW/77yM5oKo5Y+v5Lul54K55Ye7PGEgaHJlZj0ieyVtb3JlaGVscCV9IiB0YXJnZXQ9Il9ibGFuayI+44CQ5pu05aSa5L+h5oGv44CRPC9hPuadpeafpeeci1otQmxvZ+WumOaWueWFs+S6jui/meS4qumUmeivr+eahOivtOaYju+8jOS5n+WPr+S7peWIsDxhIGhyZWY9Imh0dHBzOi8vYmJzLnpibG9nY24uY29tLyIgdGFyZ2V0PSJfYmxhbmsiPlotQmxvZ+WumOaWueiuuuWdmzwvYT7vvIzpmYTkuIrplJnor6/or6bnu4bmiKrlm77kuI7mj4/ov7Dlr7vmsYLluK7liqnjgIINCgkJJywNCiAgICApLA0KDQopOw0K</file>
	<file name='zb_users\language\zh-tw.php' crc32='58F022C4'  dt:dt='bin.base64'></file>
</files>